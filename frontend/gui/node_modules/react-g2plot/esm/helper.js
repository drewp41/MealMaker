/**
 * debounce function
 * @param fn
 * @param delay
 */
export var debounce = function (fn, delay) {
    if (delay === void 0) { delay = 100; }
    var timer = null;
    return function () {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        clearTimeout(timer);
        timer = setTimeout(function () {
            fn.apply(_this, args);
        }, delay);
    };
};
/**
 * size
 * @param v
 */
export var size = function (v) {
    if (!v)
        return 0;
    if (Array.isArray(v)) {
        return v.length;
    }
    if (typeof v === 'object') {
        return Object.keys(v).length;
    }
    return 0;
};
/**
 * get
 * @param v
 * @param path
 */
export var get = function (v, path, def) {
    var r = v;
    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
        var p = path_1[_i];
        if (r === undefined)
            break;
        r = r[p];
    }
    return r === undefined ? def : r;
};
//# sourceMappingURL=helper.js.map