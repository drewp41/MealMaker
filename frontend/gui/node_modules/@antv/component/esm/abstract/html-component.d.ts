import { BBox, ComponentCfg, HtmlComponentCfg } from '../types';
import Component from './component';
declare abstract class HtmlComponent<T extends ComponentCfg = HtmlComponentCfg> extends Component<T> {
    getDefaultCfg(): {
        id: string;
        name: string;
        type: string;
        locationType: string;
        offsetX: number;
        offsetY: number;
        animate: boolean;
        updateAutoRender: boolean;
        animateOption: {
            appear: any;
            update: {
                duration: number;
                easing: string;
            };
            enter: {
                duration: number;
                easing: string;
            };
            leave: {
                duration: number;
                easing: string;
            };
        };
        events: any;
        defaultCfg: {};
        visible: boolean;
    } | {
        container: any;
        containerTpl: string;
        updateAutoRender: boolean;
        parent: any;
        id: string;
        name: string;
        type: string;
        locationType: string;
        offsetX: number;
        offsetY: number;
        animate: boolean;
        animateOption: {
            appear: any;
            update: {
                duration: number;
                easing: string;
            };
            enter: {
                duration: number;
                easing: string;
            };
            leave: {
                duration: number;
                easing: string;
            };
        };
        events: any;
        defaultCfg: {};
        visible: boolean;
    };
    getContainer(): HTMLElement;
    /**
     * 显示组件
     */
    show(): void;
    /**
     * 隐藏组件
     */
    hide(): void;
    getBBox(): BBox;
    clear(): void;
    destroy(): void;
    /**
     * 复写 init，主要是初始化 DOM 和事件
     */
    init(): void;
    protected initVisible(): void;
    protected initContainer(): void;
    /**
     * @protected
     */
    protected createDom(): any;
    /**
     * @protected
     * 初始化事件
     */
    protected initEvent(): void;
    /**
     * @protected
     * 清理 DOM
     */
    protected removeDom(): void;
    /**
     * @protected
     * 清理事件
     */
    protected removeEvent(): void;
}
export default HtmlComponent;
