{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/components/base.ts"],"names":[],"mappings":";AAAA,OAAO,YAAY,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAMlC;IAAyG,iCAAY;IAOnH,uBAAmB,MAAS;QAA5B,YACE,iBAAO,SAOR;QANC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACvC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;IACpB,CAAC;IAEM,gCAAQ,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,+BAAO,GAAd;QACE,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IAEM,6BAAK,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAEM,8BAAM,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,8BAAM,GAAb,UAAc,MAAkB;QAC9B,IAAI,CAAC,MAAM,yBAAQ,IAAI,CAAC,MAAM,GAAK,MAAM,CAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,uBAAM,IAAI,CAAC,MAAM,KAAE,MAAM,QAAA,IAAG,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,+BAAO,GAAd;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,EAAE;YACxB,EAAE,EAAE,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAES,iCAAS,GAAnB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAES,qCAAa,GAAvB,UAAwB,EAAc;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAKH,oBAAC;AAAD,CAAC,AA9DD,CAAyG,YAAY,GA8DpH","sourcesContent":["import EventEmitter from '@antv/event-emitter';\nimport { Canvas, IGroup, BBox } from '../dependents';\nimport { each } from '@antv/util';\n\nexport interface BaseComponentConfig {\n  container: IGroup;\n}\n\nexport default abstract class BaseComponent<T extends BaseComponentConfig = BaseComponentConfig> extends EventEmitter {\n  protected container: IGroup;\n  protected group: IGroup;\n  protected destroyed: boolean;\n  protected config: T;\n  private disposables: (() => void)[];\n\n  public constructor(config: T) {\n    super();\n    this.container = config.container;\n    this.destroyed = false;\n    this.group = this.container.addGroup();\n    this.config = config;\n    this.disposables = [];\n    this.init(config);\n  }\n\n  public getGroup(): IGroup {\n    return this.group;\n  }\n\n  public getBBox(): BBox {\n    return this.getGroup().getBBox();\n  }\n\n  public clear() {\n    this.group.clear();\n  }\n\n  public render(): void {\n    this.renderInner(this.group);\n    this.getCanvas().draw();\n  }\n\n  public update(config: Partial<T>): void {\n    this.config = { ...this.config, ...config };\n    this.init({ ...this.config, config });\n    this.group.clear();\n    this.renderInner(this.group);\n    this.getCanvas().draw();\n  }\n\n  public destroy(): void {\n    each(this.disposables, (fn) => {\n      fn();\n    });\n    this.disposables = [];\n    this.group.remove(true);\n    this.destroyed = true;\n  }\n\n  protected getCanvas(): Canvas {\n    return this.container.get('canvas');\n  }\n\n  protected addDisposable(fn: () => void) {\n    this.disposables.push(fn);\n  }\n\n  protected abstract init(config: T): void;\n\n  protected abstract renderInner(group: IGroup): void;\n}\n"]}