{"version":3,"file":"state.js","sourceRoot":"","sources":["../../../src/components/tooltip/state.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAC1D,OAAO,EAAE,OAAO,EAAE,MAAM,6BAA6B,CAAC;AAEtD,IAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;AAE3D,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS;IAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;IAC3B,2EAA2E;IAC3E,IAAI,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;QAClC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,UAAC,CAAC;YACX,IAAI,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;gBACzB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjC,kBAAkB;gBAClB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC;oBAC/B,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,SAAS;IAChC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC;QAC/B,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO;IACzC,IAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACxC,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClB,IAAI,CAAC,WAAW,EAAE,UAAC,IAAI;QACrB,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAClC,IAAI,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK,QAAQ,EAAE;YAC3C,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,SAAS;IACpC,IAAM,MAAM,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACvC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAClE,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAK;IAC7B,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAI,CAAC,eAAe,EAAE,UAAC,CAAC;QACtB,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,eAAe;IACb,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,SAAS;CACnB,CAAC","sourcesContent":["import { each, clone, isFunction, has } from '@antv/util';\nimport { compare } from '../../base/controller/state';\n\nconst POSITION_MAPPER = ['xField', 'yField', 'angleField'];\n\nfunction onActive(plot, condition) {\n  const props = plot.options;\n  // 获取state condition对应在画布的位置，只有在state condition对应字段为位置映射字段时，tooltip才会对齐进行响应\n  if (shouldActive(props, condition)) {\n    const data = props.data;\n    each(data, (d) => {\n      if (compare(d, condition)) {\n        const point = plot.view.getXY(d);\n        // 调用showTooltip方法\n        plot.view.on('tooltip:create', (e) => {\n          processState(condition, e, false);\n        });\n        plot.view.showTooltip(point);\n      }\n    });\n  }\n}\n\nfunction onDisable(plot, condition) {\n  plot.view.on('tooltip:change', (e) => {\n    processState(condition, e, true);\n  });\n}\n\nfunction processState(condition, e, inverse) {\n  const expected = inverse ? false : true;\n  const originItems = clone(e.items);\n  e.items.splice(0);\n  each(originItems, (item) => {\n    const origin = item.point._origin;\n    if (compare(origin, condition) === expected) {\n      e.items.push(item);\n    }\n  });\n}\n\nfunction shouldActive(props, condition) {\n  const fields = getPositionField(props);\n  return !isFunction(condition) && fields.indexOf(condition.name);\n}\n\nfunction getPositionField(props) {\n  const fields = [];\n  each(POSITION_MAPPER, (v) => {\n    if (has(props, v)) {\n      fields.push(v);\n    }\n  });\n  return fields;\n}\n\nexport default {\n  active: onActive,\n  selected: onActive,\n  disable: onDisable,\n};\n"]}