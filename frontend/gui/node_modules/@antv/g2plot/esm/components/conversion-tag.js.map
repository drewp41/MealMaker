{"version":3,"file":"conversion-tag.js","sourceRoot":"","sources":["../../src/components/conversion-tag.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 转化率组件，用于柱状图和条形图，展示从一个值到另一个值的转化率。\n */\nimport { IGroup } from '@antv/g-base';\nimport { View } from '@antv/g2';\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nimport { each, deepMix, get } from '@antv/util';\n\nfunction parsePoints(shape, coord) {\n  const parsedPoints = [];\n  const points = shape.get('origin').points;\n  each(points, (p) => {\n    parsedPoints.push(coord.convertPoint(p));\n  });\n  return parsedPoints;\n}\nexport interface ConversionTagOptions {\n  visible: boolean;\n  size?: number;\n  spacing?: number;\n  offset?: number;\n  arrow?: ArrowOptions;\n  value?: ValueOptions;\n  animation?: any;\n  transpose?: boolean;\n}\n\ninterface ArrowOptions {\n  visible: boolean;\n  headSize?: number;\n  style?: any;\n}\n\ninterface ValueOptions {\n  visible: boolean;\n  style?: any;\n  formatter?: (valueUpper: any, valueLower: any) => string;\n}\n\nexport interface ConversionTagConfig extends ConversionTagOptions {\n  view: View;\n  field: string;\n}\n\nexport default class ConversionTag {\n  public static getDefaultOptions({ transpose }: ConversionTagConfig): ConversionTagOptions {\n    return {\n      visible: true,\n      size: transpose ? 32 : 80,\n      spacing: transpose ? 8 : 12,\n      offset: transpose ? 32 : 0,\n      arrow: {\n        visible: true,\n        headSize: 12,\n        style: {\n          fill: 'rgba(0, 0, 0, 0.05)',\n        },\n      },\n      value: {\n        visible: true,\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.85)',\n        },\n        formatter: (valueUpper: any, valueLower: any) => `${((100 * valueLower) / valueUpper).toFixed(2)}%`,\n      },\n      animation: deepMix({}, DEFAULT_ANIMATE_CFG),\n    };\n  }\n\n  private view: View;\n  private container: IGroup;\n  private transpose?: boolean;\n  private field: string;\n  private size: number;\n  private offset: number;\n  private spacing: number;\n  private arrow: ArrowOptions;\n  private value: ValueOptions;\n  private animation: boolean;\n\n  constructor(cfg: ConversionTagConfig) {\n    // @ts-ignore\n    deepMix(this, this.constructor.getDefaultOptions(cfg), cfg);\n    this._init();\n  }\n\n  private _init() {\n    const layer = this.view.backgroundGroup;\n    this.container = layer.addGroup();\n    this.draw();\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n  }\n\n  public draw() {\n    const { transpose } = this;\n    const { values } = this.view.getScaleByField(this.field);\n    const geometry = this.view.geometries[0];\n    const shapes = geometry.getShapes();\n\n    let shapeLower, valueLower, shapeUpper, valueUpper;\n\n    if (transpose) {\n      shapes.forEach((shapeLower, i) => {\n        valueLower = values[i];\n        if (i++ > 0) {\n          this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n        valueUpper = valueLower;\n        shapeUpper = shapeLower;\n      });\n    } else {\n      shapes.forEach((shapeUpper, i) => {\n        valueUpper = values[i];\n        if (i++ > 0) {\n          this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n        valueLower = valueUpper;\n        shapeLower = shapeUpper;\n      });\n    }\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n  }\n\n  private _drawTag(shapeUpper, valueUpper, shapeLower, valueLower) {\n    const { transpose } = this;\n    const coord = this.view.geometries[0].coordinate;\n    const pointUpper = parsePoints(shapeUpper, coord)[transpose ? 3 : 0];\n    const pointLower = parsePoints(shapeLower, coord)[transpose ? 0 : 3];\n    this._drawTagArrow(pointUpper, pointLower);\n    this._drawTagValue(pointUpper, valueUpper, pointLower, valueLower);\n  }\n\n  private _drawTagArrow(pointUpper, pointLower) {\n    let { spacing } = this;\n    const { size, offset, animation, transpose } = this;\n    const { headSize } = this.arrow;\n    const totalHeight = pointLower.y - pointUpper.y;\n    const totalWidth = pointLower.x - pointUpper.x;\n\n    let points;\n\n    if (transpose) {\n      if ((totalWidth - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalWidth - headSize) / 2);\n        points = [\n          [pointUpper.x + spacing, pointUpper.y - offset],\n          [pointUpper.x + spacing, pointUpper.y - offset - size],\n          [pointLower.x - spacing, pointLower.y - offset - size / 2],\n        ];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [\n          [pointUpper.x + spacing, pointUpper.y - offset],\n          [pointUpper.x + spacing, pointUpper.y - offset - size],\n          [pointLower.x - spacing - headSize, pointLower.y - offset - size],\n          [pointLower.x - spacing, pointLower.y - offset - size / 2],\n          [pointLower.x - spacing - headSize, pointLower.y - offset],\n        ];\n      }\n    } else {\n      if ((totalHeight - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalHeight - headSize) / 2);\n        points = [\n          [pointUpper.x + offset, pointUpper.y + spacing],\n          [pointUpper.x + offset + size, pointUpper.y + spacing],\n          [pointLower.x + offset + size / 2, pointLower.y - spacing],\n        ];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [\n          [pointUpper.x + offset, pointUpper.y + spacing],\n          [pointUpper.x + offset + size, pointUpper.y + spacing],\n          [pointLower.x + offset + size, pointLower.y - spacing - headSize],\n          [pointLower.x + offset + size / 2, pointLower.y - spacing],\n          [pointLower.x + offset, pointLower.y - spacing - headSize],\n        ];\n      }\n    }\n\n    const tagArrow = this.container.addShape('polygon', {\n      name: 'arrow',\n      attrs: {\n        ...this.arrow.style,\n        points,\n      },\n    });\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagArrow);\n    }\n  }\n\n  private _drawTagValue(pointUpper, valueUpper, pointLower, valueLower) {\n    const { size, offset, animation, transpose } = this;\n\n    const text = this.value.formatter(valueUpper, valueLower);\n\n    const tagValue = this.container.addShape('text', {\n      name: 'value',\n      attrs: {\n        ...this.value.style,\n        text,\n        x: transpose ? (pointUpper.x + pointLower.x) / 2 : pointUpper.x + offset + size / 2,\n        y: transpose ? pointUpper.y - offset - size / 2 : (pointUpper.y + pointLower.y) / 2,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    });\n\n    if (transpose) {\n      const totalWidth = pointLower.x - pointUpper.x;\n      const { width: textWidth } = tagValue.getBBox();\n      if (textWidth > totalWidth) {\n        const cWidth = textWidth / text.length;\n        const cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n        const textAdjusted = `${text.slice(0, cEnd)}...`;\n        tagValue.attr('text', textAdjusted);\n      }\n    }\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagValue);\n    }\n  }\n\n  private _fadeInTagShape(shape) {\n    const { animation } = this;\n\n    const opacity = shape.attr('opacity');\n    shape.attr('opacity', 0);\n    const { duration } = get(animation, 'appear', DEFAULT_ANIMATE_CFG.appear);\n    shape.animate({ opacity }, duration);\n  }\n}\n"]}