{"version":3,"file":"state.js","sourceRoot":"","sources":["../../../src/components/axis/state.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, clone, isObject, isFunction } from '@antv/util';\n// import { compare } from '../../base/controller/state';\n\n// 对axis label和label样式进行缓存\nlet labels;\nlet originAttrs;\n\nfunction onActive(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n  each(labels, (label) => {\n    const { labelData, con } = beforeCompare(label, condition);\n    if (compare(labelData, con)) {\n      const disableStyle = labelActiveStyle();\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction onDisable(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n  each(labels, (label, index) => {\n    const { labelData, con } = beforeCompare(label, condition);\n    if (compare(labelData, con)) {\n      const originAttr = originAttrs[index];\n      const disableStyle = labelDisableStyle(originAttr);\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction getAllAxisLabels(plot) {\n  labels = [];\n  originAttrs = [];\n  const axes = plot.view.getController('axis').getComponents();\n  each(axes, (axisComponentOption) => {\n    const axis = axisComponentOption.component;\n    const labelArr = [];\n    const scale = getScale(plot, axis);\n    const labelShapes = axis.get('labelRenderer').get('group').get('children');\n    each(labelShapes, (shape) => {\n      if (shape.type === 'text') {\n        labelArr.push({ shape });\n        originAttrs.push(shape.attr());\n      }\n    });\n    if (scale) {\n      // 取到scale values作为原始数据，避免被label format的影响\n      const { ticks, field } = scale;\n      each(labelArr, (label, index) => {\n        label.value = ticks[index];\n        label.scaleField = field;\n        label.type = scale.type;\n      });\n    }\n    labels.push(...labelArr);\n  });\n}\n\n// 获取坐标轴对应的scale\nfunction getScale(plot, axis) {\n  const props = plot.options;\n  let dim = 'y';\n  const position = axis.get('position');\n  if (position === 'bottom' || position === 'top') {\n    dim = 'x';\n  }\n  const scaleField = props[`${dim}Field`];\n  return plot.view.get('scales')[scaleField];\n}\n\nfunction beforeCompare(label, condition) {\n  const labelData = { [label.scaleField]: label.value };\n  const con = clone(condition);\n  if (label.type === 'time' && isObject(condition) && !isFunction(con.exp)) {\n    con.exp = new Date(con.exp).getTime();\n  }\n  return { labelData, con };\n}\n\nfunction labelDisableStyle(style) {\n  const opacity = style.opacity || 1;\n  return { opacity: opacity * 0.2 };\n}\n\nfunction labelActiveStyle() {\n  return { opacity: 1, fontWeight: 600, fill: 'red' };\n}\n\nfunction compare(origin, condition) {\n  if (!isFunction(condition)) {\n    const { name, exp } = condition;\n    if (!origin[name]) {\n      return false;\n    }\n    if (isFunction(exp)) {\n      return exp(origin[name]);\n    }\n    return origin[name] === exp;\n  }\n  return condition(origin);\n}\n\nexport default {\n  active: onActive,\n  selected: onActive,\n  disable: onDisable,\n};\n"]}