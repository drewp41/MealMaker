{"version":3,"file":"parser.js","sourceRoot":"","sources":["../../../src/components/axis/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, isFunction, get } from '@antv/util';\nimport { ViewLayer } from '../..';\nimport { IBaseAxis } from '../../interface/config';\nimport { combineFormatter, getNoopFormatter, getPrecisionFormatter, getSuffixFormatter } from '../../util/formatter';\n\nfunction propertyMapping(source, target, field) {\n  if (source[field]) {\n    target[field] = source[field];\n  }\n}\n\ninterface AxisConfig {\n  plot: ViewLayer;\n  dim: string;\n}\n\nexport default class AxisParser {\n  public config: any = false;\n  protected originConfig: any;\n  private plot: any;\n  private dim: string;\n  private localProps: IBaseAxis;\n  private themeConfig: any;\n\n  constructor(cfg: AxisConfig) {\n    this.plot = cfg.plot;\n    this.dim = cfg.dim;\n    this.init();\n  }\n\n  private init() {\n    this.config = false;\n    const theme = this.plot.getPlotTheme();\n    this.themeConfig = theme && theme.axis && theme.axis[this.dim];\n    if (this._needDraw()) {\n      this._styleParser();\n    }\n  }\n\n  private _styleParser() {\n    this.config = { ...this.localProps };\n    this._isVisible('line') ? this._lineParser() : (this.config.line = null);\n    this._isVisible('grid') ? this._gridParser() : (this.config.grid = null);\n    this._isVisible('tickLine') ? this._tickLineParser() : (this.config.tickLine = null);\n    this._isVisible('label') ? this._labelParser() : (this.config.label = null);\n    this._isVisible('title') ? this._titleParser() : (this.config.title = null);\n\n    propertyMapping(this.localProps, this.config, 'autoHideLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateTitle');\n  }\n\n  private _needDraw() {\n    /** 如果在图表配置项里没有设置坐标轴整体的visibility则去对应的theme取 */\n    const propos = this.plot.options;\n    const propsConfig = propos[`${this.dim}Axis`] ? propos[`${this.dim}Axis`] : {};\n    const config = deepMix({}, this.themeConfig, propsConfig);\n    this.localProps = config;\n    if (config.visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private _lineParser() {\n    this.config.line = this.localProps.line;\n    if (this.localProps.line.style) {\n      this.config.line = { style: this.localProps.line.style };\n    }\n    this.applyThemeConfig('line');\n  }\n\n  private _gridParser() {\n    const style = this.localProps.grid?.line?.style;\n    const type = this.localProps.grid?.line?.type;\n    const alternateColor = this.localProps.grid?.alternateColor;\n\n    if (isFunction(style)) {\n      this.config.grid = (text: string, index: number, count: number) => {\n        const cfg = style(text, index, count);\n        return {\n          line: {\n            type,\n            style: deepMix({}, get(this.themeConfig, `grid.line.style`), cfg),\n          },\n          alternateColor,\n        };\n      };\n    } else if (style) {\n      this.config.grid = {\n        line: {\n          type,\n          style,\n        },\n        alternateColor,\n      };\n      this.applyThemeConfig('grid');\n    }\n  }\n\n  private _tickLineParser() {\n    this.config.tickLine = this.localProps.tickLine;\n    if (this.localProps.tickLine.style) {\n      this.config.tickLine = { style: this.localProps.tickLine.style };\n    }\n    this.applyThemeConfig('tickLine');\n  }\n\n  private _labelParser() {\n    const { style, ...restLabelProps } = this.localProps.label;\n    const labelConfig: any = { ...restLabelProps };\n    if (style) {\n      labelConfig.style = { ...this.localProps.label.style };\n    }\n    labelConfig.style = deepMix({}, get(this.themeConfig, 'label.style'), labelConfig.style);\n    const formatter = this.parseFormatter(labelConfig);\n    labelConfig.formatter = formatter;\n    this.config.label = labelConfig;\n  }\n\n  private _titleParser() {\n    const titleConfig: any = { ...this.localProps.title };\n    const { visible, style, text } = this.localProps.title;\n    if (!visible) {\n      this.config.showTitle = false;\n    } else {\n      this.config.showTitle = true;\n      if (style) {\n        titleConfig.style = style;\n      }\n      titleConfig.style = deepMix({}, get(this.config, 'title.style'), titleConfig.textStyle);\n\n      if (text) {\n        titleConfig.text = text;\n      }\n    }\n    this.config.title = titleConfig;\n  }\n\n  private _isVisible(name: string) {\n    if (this.localProps[name] && this.localProps[name].visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private applyThemeConfig(type: 'line' | 'grid' | 'tickLine') {\n    this.config[type] = deepMix({}, get(this.themeConfig, `${type}.style`), this.config[type]);\n  }\n\n  protected parseFormatter(labelConfig) {\n    let formatter = combineFormatter(\n      getNoopFormatter(),\n      getPrecisionFormatter(labelConfig.precision),\n      getSuffixFormatter(labelConfig.suffix)\n    );\n    if (labelConfig.formatter) {\n      formatter = combineFormatter(\n        formatter,\n        labelConfig.formatter as (text: string, item: any, idx: number) => string\n      );\n    }\n    return formatter;\n  }\n}\n"]}