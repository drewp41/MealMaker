{"version":3,"file":"mini.js","sourceRoot":"","sources":["../../../src/geoms/line/mini.ts"],"names":[],"mappings":"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","sourcesContent":["/** 简化折线点 */\nimport { registerShape } from '../../dependents';\nimport { deepMix, mix } from '@antv/util';\nimport { lineSimplification } from '../../util/math';\nimport { getSplinePath } from '../../util/path';\nimport LineParser from './main';\nimport { getGlobalTheme } from '../../theme';\n\nregisterShape('line', 'miniLine', {\n  draw(cfg, container) {\n    const points = lineSimplification(cfg.points);\n    const path = [];\n    for (let i = 0; i < points.length; i++) {\n      const p = points[i];\n      const flag = i === 0 ? 'M' : 'L';\n      path.push([flag, p.x, p.y]);\n    }\n    const style = deepMix(\n      {},\n      {\n        lineJoin: 'round',\n        lineCap: 'round',\n      },\n      cfg.style\n    );\n    const shape = container.addShape('path', {\n      attrs: mix(\n        {\n          path,\n          stroke: cfg.color || getGlobalTheme().defaultColor,\n          lineWidth: cfg.size || 2,\n        },\n        style\n      ),\n    });\n    return shape;\n  },\n});\n\nregisterShape('line', 'miniLineSmooth', {\n  draw(cfg, container) {\n    const points = lineSimplification(cfg.points);\n    const constraint = [\n      [0, 0],\n      [1, 1],\n    ];\n    const path = getSplinePath(points, false, constraint);\n    const shape = container.addShape('path', {\n      attrs: mix(\n        {\n          path,\n          stroke: cfg.color || getGlobalTheme().defaultColor,\n          lineWidth: cfg.size || 2,\n        },\n        cfg.style\n      ),\n    });\n    return shape;\n  },\n});\n\nexport default class MiniLineParser extends LineParser {\n  public init() {\n    super.init();\n    this.parseShape();\n  }\n\n  private parseShape() {\n    const props = this.plot.options;\n    if (props.smooth) {\n      this.config.shape = { values: ['miniLineSmooth'] };\n    } else {\n      this.config.shape = { values: ['miniLine'] };\n    }\n  }\n}\n"]}