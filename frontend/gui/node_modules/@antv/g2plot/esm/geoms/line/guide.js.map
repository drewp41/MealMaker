{"version":3,"file":"guide.js","sourceRoot":"","sources":["../../../src/geoms/line/guide.ts"],"names":[],"mappings":"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","sourcesContent":["import { LooseObject } from '../../dependents';\nimport { isString, isFunction, isArray, get } from '@antv/util';\nimport LineParser from './main';\n\nexport default class GuideLineParser extends LineParser {\n  public init() {\n    const props = this.plot.options;\n    if (!props.xField || !props.yField) {\n      return;\n    }\n    this.config = {\n      type: 'line',\n      position: {\n        fields: [props.xField, props.yField],\n      },\n      tooltip: false,\n    };\n\n    if (this._getColorMappingField() || this._needParseAttribute('color')) {\n      this.parseColor();\n    }\n    if (this._needParseAttribute('size')) {\n      this.parseSize();\n    }\n    if (props.line.style) {\n      this.parseStyle();\n    }\n\n    if (props.smooth) {\n      this.config.shape = { values: ['smooth'] };\n    }\n  }\n\n  public parseSize() {\n    const props = this.plot.options;\n    const config: LooseObject = {};\n    if (props.line.size) {\n      config.values = [props.line.size];\n    } else {\n      // line作为辅助图形没有在style里指定size属性的情况下，设置默认值\n      config.values = [2];\n    }\n    this.config.size = config;\n  }\n\n  public parseColor() {\n    const props = this.plot.options;\n    const config: LooseObject = {};\n    const colorField = this._getColorMappingField();\n    if (colorField) {\n      config.fields = colorField;\n    }\n    if (props.line.color) {\n      config.values = [props.line.color];\n    } else {\n      // line作为辅助图形没有在style里指定color属性的情况下，默认接受主体图形的透传\n      if (isString(props.color)) {\n        config.values = [props.color];\n      } else if (isFunction(props.color)) {\n        config.fields = colorField;\n        config.callback = props.color;\n      } else if (isArray(props.color)) {\n        if (colorField) {\n          config.values = props.color;\n        } else {\n          if (props.color.length > 0) {\n            config.values = [props.color[0]];\n          }\n        }\n      }\n    }\n\n    this.config.color = config;\n  }\n\n  public parseStyle() {\n    const props = this.plot.options;\n    const styleProps = props.line.style;\n    const config: LooseObject = {};\n    if (isFunction(styleProps)) {\n      config.fields = this.config.position.fields;\n      config.callback = styleProps;\n    } else {\n      config.cfg = styleProps;\n    }\n    this.config.style = config;\n  }\n\n  private _needParseAttribute(attr) {\n    const props = this.plot.options;\n    if (props[attr]) {\n      return true;\n    } else if (props.line[attr]) {\n      return true;\n    }\n    return false;\n  }\n\n  private _getColorMappingField() {\n    const props = this.plot.options;\n    const colorMapper = ['stackField', 'seriesField'];\n    for (const m of colorMapper) {\n      if (get(props, m)) {\n        return [props[m]];\n      }\n    }\n  }\n}\n"]}