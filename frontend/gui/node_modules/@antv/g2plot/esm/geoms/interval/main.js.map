{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../src/geoms/interval/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { isString, isFunction, isArray, isObject, get } from '@antv/util';\nimport ElementParser from '../base';\n\nconst COLOR_MAPPER = ['colorField', 'stackField', 'groupField'];\n\nexport default class IntervalParser extends ElementParser {\n  public init() {\n    this.type = 'interval';\n    super.init();\n    const props = this.plot.options;\n    if (this._needParserColor()) {\n      this.parseColor();\n    }\n    if (!this.config.color) {\n      this.config.color = { values: ['#5b8ff9'] };\n    }\n    const sizeProps = this._getSizeProps(props);\n    if (sizeProps) {\n      this.parseSize(sizeProps);\n    }\n    const styleProps = this._getStyleProps(props);\n    if (styleProps) {\n      this.parseStyle(styleProps);\n    }\n  }\n\n  public parseColor() {\n    const props = this.plot.options;\n    const colorField = this._getColorMappingField(props);\n    const config: any = {};\n    if (colorField) {\n      config.fields = colorField;\n    }\n    if (props.color) {\n      if (isString(props.color)) {\n        config.values = [props.color];\n      } else if (isFunction(props.color)) {\n        config.callback = props.color;\n      } else if (isArray(props.color)) {\n        if (colorField) {\n          config.values = props.color;\n        } else {\n          if (props.color.length > 0) {\n            config.values = [props.color[0]];\n          }\n        }\n      } else if (isObject(props.color)) {\n        config.fields = colorField;\n        config.callback = (d) => {\n          return props.color[d];\n        };\n      }\n    }\n    this.config.color = config;\n  }\n\n  public parseSize(sizeProps) {\n    const props = this.plot.options;\n    const config: any = {};\n    if (isFunction(props[sizeProps])) {\n      config.fields = [this.config.position.fields];\n      config.callback = props[sizeProps];\n    } else {\n      config.values = [props[sizeProps]];\n    }\n    this.config.size = config;\n  }\n\n  public parseStyle(styleProps) {\n    const props = this.plot.options;\n    const color = this.config.color;\n    const style = this.plot.options[styleProps];\n    const config: any = {};\n    if (isFunction(style)) {\n      config.fields = color?.fields || [props.xField, props.yField];\n      config.callback = style;\n    } else {\n      config.cfg = style;\n    }\n\n    this.config.style = config;\n  }\n\n  private _getSizeProps(props) {\n    const sizeMapper = ['columnSize', 'barSize'];\n    for (const m of sizeMapper) {\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  }\n\n  private _getStyleProps(props) {\n    const sizeMapper = ['columnStyle', 'barStyle', 'pieStyle', 'ringStyle'];\n    for (const m of sizeMapper) {\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  }\n\n  private _getColorMappingField(props) {\n    /**如果有colorFiled或stackField配置项(后者为堆叠interval)，则参与colorMapping的字段为对应值\n     * 如没有特别设定，则一般是callback中的传参，传入位置映射的字段\n     */\n    for (const m of COLOR_MAPPER) {\n      if (get(props, m)) {\n        return [props[m]];\n      }\n    }\n  }\n\n  private _needParserColor() {\n    const props = this.plot.options;\n    if (props.color) {\n      return true;\n    }\n    for (const m of COLOR_MAPPER) {\n      if (props[m]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"]}