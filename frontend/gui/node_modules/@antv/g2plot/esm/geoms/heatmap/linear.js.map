{"version":3,"file":"linear.js","sourceRoot":"","sources":["../../../src/geoms/heatmap/linear.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerGeometry, Geometry, MappingDatum } from '../../dependents';\nimport { isNumber, get } from '@antv/util';\nimport * as colorUtil from '../../util/color';\n\nconst GAUSS_COEF = 0.3989422804014327;\nconst ZERO = 1.0 / 255.0 / 16.0;\n\nconst ORIGIN_FIELD = '_origin';\n\nclass LinearHeatmap extends Geometry {\n  public readonly type: string = 'heatmap';\n  private intensity: number;\n  private radius: number;\n  private blur: number;\n  private grayScaleCanvas: any;\n  private shadowCanvas: any;\n  private paletteCache: any = {};\n  private imageShape: any;\n\n  constructor(cfg) {\n    super(cfg);\n    this.intensity = cfg.intensity;\n    this.radius = cfg.radius;\n  }\n\n  protected createElements(mappingData: MappingDatum[] /*index: number, isUpdate: boolean = false*/) {\n    const range = this.prepareRange(mappingData);\n    this.prepareSize();\n    this.prepareBlur();\n    this.prepareGreyScaleBlurredCircle(this.radius);\n    this.drawWithRange(mappingData, range);\n    return null;\n  }\n\n  public clear() {\n    this.clearShadowCanvasCtx();\n    super.clear();\n  }\n\n  private prepareRange(data) {\n    const colorAttr = this.getAttribute('color');\n    const colorField = colorAttr.getFields()[0];\n    let min = Infinity;\n    let max = -Infinity;\n    data.forEach((row) => {\n      const value = row[ORIGIN_FIELD][colorField];\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    });\n    if (min === max) {\n      min = max - 1;\n    }\n    return [min, max];\n  }\n\n  private prepareSize() {\n    let radius = this.radius;\n    if (!this.radius) {\n      radius = this.getDefaultValue('size');\n      if (!isNumber(radius)) {\n        radius = this.getDefaultSize();\n      }\n      this.radius = radius;\n    }\n  }\n\n  private prepareBlur() {\n    let blur = get(this.styleOption, ['style', 'shadowBlur']);\n    if (!isNumber(blur)) {\n      blur = this.radius / 2;\n    }\n    this.blur = blur;\n  }\n\n  private getDefaultSize() {\n    const position = this.getAttribute('position');\n    const coord = this.coordinate;\n    const radius = Math.min(\n      coord.getWidth() / (position.scales[0].ticks.length * 4),\n      coord.getHeight() / (position.scales[1].ticks.length * 4)\n    );\n    return radius;\n  }\n\n  private colorize(img) {\n    const colorAttr = this.getAttribute('color') as any;\n    const pixels = img.data;\n    const paletteCache = this.paletteCache;\n    for (let i = 3; i < pixels.length; i += 4) {\n      const alpha = pixels[i]; // get gradient color from opacity value\n      if (alpha) {\n        let palette;\n        if (paletteCache[alpha]) {\n          palette = paletteCache[alpha];\n        } else {\n          palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n          paletteCache[alpha] = palette;\n        }\n        // const palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  }\n\n  private prepareGreyScaleBlurredCircle(r) {\n    let circleCanvas = this.grayScaleCanvas;\n    if (!circleCanvas) {\n      circleCanvas = document.createElement('canvas');\n      this.grayScaleCanvas = circleCanvas;\n    }\n    const intensity = this.intensity ? this.intensity : 2;\n    const circleRadius = (Math.sqrt(-2.0 * Math.log(ZERO / r / intensity / GAUSS_COEF)) / 3.0) * r;\n    const blur = circleRadius - r;\n    const r2 = circleRadius + blur;\n    const ctx = circleCanvas.getContext('2d');\n    circleCanvas.width = circleCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height);\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  private drawGrayScaleBlurredCircle(x, y, r, alpha, ctx) {\n    const circleCanvas = this.grayScaleCanvas;\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(circleCanvas, x - r, y - r);\n  }\n\n  private getShadowCanvasCtx() {\n    let canvas = this.shadowCanvas;\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      this.shadowCanvas = canvas;\n    }\n    canvas.width = this.coordinate.getWidth();\n    canvas.height = this.coordinate.getHeight();\n    const context = canvas.getContext('2d');\n    context.globalCompositeOperation = 'lighter';\n    return context;\n  }\n\n  private clearShadowCanvasCtx() {\n    const ctx = this.getShadowCanvasCtx();\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  private getImageShape() {\n    let imageShape = this.imageShape;\n    if (imageShape) {\n      return imageShape;\n    }\n    const container = this.container;\n    imageShape = container.addShape({\n      type: 'image',\n      attrs: {},\n    });\n    this.imageShape = imageShape;\n  }\n\n  private drawWithRange(data, range) {\n    // canvas size\n    const { start, end } = this.coordinate;\n    const width = this.coordinate.getWidth();\n    const height = this.coordinate.getHeight();\n\n    // value, range, etc\n    const colorAttr = this.getAttribute('color');\n    const valueField = colorAttr.getFields()[0];\n\n    // prepare shadow canvas context\n    this.clearShadowCanvasCtx();\n    const ctx = this.getShadowCanvasCtx();\n    // filter data\n    if (range) {\n      data = data.filter((row) => {\n        return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\n      });\n    }\n\n    // step1. draw points with shadow\n    const scale = this.scales[valueField];\n    for (let i = 0; i < data.length; i++) {\n      const obj = data[i];\n      const cfg = this.getDrawCfg(obj);\n      const alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\n      // @ts-ignore\n      this.drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, this.radius + this.blur, alpha, ctx);\n    }\n\n    // step2. convert pixels\n    const colored = ctx.getImageData(0, 0, width, height);\n    this.clearShadowCanvasCtx();\n    this.colorize(colored);\n    ctx.putImageData(colored, 0, 0);\n    const image = new Image();\n    image.src = ctx.canvas.toDataURL('image/png');\n    this.getImageShape();\n    this.imageShape.attr('x', start.x);\n    this.imageShape.attr('y', end.y);\n    this.imageShape.attr('width', width);\n    this.imageShape.attr('height', height);\n    this.imageShape.attr('img', ctx.canvas);\n    this.imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n  }\n\n  private getShapeInfo(mappingData) {\n    const shapeCfg = this.getDrawCfg(mappingData[0]);\n\n    return {\n      ...shapeCfg,\n      mappingData,\n      data: this.getData(mappingData),\n    };\n  }\n\n  private getData(mappingData) {\n    return mappingData.map((obj) => {\n      return obj[ORIGIN_FIELD];\n    });\n  }\n}\n\nregisterGeometry('linearHeatmap', LinearHeatmap);\n"]}