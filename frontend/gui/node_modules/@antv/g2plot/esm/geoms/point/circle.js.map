{"version":3,"file":"circle.js","sourceRoot":"","sources":["../../../src/geoms/point/circle.ts"],"names":[],"mappings":"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","sourcesContent":["import { LooseObject } from '../../dependents';\nimport { isArray, isFunction, isString, isEmpty, isNil } from '@antv/util';\nimport ElementParser from '../base';\n\nexport default class CircleParser extends ElementParser {\n  public init() {\n    const props = this.plot.options;\n    this.style = props.pointStyle;\n    if (!props.xField || !props.yField) {\n      return;\n    }\n    this.config = {\n      type: 'point',\n      position: {\n        fields: [props.xField, props.yField],\n      },\n    };\n    this.parseColor();\n    this.parseSize();\n\n    if (props.shape) {\n      this.parseShape(props.shape);\n    }\n    if (props.pointStyle) {\n      this.parseStyle();\n    }\n  }\n\n  public parseColor() {\n    const props = this.plot.options;\n    const config: LooseObject = {};\n    const colorField = props.colorField;\n    if (colorField) {\n      config.fields = isArray(colorField) ? colorField : [colorField];\n    }\n    if (props.color) {\n      this._parseColor(props, config);\n    }\n    if (!isEmpty(config)) {\n      this.config.color = config;\n    }\n  }\n\n  public parseSize() {\n    const props = this.plot.options;\n    const config: LooseObject = {};\n    if (props.sizeField) {\n      config.fields = [props.sizeField];\n    }\n    if (props.pointSize) {\n      config.values = isArray(props.pointSize) ? props.pointSize : [props.pointSize];\n    }\n    this.config.size = config;\n  }\n\n  public parseShape(shapeName) {\n    this.config.shape = shapeName;\n  }\n\n  public parseStyle() {\n    const props = this.plot.options;\n    const styleProps = props.pointStyle;\n    const config = {\n      fields: null,\n      callback: null,\n      cfg: null,\n    };\n    const { xField, yField, colorField } = props;\n    if (isFunction(styleProps)) {\n      if (colorField) {\n        config.fields = isArray(colorField)\n          ? [xField, yField, colorField].concat(colorField)\n          : [xField, yField, colorField];\n      } else {\n        config.fields = [xField, yField];\n      }\n      config.callback = styleProps;\n    } else {\n      config.cfg = styleProps;\n      // opacity 与 fillOpacity 兼容\n      if (!isNil(styleProps.opacity)) {\n        config.cfg.fillOpacity = styleProps.opacity;\n      }\n    }\n    this.config.style = config;\n  }\n\n  private _parseColor(props, config) {\n    if (isString(props.color)) {\n      config.values = [props.color];\n    } else if (isFunction(props.color)) {\n      config.callback = props.color;\n    } else if (isArray(props.color)) {\n      config.values = props.color;\n    }\n  }\n}\n"]}