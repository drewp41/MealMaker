{"version":3,"file":"mini.js","sourceRoot":"","sources":["../../../src/geoms/area/mini.ts"],"names":[],"mappings":"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","sourcesContent":["/** 简化折线点 */\nimport { registerShape } from '../../dependents';\nimport { deepMix, each } from '@antv/util';\nimport { lineSimplification } from '../../util/math';\nimport { getSplinePath } from '../../util/path';\nimport AreaParser from './main';\nimport { getGlobalTheme } from '../../theme';\n\nregisterShape('area', 'miniArea', {\n  draw(cfg, container) {\n    const opacity = cfg.style ? cfg.style.opacity : null;\n    const path = getPath(cfg, this, false);\n    const style = deepMix(\n      {},\n      {\n        lineJoin: 'round',\n        lineCap: 'round',\n      },\n      cfg.style\n    );\n    const shape = container.addShape('path', {\n      attrs: {\n        path,\n        fill: parseGradient(cfg.color || getGlobalTheme().defaultColor),\n        opacity: opacity || 0.4,\n      },\n      style,\n    });\n    return shape;\n  },\n});\n\nregisterShape('area', 'miniAreaSmooth', {\n  draw(cfg, container) {\n    const opacity = cfg.style ? cfg.style.opacity : null;\n    const path = getPath(cfg, this, true);\n    const shape = container.addShape('path', {\n      attrs: {\n        path,\n        fill: parseGradient(cfg.color || getGlobalTheme().defaultColor),\n        opacity: opacity || 0.5,\n      },\n    });\n    return shape;\n  },\n});\n\nfunction getPath(cfg, shape, isSmooth) {\n  const constraint = [\n    [0, 0],\n    [1, 1],\n  ];\n  let topLinePoints = [];\n  let bottomLinePoints = [];\n  each(cfg.points, (point) => {\n    topLinePoints.push(point[1]);\n    bottomLinePoints.push(point[0]);\n  });\n  bottomLinePoints = shape.parsePoints(bottomLinePoints.reverse());\n  topLinePoints = lineSimplification(shape.parsePoints(topLinePoints));\n  const topPath = isSmooth ? getSplinePath(topLinePoints, false, constraint) : getStraightPath(topLinePoints);\n  const bottomPath = getStraightPath(bottomLinePoints);\n  bottomPath[0][0] = 'L';\n  const path = topPath.concat(bottomPath);\n\n  return path;\n}\n\nfunction getStraightPath(points) {\n  const path = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    const flag = i === 0 ? 'M' : 'L';\n    path.push([flag, p.x, p.y]);\n  }\n  return path;\n}\n\nfunction parseGradient(color) {\n  return `l(90) 0:${color} 1:#ffffff`;\n}\n\nexport default class MiniAreaParser extends AreaParser {\n  public init() {\n    super.init();\n    this.parseShape();\n  }\n\n  private parseShape() {\n    const props = this.plot.options;\n    if (props.smooth) {\n      this.config.shape = { values: ['miniAreaSmooth'] };\n    } else {\n      this.config.shape = { values: ['miniArea'] };\n    }\n  }\n}\n"]}