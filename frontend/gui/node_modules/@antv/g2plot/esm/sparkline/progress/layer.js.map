{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/sparkline/progress/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAC7G,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAC9C,OAAO,SAA6B,MAAM,eAAe,CAAC;AAC1D,OAAO,MAAwB,MAAM,oBAAoB,CAAC;AAC1D,OAAO,KAAK,WAAW,MAAM,SAAS,CAAC;AAyBvC,IAAM,WAAW,GAAG;IAClB,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEF,IAAM,aAAa,GAAG;IACpB,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEF,IAAM,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAE7C;IAAgG,iCAAY;IAA5G;QACE;;WAEG;QAHL,qEAqRC;QAhRQ,UAAI,GAAW,UAAU,CAAC;QAEzB,eAAS,GAAG,KAAK,CAAC;;IA8Q5B,CAAC;IA5QQ,oCAAY,GAAnB;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QACzB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,GAAG,GAAG;YACV,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,EAAE,OAAO;YACf,MAAM,EAAE,GAAG;YACX,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;YACjD,QAAQ,EAAE,KAAK,CAAC,aAAa;YAC7B,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,aAAa;SAC7C,CAAC;QACT,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEM,4BAAI,GAAX;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,iBAAM,IAAI,WAAE,CAAC;IACf,CAAC;IAEM,kCAAU,GAAjB;QACU,IAAA,8BAAO,CAAkB;QACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACvF;IACH,CAAC;IAEM,8BAAM,GAAb,UAAc,GAAiB;QAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE;YAC1B,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SACrC;QAED,IAAI,GAAG,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1C;QAED,IAAI,GAAG,CAAC,KAAK,EAAE;YACb,IAAI,KAAK,SAAA,CAAC;YACV,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC/B,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1D;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;gBAClC,KAAK,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;aAC7B;YACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAClC;QAED,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;SAClC;IACH,CAAC;IAEM,+BAAO,GAAd;QACE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,MAAM;gBACxB,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;QACD,iBAAM,OAAO,WAAE,CAAC;IAClB,CAAC;IAEM,mCAAW,GAAlB;QAAA,iBA6CC;QA5CC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACxC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,GAAG;gBAC5B,IAAM,SAAS,GAAG,GAAG,CACnB;oBACE,MAAM,EAAE,KAAI,CAAC,MAAM;oBACnB,IAAI,EAAE,KAAI,CAAC,IAAI;oBACf,YAAY,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO;iBACnC,EACD,GAAG,CACJ,CAAC;gBACF,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;gBACrC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;QACD,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5D,IAAM,IAAI,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACzC,IAAM,IAAI,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9C,KAAK,EAAE;gBACL,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,IAAI,EAAE,eAAe;aACtB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,EAAE;YACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,EAAE;YACvB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/C,SAAS,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAC,EAAE;YAC1C,IAAI,KAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;gBAC1C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAES,sCAAc,GAAxB,UAAyB,GAAW,EAAE,IAAY;QAChD,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAES,6BAAK,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;YAC3B,OAAO,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;SACzB,CAAC,CAAC;IACL,CAAC;IAES,mCAAW,GAArB;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAM,GAAG,GAAG,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE;YACtC,cAAc,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;YAC5C,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,GAAG;YACX;gBACE,IAAI,EAAE,OAAO;aACd;SACF,CAAC;QACF,IAAI,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE;YAC3B,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;SAC/B;QACD,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAES,mCAAW,GAArB,UAAsB,WAAY;QAChC,IAAI,WAAW,EAAE;YACf,iBAAM,WAAW,YAAC,WAAW,CAAC,CAAC;SAChC;aAAM;YACL,iBAAM,WAAW,YAAC,WAAW,CAAC,CAAC;SAChC;IACH,CAAC;IAES,uCAAe,GAAzB,UAA0B,KAAK;QAC7B,IAAI,WAAW,CAAC;QAChB,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC3B,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;aAC3B;YACD,IAAI,QAAQ,CAAC,WAAW,CAAC,EAAE;gBACzB,IAAM,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;gBACnC,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;gBACvB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,KAAK,CAAC,KAAK,CAAC;IACrB,CAAC;IAES,mCAAW,GAArB;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAM,IAAI,GAAG;YACX,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;YACzC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE;SAC7C,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAES,qCAAa,GAAvB,UAAwB,SAAyB;QAC/C,IAAM,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC;QACtC,IAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAC1D,cAAc;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,MAAM,EAAE,KAAK;YAC/B,IAAI,KAAK,GAAG,YAAY,GAAG,CAAC,EAAE;gBAC5B,MAAM,CAAC,OAAO,EAAE,CAAC;aAClB;iBAAM;gBACL,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC;aACrF;QACH,CAAC,CAAC,CAAC;QACH,kBAAkB;QAClB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,YAAY,EAAE;YACtC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAM,GAAG,GAAG,OAAO,CACjB,EAAE,EACF;oBACE,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;iBACnC,EACD,SAAS,CAAC,CAAC,CAAC,CACb,CAAC;gBACF,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC3B;SACF;IACH,CAAC;IAEO,+BAAO,GAAf;QACU,IAAA,oBAAM,CAAU;QACxB,IAAI,MAAM,IAAI,EAAE,EAAE;YAChB,OAAO,EAAE,CAAC;SACX;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAEO,4CAAoB,GAA5B,UAA6B,KAAK;QAChC,8BAA8B;QACxB,IAAA,qCAAuD,EAArD,sBAAQ,EAAE,kBAA2C,CAAC;QAC9D,sBAAsB;QACtB,IAAM,cAAc,GAAG,EAAE,CAAC;QAClB,IAAA,gBAAI,CAAU;QACtB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAI;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC/B,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG;oBACjB,cAAc,CAAC,IAAI,OAAnB,cAAc,EAAS,GAAG,CAAC,KAAK,EAAE;gBACpC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,UAAC,CAAC,EAAE,KAAK;gBACnB,cAAc,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACpD;IACH,CAAC;IAEO,iDAAyB,GAAjC;QACE,IAAI,QAAQ,GAAG,GAAG,CAAC;QACnB,IAAI,MAAM,GAAG,eAAe,CAAC;QAC7B,IAAM,gBAAgB,GAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACrD,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,EAAE;YAC/C,IAAI,gBAAgB,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACpC,QAAQ,GAAG,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC;aAC7C;YACD,IAAI,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClC,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC;aACzC;SACF;QACD,OAAO,EAAE,QAAQ,UAAA,EAAE,MAAM,QAAA,EAAE,CAAC;IAC9B,CAAC;IAEO,gDAAwB,GAAhC,UAAiC,KAAK;QAAtC,iBAUC;QATC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,UAAC,CAAC,EAAE,KAAK;gBACnB,IAAI,CAAC,CAAC,IAAI,EAAE;oBACV,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;iBACpC;YACH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,KAAK,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;SACpC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AArRD,CAAgG,SAAS,GAqRxG;;AAED,gBAAgB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC","sourcesContent":["import { isArray, mix, hasKey, each, has, isFunction, clone, deepMix, isString, isNumber } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer, { TinyViewConfig } from '../tiny-layer';\nimport Marker, { MarkerConfig } from './component/marker';\nimport * as EventParser from './event';\nimport { GraphicStyle } from '../../interface/config';\n\nexport interface ProgressViewConfig extends TinyViewConfig {\n  progressStyle?: GraphicStyle;\n  percent?: number;\n  size?: number;\n  marker?: MarkerConfig[];\n  /** @ignore */\n  barSize?: number;\n  /** @ignore */\n  barStyle?: GraphicStyle;\n  /** @ignore */\n  stackField?: string;\n}\n\ninterface UpdateConfig {\n  percent: number;\n  color?: string | string[];\n  style?: {} | {}[];\n  marker?: MarkerConfig[];\n}\n\nexport type ProgressLayerConfig = ProgressViewConfig;\n\nconst G2_GEOM_MAP = {\n  progress: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'progress',\n};\n\nconst DEFAULT_COLOR = ['#55A6F3', '#E8EDF3'];\n\nexport default class ProgressLayer<T extends ProgressLayerConfig = ProgressLayerConfig> extends TinyLayer<T> {\n  /**\n   * 将进度条配置项转为堆叠条形图配置项\n   */\n\n  public type: string = 'progress';\n  protected markers: MarkerConfig[];\n  private isEntered = false;\n\n  public processProps() {\n    let props = this.options;\n    props.data = this.processData();\n    const cfg = {\n      padding: [0, 0, 0, 0],\n      xField: 'value',\n      yField: '1',\n      stackField: 'type',\n      barSize: props.size ? props.size : this.getSize(),\n      barStyle: props.progressStyle,\n      color: this.parseColorProps(props) || DEFAULT_COLOR,\n    } as any;\n    props = mix(props, cfg);\n  }\n\n  public init() {\n    this.processProps();\n    super.init();\n  }\n\n  public beforeInit() {\n    const { percent } = this.options;\n    if (!isNumber(percent)) {\n      throw new Error('Percent value is required, and the type of percent must be Number.');\n    }\n  }\n\n  public update(cfg: UpdateConfig) {\n    const props = this.options;\n    if (hasKey(cfg, 'percent')) {\n      props.percent = cfg.percent;\n      this.changeData(this.processData());\n    }\n\n    if (cfg.style) {\n      this.styleUpdateAnimation(cfg.style);\n      this.updateColorConfigByStyle(cfg.style);\n    }\n\n    if (cfg.color) {\n      let style;\n      if (isArray(cfg.color)) {\n        this.options.color = cfg.color;\n        style = [{ fill: cfg.color[0] }, { fill: cfg.color[1] }];\n      } else {\n        this.options.color[0] = cfg.color;\n        style = { fill: cfg.color };\n      }\n      this.styleUpdateAnimation(style);\n    }\n\n    if (cfg.marker) {\n      this.updateMarkers(cfg.marker);\n      this.options.marker = cfg.marker;\n    }\n  }\n\n  public destroy() {\n    if (this.markers && this.markers.length > 0) {\n      each(this.markers, (marker) => {\n        marker.destroy();\n      });\n      this.markers = [];\n    }\n    super.destroy();\n  }\n\n  public afterRender() {\n    if (this.options.marker && !this.markers) {\n      this.markers = [];\n      each(this.options.marker, (cfg) => {\n        const markerCfg = mix(\n          {\n            canvas: this.canvas,\n            view: this.view,\n            progressSize: this.options.barSize,\n          },\n          cfg\n        );\n        const marker = new Marker(markerCfg);\n        this.markers.push(marker);\n      });\n    }\n    const progressContainer = this.view.geometries[0].container;\n    const bbox = progressContainer.getBBox();\n    const rect = progressContainer.addShape('rect', {\n      attrs: {\n        width: bbox.width,\n        height: bbox.height,\n        x: bbox.minX,\n        y: bbox.minY,\n        fill: 'rgba(0,0,0,0)',\n      },\n    });\n    this.canvas.draw();\n\n    rect.on('mouseenter', (ev) => {\n      this.isEntered = true;\n      this.view.emit('progress:mouseenter', ev);\n    });\n\n    rect.on('mouseleave', (ev) => {\n      this.isEntered = false;\n      this.view.emit('progress:mouseleave', ev);\n    });\n    const canvasDom = this.canvas.get('container');\n    canvasDom.addEventListener('mouseleave', (ev) => {\n      if (this.isEntered) {\n        this.view.emit('progress:mouseleave', ev);\n        this.isEntered = false;\n      }\n    });\n  }\n\n  protected geometryParser(dim: string, type: string): string {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected coord() {\n    this.setConfig('coordinate', {\n      actions: [['transpose']],\n    });\n  }\n\n  protected addGeometry() {\n    const props = this.options;\n    const bar = getGeom('interval', 'main', {\n      positionFields: [props.yField, props.xField],\n      plot: this,\n    });\n    bar.adjust = [\n      {\n        type: 'stack',\n      },\n    ];\n    if (has(props, 'animation')) {\n      bar.animate = props.animation;\n    }\n    this.setConfig('geometry', bar);\n  }\n\n  protected parseEvents(eventParser?) {\n    if (eventParser) {\n      super.parseEvents(eventParser);\n    } else {\n      super.parseEvents(EventParser);\n    }\n  }\n\n  protected parseColorProps(props) {\n    let colorOption;\n    if (props.color) {\n      if (isFunction(props.color)) {\n        colorOption = props.color(props.percent);\n      } else {\n        colorOption = props.color;\n      }\n      if (isString(colorOption)) {\n        const color = clone(DEFAULT_COLOR);\n        color[0] = colorOption;\n        return color;\n      } else {\n        return colorOption;\n      }\n    }\n    return props.color;\n  }\n\n  protected processData() {\n    const props = this.options;\n    const data = [\n      { type: 'current', value: props.percent },\n      { type: 'rest', value: 1.0 - props.percent },\n    ];\n    return data;\n  }\n\n  protected updateMarkers(markerCfg: MarkerConfig[]) {\n    const markerLength = markerCfg.length;\n    const animationOptions = this.getUpdateAnimationOptions();\n    // marker diff\n    each(this.markers, (marker, index) => {\n      if (index > markerLength - 1) {\n        marker.destroy();\n      } else {\n        marker.update(markerCfg[index], animationOptions.duration, animationOptions.easing);\n      }\n    });\n    // add new markers\n    if (this.markers.length < markerLength) {\n      const startIndex = this.markers.length;\n      for (let i = startIndex; i < markerLength; i++) {\n        const cfg = deepMix(\n          {},\n          {\n            canvas: this.canvas,\n            view: this.view,\n            progressSize: this.options.barSize,\n          },\n          markerCfg[i]\n        );\n        const marker = new Marker(cfg);\n        this.markers.push(marker);\n      }\n    }\n  }\n\n  private getSize() {\n    const { height } = this;\n    if (height >= 50) {\n      return 10;\n    }\n    return 4;\n  }\n\n  private styleUpdateAnimation(style) {\n    // style更新动画接受用户animation配置的透传\n    const { duration, easing } = this.getUpdateAnimationOptions();\n    // get geometry shapes\n    const progressShapes = [];\n    const { view } = this;\n    const geometry = view.geometries;\n    each(geometry, (geom) => {\n      if (geom.type === 'interval') {\n        const elements = geom.elements;\n        each(elements, (ele) => {\n          progressShapes.push(...ele.shape);\n        });\n      }\n    });\n    if (isArray(style)) {\n      each(style, (s, index) => {\n        progressShapes[index].animate(s, duration, easing);\n      });\n    } else {\n      progressShapes[0].animate(style, duration, easing);\n    }\n  }\n\n  private getUpdateAnimationOptions() {\n    let duration = 450;\n    let easing = 'easeQuadInOut';\n    const animationOptions: any = this.options.animation;\n    if (animationOptions && animationOptions.update) {\n      if (animationOptions.update.duration) {\n        duration = animationOptions.update.duration;\n      }\n      if (animationOptions.update.easing) {\n        easing = animationOptions.update.easing;\n      }\n    }\n    return { duration, easing };\n  }\n\n  private updateColorConfigByStyle(style) {\n    if (isArray(style)) {\n      each(style, (s, index) => {\n        if (s.fill) {\n          this.options.color[index] = s.fill;\n        }\n      });\n    } else if (style.fill) {\n      this.options.color[0] = style.fill;\n    }\n  }\n}\n\nregisterPlotType('progress', ProgressLayer);\n"]}