{"version":3,"file":"tiny-layer.js","sourceRoot":"","sources":["../../src/sparkline/tiny-layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAE3C,OAAO,SAAyB,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,oBAAoB,CAAC;AAS5B;IAA6F,6BAAY;IAAzG;;IAqDA,CAAC;IApDe,2BAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf;YACD,WAAW,EAAE;gBACX,OAAO,EAAE,KAAK;aACf;YACD,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;SACF,CAAC,CAAC;IACL,CAAC;IAES,yBAAK,GAAf;QACE,OAAO;IACT,CAAC;IAES,+BAAW,GAArB;QACE,OAAO;IACT,CAAC;IAES,8BAAU,GAApB;QAAA,iBAmBC;QAlBC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,mBAAmB,GAAG;YAC1B,IAAI,EAAE;gBACJ,KAAK,EAAE;oBACL,SAAS,EAAE,CAAC;oBACZ,MAAM,EAAE,SAAS;iBAClB;aACF;SACF,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,UAAC,IAAI;YACzB,IAAM,SAAS,GAAG,YAAY,CAAC,WAAW,EAAE;gBAC1C,IAAI,EAAE,KAAI;gBACV,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC;aAC5C,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IACH,gBAAC;AAAD,CAAC,AArDD,CAA6F,SAAS,GAqDrG","sourcesContent":["import { deepMix, each } from '@antv/util';\nimport { LayerConfig } from '../base/layer';\nimport ViewLayer, { ViewConfig } from '../base/view-layer';\nimport { getComponent } from '../components/factory';\nimport '../geoms/line/mini';\n\nexport interface TinyViewConfig extends ViewConfig {\n  indicator?: any;\n  guideLine?: any; // FIXME:\n}\n\nexport interface TinyLayerConfig extends TinyViewConfig, LayerConfig {}\n\nexport default abstract class TinyLayer<T extends TinyLayerConfig = TinyLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      padding: [0, 0, 0, 0],\n      legend: {\n        visible: false,\n      },\n      xAxis: {\n        visible: false,\n      },\n      yAxis: {\n        visible: false,\n      },\n      tooltip: {\n        visible: false,\n      },\n    });\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected addGeometry() {\n    return;\n  }\n\n  protected annotation() {\n    const props = this.options;\n    const config = [];\n    const defaultGuidelineCfg = {\n      line: {\n        style: {\n          lineWidth: 1,\n          stroke: '#66d6a8',\n        },\n      },\n    };\n    each(props.guideLine, (line) => {\n      const guideLine = getComponent('guideLine', {\n        plot: this,\n        cfg: deepMix({}, defaultGuidelineCfg, line),\n      });\n      config.push(guideLine);\n    });\n    this.setConfig('annotations', config);\n  }\n}\n"]}