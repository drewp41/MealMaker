{"version":3,"file":"plot.js","sourceRoot":"","sources":["../../src/base/plot.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter from '@antv/event-emitter';\nimport { ICanvas } from '../dependents';\nimport { isNil, each, findIndex, deepMix, keys, contains, isFunction } from '@antv/util';\nimport { RecursivePartial, LooseMap } from '../interface/types';\nimport StateManager from '../util/state-manager';\nimport CanvasController from './controller/canvas';\nimport EventController from './controller/event';\nimport { getPlotType } from './global';\nimport Layer from './layer';\nimport ViewLayer from './view-layer';\nimport { CANVAS_EVENT_MAP } from '../util/event';\n\nexport interface PlotConfig {\n  forceFit?: boolean;\n  width?: number;\n  renderer?: string;\n  height?: number;\n  pixelRatio?: number;\n  theme?: LooseMap | string;\n  localRefresh?: boolean;\n}\n\ntype LayerCtor<C> = ViewLayer<C>;\n\nexport default class BasePlot<\n  T extends PlotConfig = PlotConfig,\n  L extends LayerCtor<T> = LayerCtor<T>\n> extends EventEmitter {\n  public width: number;\n  public height: number;\n  public forceFit: boolean;\n  public renderer: string;\n  public pixelRatio: number;\n  public theme: string | object;\n  public localRefresh?: boolean;\n  public canvas: ICanvas;\n  public destroyed: boolean;\n  protected layers: Array<L>;\n  private canvasController: CanvasController;\n  private eventController: EventController;\n  protected containerDOM: HTMLElement;\n\n  constructor(container: HTMLElement, props: T) {\n    super();\n    this.containerDOM = typeof container === 'string' ? document.getElementById(container) : container;\n    this.forceFit = !isNil(props.forceFit) ? props.forceFit : isNil(props.width) && isNil(props.height);\n    this.renderer = props.renderer || 'canvas';\n    this.pixelRatio = props.pixelRatio || null;\n    this.width = props.width;\n    this.height = props.height;\n    this.theme = props.theme;\n    this.localRefresh = props.localRefresh;\n    this.canvasController = new CanvasController({\n      containerDOM: this.containerDOM,\n      plot: this,\n    });\n    /** update layer properties */\n    this.width = this.canvasController.width;\n    this.height = this.canvasController.height;\n    this.canvas = this.canvasController.canvas;\n    this.layers = [];\n    this.destroyed = false;\n\n    this.createLayers(props);\n\n    /** bind events */\n    this.eventController = new EventController({\n      plot: this,\n      canvas: this.canvasController.canvas,\n    });\n\n    this.eventController.bindEvents();\n    this.parseEvents(props);\n  }\n\n  /** 生命周期 */\n  public destroy() {\n    this.eachLayer((layer) => {\n      layer.destroy();\n    });\n    this.canvasController.destroy();\n    this.eventController.clearEvents();\n    this.layers = [];\n    this.destroyed = true;\n  }\n\n  /**\n   * 重新绘制图形\n   */\n  public repaint(): void {\n    this.canvasController.canvas.draw();\n  }\n\n  public updateConfig(config: RecursivePartial<T>, all: boolean = false) {\n    if (all) {\n      this.eachLayer((layer) => {\n        if (layer instanceof ViewLayer) {\n          layer.updateConfig(config);\n        }\n      });\n    } else {\n      const layer: any = this.layers[0];\n      if (layer instanceof Layer) {\n        layer.updateConfig(config);\n      }\n    }\n\n    if (config.width) {\n      this.width = config.width as number;\n    }\n    if (config.height) {\n      this.height = config.height as number;\n    }\n    if (config.theme) {\n      this.theme = config.theme;\n    }\n\n    this.canvasController.updateCanvasSize();\n    this.canvasController.updateCanvasTheme();\n  }\n\n  public changeData(data: any[], all: boolean = false) {\n    if (all) {\n      this.eachLayer((layer) => {\n        if (layer instanceof ViewLayer) {\n          layer.changeData(data);\n        }\n      });\n    } else {\n      const layer: any = this.layers[0];\n      if (layer instanceof ViewLayer) {\n        layer.changeData(data);\n      }\n    }\n  }\n\n  public getPlotTheme() {\n    const layer: any = this.layers[0];\n    return layer.getPlotTheme();\n  }\n\n  public getData() {\n    const layer: any = this.layers[0];\n    return layer.getData();\n  }\n\n  /**\n   * 绑定一个外部的stateManager\n   * 先直接传递给各个子 Layer\n   *\n   *  @param stateManager\n   *  @param cfg\n   */\n  public bindStateManager(stateManager: StateManager, cfg: any) {\n    this.eachLayer((layer) => {\n      if (layer instanceof ViewLayer) {\n        layer.bindStateManager(stateManager, cfg);\n      }\n    });\n  }\n\n  /**\n   * 响应状态量更新的快捷方法\n   *\n   *  @param condition\n   * @param style\n   */\n  public setActive(condition: any, style: any) {\n    this.eachLayer((layer) => {\n      if (layer instanceof ViewLayer) {\n        layer.setActive(condition, style);\n      }\n    });\n  }\n\n  public setSelected(condition: any, style: any) {\n    this.eachLayer((layer) => {\n      if (layer instanceof ViewLayer) {\n        layer.setSelected(condition, style);\n      }\n    });\n  }\n\n  public setDisable(condition: any, style: any) {\n    this.eachLayer((layer) => {\n      if (layer instanceof ViewLayer) {\n        layer.setDisable(condition, style);\n      }\n    });\n  }\n\n  public setDefault(condition: any, style: any) {\n    this.eachLayer((layer) => {\n      if (layer instanceof ViewLayer) {\n        layer.setDefault(condition, style);\n      }\n    });\n  }\n\n  /**\n   * 获取 Plot 的 View\n   */\n  public getView() {\n    // 临时：避免 getLayer 的类型转换问题\n    return (this.layers[0] as ViewLayer<T>).view;\n  }\n\n  /**\n   * 获取图形下的图层 Layer，默认第一个 Layer\n   * @param idx\n   */\n  public getLayer(idx: number = 0) {\n    return this.layers[idx];\n  }\n\n  public getCanvas() {\n    return this.canvasController.canvas;\n  }\n\n  public getLayers() {\n    return this.layers;\n  }\n\n  public render() {\n    this.eachLayer((layer) => layer.render());\n  }\n\n  protected eachLayer(cb: (layer: Layer<any>) => void) {\n    each(this.layers, cb);\n  }\n\n  /**\n   * add children layer\n   * @param layer\n   */\n  public addLayer(layer: L) {\n    const idx = findIndex(this.layers, (item) => item === layer);\n    if (idx < 0) {\n      this.layers.push(layer);\n    }\n  }\n\n  protected createLayers(props: T & { type?: string; layers?: any }) {\n    if (props.layers) {\n      // TODO: combo plot\n    } else if (props.type) {\n      const viewLayerCtr = getPlotType(props.type);\n      const viewLayerProps: T = deepMix({}, props, {\n        canvas: this.canvasController.canvas,\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height,\n      });\n      const viewLayer = new viewLayerCtr(viewLayerProps);\n      this.addLayer(viewLayer);\n    }\n  }\n\n  protected parseEvents(props) {\n    const eventsName = keys(CANVAS_EVENT_MAP);\n    if (props.events) {\n      each(props.events, (e, k) => {\n        if (contains(eventsName, k) && isFunction(e)) {\n          const eventName = CANVAS_EVENT_MAP[k] || k;\n          const handler = e;\n          this.on(eventName, handler);\n        }\n      });\n    }\n  }\n}\n"]}