{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../src/base/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter from '@antv/event-emitter';\nimport { ICanvas, IGroup } from '../dependents';\nimport { deepMix, each, findIndex, keys, contains, isFunction } from '@antv/util';\nimport { Point } from '../interface/config';\nimport { LAYER_EVENT_MAP } from '../util/event';\nimport BBox from '../util/bbox';\n\nexport interface LayerConfig {\n  /** @ignore */\n  id?: string;\n  /** the top-left-x of layer, local position relative to the parent layer */\n  /** @ignore */\n  x?: number;\n  /** the top-left-y of layer, local position relative to the parent layer */\n  /** @ignore */\n  y?: number;\n  /** layer width */\n  width?: number;\n  /** layer height */\n  height?: number;\n  /** the parent node of layer */\n  /** @ignore */\n  parent?: any;\n  /** @ignore */\n  canvas?: ICanvas;\n  name?: string;\n}\n\nexport interface Region {\n  /** the top-left corner of layer-range, range from 0 to 1, relative to parent layer's range */\n  readonly start: Point;\n  /** the bottom-right corner of layer-range, range from 0 to 1, relative to parent layer's range */\n  readonly end: Point;\n}\n\nexport interface Range {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport default class Layer<T extends LayerConfig = LayerConfig> extends EventEmitter {\n  public id: string;\n  public x: number;\n  public y: number;\n  public width: number;\n  public height: number;\n  public parent: Layer;\n  public canvas: ICanvas;\n  public layerBBox: BBox;\n  public layers: Layer[] = [];\n  public container: IGroup;\n  public destroyed: boolean = false;\n  protected visibility: boolean = true;\n  protected layerRegion: Region;\n  private rendered: boolean = false;\n  private eventHandlers: any[] = [];\n  public options: T;\n\n  /**\n   * layer base for g2plot\n   */\n  constructor(props: T) {\n    super();\n    this.options = this.getOptions(props);\n    this.processOptions(this.options);\n  }\n\n  public processOptions(options) {\n    this.id = options.id;\n    this.x = options.x;\n    this.y = options.y;\n    this.width = options.width;\n    this.height = options.height;\n    this.canvas = options.canvas;\n    this.parent = options.parent;\n  }\n\n  public updateConfig(cfg: Partial<T>): void {\n    this.options = deepMix({}, this.options, cfg);\n    this.processOptions(this.options);\n  }\n\n  public beforeInit() {\n    return null;\n  }\n\n  /**\n   * init life cycle\n   */\n  public init() {\n    this.layerBBox = this.getLayerBBox();\n    this.layerRegion = this.getLayerRegion();\n    this.eachLayer((layer) => {\n      layer.init();\n    });\n  }\n\n  public afterInit() {\n    return null;\n  }\n\n  /**\n   * render layer recursively\n   */\n  public render() {\n    // fixme: 等plot不再继承layer，这个就可以挪到构造函数里去，不需要再加是否render过的判断了\n    if (!this.rendered) {\n      this.container = this.parent ? this.parent.container.addGroup() : this.canvas.addGroup();\n    }\n    this.rendered = true;\n    this.beforeInit();\n    this.init();\n    this.afterInit();\n    //(this.container, [['t', this.x, this.y]]);\n    this.eachLayer((layer) => {\n      layer.render();\n    });\n    this.canvas.draw();\n  }\n\n  /**\n   * clear layer content\n   */\n  public clear() {\n    this.eachLayer((layer) => {\n      layer.destroy();\n    });\n    this.layers = [];\n    this.container.clear();\n  }\n\n  /**\n   * destroy layer recursively, remove the container of layer\n   */\n  public destroy() {\n    this.eachLayer((layer) => {\n      layer.destroy();\n    });\n    each(this.eventHandlers, (h) => {\n      this.off(h.eventName, h.handler);\n    });\n    this.container.remove(true);\n    this.destroyed = true;\n  }\n\n  /**\n   * display layer\n   */\n  public show() {\n    this.container.attr('visible', true);\n    this.container.set('visible', true);\n    this.visibility = true;\n    this.canvas.draw();\n  }\n\n  /**\n   * hide layer\n   */\n  public hide() {\n    this.container.attr('visible', false);\n    this.container.set('visible', false);\n    this.visibility = false;\n    this.canvas.draw();\n  }\n\n  /**\n   * add children layer\n   * @param layer\n   */\n  public addLayer(layer: Layer<any>) {\n    const idx = findIndex(this.layers, (item) => item === layer);\n    if (idx < 0) {\n      if (layer.parent !== this) {\n        layer.parent = this;\n        layer.init();\n      }\n      this.layers.push(layer);\n    }\n  }\n\n  /**\n   * remove children layer\n   * @param layer\n   */\n  public removeLayer(layer: Layer<any>) {\n    const idx = findIndex(this.layers, (item) => item === layer);\n    if (idx >= 0) {\n      this.layers.splice(idx, 1);\n    }\n  }\n\n  /**\n   * update layer's display range\n   * @param props\n   * @param recursive whether update children layers or not\n   */\n  public updateBBox(props: Range, recursive: boolean = false) {\n    const originRange = {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n    };\n    const newRange = deepMix({}, originRange, props);\n    this.x = newRange.x;\n    this.y = newRange.y;\n    this.width = newRange.width;\n    this.height = newRange.height;\n    this.layerBBox = this.getLayerBBox();\n    this.layerRegion = this.getLayerRegion();\n    this.render();\n    if (recursive) {\n      this.eachLayer((layer) => {\n        layer.updateBBoxByParent();\n        layer.render();\n      });\n    }\n    this.canvas.draw();\n  }\n\n  /**\n   * update display range according to parent layer's range\n   */\n  public updateBBoxByParent() {\n    const region = this.layerRegion;\n    this.x = this.parent.x + this.parent.width * region.start.x;\n    this.y = this.parent.y + this.parent.height * region.start.y;\n    this.width = this.parent.width * (region.end.x - region.start.x);\n    this.height = this.parent.height * (region.end.y - region.start.y);\n    this.layerBBox = this.getLayerBBox();\n  }\n\n  /**\n   * get global position of layer\n   */\n  public getGlobalPosition() {\n    let globalX = this.x;\n    let globalY = this.y;\n    let parent = this.parent;\n    while (parent) {\n      globalX += parent.x;\n      globalY += parent.y;\n      parent = parent.parent;\n    }\n    return { x: globalX, y: globalY };\n  }\n\n  public getGlobalBBox() {\n    const globalPosition = this.getGlobalPosition();\n    return new BBox(globalPosition.x, globalPosition.y, this.width, this.height);\n  }\n\n  public getOptions(props: Partial<T>): T {\n    let parentWidth = 0;\n    let parentHeight = 0;\n    if (props.parent) {\n      parentWidth = props.parent.width;\n      parentHeight = props.parent.height;\n    }\n    const defaultOptions = {\n      x: 0,\n      y: 0,\n      width: parentWidth,\n      height: parentHeight,\n    };\n    return deepMix({}, defaultOptions, props);\n  }\n\n  public eachLayer(cb: (layer: Layer<any>) => void) {\n    each(this.layers, cb);\n  }\n\n  protected parseEvents(eventParser?) {\n    const eventsName = keys(LAYER_EVENT_MAP);\n    each(eventParser, (e, k) => {\n      if (contains(eventsName, k) && isFunction(e)) {\n        const eventName = LAYER_EVENT_MAP[k] || k;\n        const handler = e;\n        this.on(eventName, handler);\n        this.eventHandlers.push({ name: eventName, handler });\n      }\n    });\n  }\n\n  private getLayerBBox() {\n    return new BBox(this.x, this.y, this.width, this.height);\n  }\n\n  private getLayerRegion() {\n    if (this.parent) {\n      const parentWidth = this.parent.width;\n      const parentHeight = this.parent.height;\n      const parentX = this.parent.x;\n      const parentY = this.parent.y;\n      const startX = (this.x - parentX) / parentWidth;\n      const startY = (this.y - parentY) / parentHeight;\n      const endX = (this.x + this.width - parentX) / parentWidth;\n      const endY = (this.y + this.height - parentY) / parentHeight;\n      return { start: { x: startX, y: startY }, end: { x: endX, y: endY } };\n    }\n    return { start: { x: 0, y: 0 }, end: { x: 1, y: 1 } };\n  }\n}\n"]}