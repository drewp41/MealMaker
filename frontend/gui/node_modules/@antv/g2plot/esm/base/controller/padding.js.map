{"version":3,"file":"padding.js","sourceRoot":"","sources":["../../../src/base/controller/padding.ts"],"names":[],"mappings":"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","sourcesContent":["import { filter, each, isArray, clone } from '@antv/util';\nimport ViewLayer from '../view-layer';\nimport BBox from '../../util/bbox';\nimport { getLegendComponents, getAxisComponents } from '../../util/common';\nimport { View, Axis, Legend } from '../../dependents';\n\ninterface ControllerConfig {\n  plot: ViewLayer;\n}\n\n/**\n * 处理图表padding的逻辑：\n * 注册参与padding的自定义组件\n */\n\nexport default class PaddingController {\n  private plot: ViewLayer;\n  private bleeding: number[];\n\n  private innerPaddingComponents: any[] = [];\n  private outerPaddingComponents: any[] = [];\n\n  constructor(cfg: ControllerConfig) {\n    this.plot = cfg.plot;\n  }\n\n  public registerPadding(component: any, type: 'outer' | 'inner' = 'outer', checkIfExist: boolean = false) {\n    if (type === 'inner') {\n      if (checkIfExist) {\n        if (!this.innerPaddingComponents.find((c) => c == component)) {\n          this.innerPaddingComponents.push(component);\n        }\n      } else {\n        this.innerPaddingComponents.push(component);\n      }\n    } else {\n      if (checkIfExist) {\n        if (!this.outerPaddingComponents.find((c) => c == component)) {\n          this.outerPaddingComponents.push(component);\n        }\n      } else {\n        this.outerPaddingComponents.push(component);\n      }\n    }\n  }\n\n  /**\n   * 清除已经注册的元素\n   */\n  public clear() {\n    this.innerPaddingComponents = [];\n    // 一些组件是在view渲染完成之后渲染初始化的\n    // TODO: afterRender的什么时候清除\n    this.outerPaddingComponents = filter(this.outerPaddingComponents, (component) => component.afterRender);\n  }\n\n  public clearOuterComponents() {\n    each(this.outerPaddingComponents, (component) => {\n      if (component.afterRender) {\n        component.destroy();\n      }\n    });\n    this.outerPaddingComponents = [];\n  }\n\n  public getPadding() {\n    const props = this.plot.options;\n    const padding = props.padding ? props.padding : this.plot.config.theme.padding;\n    if (padding === 'auto') {\n      return [0, 0, 0, 1];\n    }\n    return padding;\n  }\n\n  /** view层的padding计算 */\n  public processAutoPadding() {\n    const padding = this._getInnerAutoPadding();\n    this.plot.updateConfig({\n      padding,\n    });\n    this.plot.render();\n  }\n\n  public processOuterPadding() {\n    if (!this.plot.layerBBox) {\n      this.plot.layerBBox = new BBox(this.plot.x, this.plot.y, this.plot.width, this.plot.height);\n    }\n    let viewMinX = this.plot.layerBBox.minX;\n    let viewMaxX = this.plot.layerBBox.maxX;\n    let viewMinY = this.plot.layerBBox.minY;\n    let viewMaxY = this.plot.layerBBox.maxY;\n    each(this.outerPaddingComponents, (component) => {\n      const { position } = component;\n      const { minX, maxX, minY, maxY } = component.getBBox();\n      if (maxY >= viewMinY && maxY <= viewMaxY && position === 'top') {\n        viewMinY = maxY;\n      }\n      if (minY >= viewMinY && minY <= viewMaxY && position === 'bottom') {\n        viewMaxY = minY;\n      }\n      if (maxX > viewMinX && maxX <= viewMaxX && position === 'left') {\n        viewMinX = maxX;\n      }\n      if (minX >= viewMinX && maxX <= viewMaxX && position === 'right') {\n        viewMaxX = minX;\n      }\n    });\n    return new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\n  }\n\n  private _getInnerAutoPadding() {\n    const props = this.plot.options;\n    const view = this.plot.view;\n    const viewRange: any = clone(view.coordinateBBox);\n    const { maxX, maxY, minY, minX } = viewRange;\n    const bleeding = this.plot.config.theme.bleeding;\n    if (isArray(bleeding)) {\n      each(bleeding, (it, index) => {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](props);\n        }\n      });\n    }\n    this.plot.config.theme.legend.margin = bleeding;\n    this.bleeding = clone(bleeding);\n    // 参与auto padding的components: axis legend label annotation\n    const components_bbox = [new BBox(viewRange.minX, viewRange.minY, viewRange.width, viewRange.height)];\n    this._getAxis(view, components_bbox[0], components_bbox);\n    let box = this._mergeBBox(components_bbox);\n    this._getLegend(view, box, components_bbox);\n    box = this._mergeBBox(components_bbox);\n    // 参与auto padding的自定义组件\n    const components = this.innerPaddingComponents;\n    each(components, (obj) => {\n      const component = obj;\n      const bbox = component.getBBox();\n      components_bbox.push(bbox);\n    });\n    box = this._mergeBBox(components_bbox);\n    const padding = [\n      minY - box.minY + this.bleeding[0], // 上面超出的部分\n      box.maxX - maxX + this.bleeding[1], // 右边超出的部分\n      box.maxY - maxY + this.bleeding[2], // 下边超出的部分\n      minX - box.minX + this.bleeding[3],\n    ];\n    // label、annotation等\n    const panelPadding = this._getPanel(view);\n    padding[0] += panelPadding[0];\n    padding[1] += panelPadding[1];\n    padding[2] += panelPadding[2];\n    padding[3] += panelPadding[3];\n    return padding;\n  }\n\n  private _getAxis(view: View, globalBBox, bboxes: BBox[]) {\n    const axes = getAxisComponents(view);\n    const { isTransposed } = view.getCoordinate();\n    each(axes, (axis: Axis.Base) => {\n      if (axis.get('group').get('children').length === 0) {\n        return;\n      }\n      const position = axis.get('position');\n      const { minX, minY, width, height } = axis.getLayoutBBox();\n      if (!isTransposed) {\n        if (position === 'left') {\n          bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n        } else if (position === 'bottom') {\n          bboxes.push(new BBox(minX, globalBBox.maxY + height, width, height));\n        } else if (position === 'right') {\n          bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n        }\n      } else {\n        if (position === 'bottom') {\n          bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n        } else if (position === 'left') {\n          bboxes.push(new BBox(minX, globalBBox.maxY + height, width, height));\n        } else if (position === 'top') {\n          bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n        }\n      }\n    });\n  }\n\n  private _getLegend(view, globalBBox, bboxes) {\n    const legends = getLegendComponents(view);\n    each(legends, (legend: Legend.Base) => {\n      const position = legend.get('position').split('-')[0];\n      const { minX, minY, width, height } = legend.getLayoutBBox();\n      if (position === 'top') {\n        bboxes.push(new BBox(minX, globalBBox.minY - height, width, height));\n      } else if (position === 'bottom') {\n        bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\n      } else if (position === 'left') {\n        bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n      } else {\n        bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n      }\n    });\n  }\n\n  private _getPanel(view) {\n    const groups = [];\n    const geoms = view.geometries;\n    each(geoms, (geom) => {\n      if (geom.labelsContainer) {\n        groups.push(geom.labelsContainer);\n      }\n    });\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    each(groups, (group) => {\n      const children = group.get('children');\n      children.forEach((child) => {\n        if (child.type === 'group' && child.get('children').length === 0) {\n          return;\n        }\n        const bbox = child.getBBox();\n        if (bbox.minX < minX) {\n          minX = bbox.minX;\n        }\n        if (bbox.maxX > maxX) {\n          maxX = bbox.maxX;\n        }\n        if (bbox.minY < minY) {\n          minY = bbox.minY;\n        }\n        if (bbox.maxY > maxY) {\n          maxY = bbox.maxY;\n        }\n      });\n    });\n    const panelRange = view.coordinateBBox;\n    //right\n    let rightDist = Math.max(maxX - parseFloat(panelRange.maxX), 0);\n    if (rightDist > 0) {\n      const ratio = panelRange.width / (panelRange.width + rightDist);\n      rightDist *= ratio;\n    }\n    //left\n    let leftDist = Math.max(parseFloat(panelRange.minX) - minX, 0);\n    if (leftDist > 0) {\n      const ratio = panelRange.width / (panelRange.width + leftDist);\n      leftDist *= ratio;\n    }\n    //top\n    let topDist = Math.max(parseFloat(panelRange.minY) - minY, 0);\n    if (topDist > 0) {\n      const ratio = panelRange.height / (panelRange.height + topDist);\n      topDist *= ratio;\n    }\n    //bottom\n    let bottomDist = Math.max(maxY - parseFloat(panelRange.maxY), 0);\n    if (bottomDist > 0) {\n      const ratio = panelRange.height / (panelRange.height + bottomDist);\n      bottomDist *= ratio;\n    }\n\n    return [topDist, rightDist, bottomDist, leftDist];\n  }\n\n  private _mergeBBox(bboxes) {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n\n    each(bboxes, (bbox) => {\n      const box = bbox;\n      minX = Math.min(box.minX, minX);\n      maxX = Math.max(box.maxX, maxX);\n      minY = Math.min(box.minY, minY);\n      maxY = Math.max(box.maxY, maxY);\n    });\n\n    return { minX, maxX, minY, maxY };\n  }\n\n  /* private adjustAxisPadding(view: View, padding: MarginPadding) {\n    // 3.6.x Axis组件的 autoRotate padding 修正\n    const xAxis = view.get('axisController').axes[0];\n    if (!xAxis || !xAxis.get('autoRotateLabel') || !xAxis.getOffsetByRotateAngle) {\n      return;\n    }\n    const labelRenderer = xAxis.get('labelRenderer');\n    const labels = labelRenderer.getLabels();\n    const curOffset = xAxis.getOffsetByRotateAngle(xAxis.get('autoRotateAngle'));\n    const curTotalWidth = Math.abs(xAxis.get('end').x - xAxis.get('start').x);\n    // 如果只有一项数据, 平均宽度 = 总宽\n    let curAvgWidth = curTotalWidth;\n    // 当多项数据时，根据 label 位置计算均宽\n    if (labels.length > 1) {\n      curAvgWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n    }\n    const newTotalWidth = curTotalWidth - padding[1] - padding[3];\n    const newAvgWidth = (curAvgWidth * newTotalWidth) / curTotalWidth;\n    const newOffset = xAxis.getOffsetByRotateAngle(xAxis.getAutoRotateAngleByAvgWidth(newAvgWidth));\n\n    if (newOffset > curOffset) {\n      padding[2] += newOffset - curOffset;\n    }\n  }*/\n}\n"]}