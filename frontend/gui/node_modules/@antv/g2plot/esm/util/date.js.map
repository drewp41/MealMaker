{"version":3,"file":"date.js","sourceRoot":"","sources":["../../src/util/date.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AACxC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AAEvD;;GAEG;AACH,MAAM,CAAC,IAAM,MAAM,GAAG,QAAQ,CAAC;AAE/B;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,KAAa;IACxC,IAAM,EAAE,GAAG,eAAI,KAAK,EAAE,IAAI,CAAC,UAAC,CAAO,EAAE,CAAO,IAAK,OAAA,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EAAzB,CAAyB,CAAC,CAAC;IAE5E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,IAAW;IACtC,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;IAEtC,OAAO;QACL,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC;QAC3D,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC;KAC9D,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAC,IAAU;IAC1C,kBAAkB;IAClB,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC9E,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,IAAU;IACzC,kBAAkB;IAClB,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC1E,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,OAAO,CAAC,IAAU;IAChC,SAAS;IACT,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAElD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7F,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,MAAM,CAAC,IAAU;IAC/B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;AACvB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,SAAS,CAAC,CAAO,EAAE,EAAU;IAC3C,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5C,OAAO,CAAC,CAAC;AACX,CAAC","sourcesContent":["import { head, last } from '@antv/util';\nimport fecha from 'fecha';\nimport { FORMATTER } from '../plots/calendar/constant';\n\n/**\n * 一天多少 ms\n */\nexport const DAY_MS = 86400000;\n\n/**\n * 获取最大最小日期范围\n * @param dates\n */\nexport function getDateRange(dates: Date[]): string[] {\n  const ds = [...dates].sort((a: Date, b: Date) => a.getTime() - b.getTime());\n\n  return [fecha.format(head(ds), FORMATTER), fecha.format(last(ds), FORMATTER)];\n}\n\n/**\n * 日期对应年的范围\n * @param date\n */\nexport function getYearRange(date?: Date): string[] {\n  const curr = date ? date : new Date();\n\n  return [\n    fecha.format(new Date(curr.getFullYear(), 0, 1), FORMATTER),\n    fecha.format(new Date(curr.getFullYear(), 11, 30), FORMATTER),\n  ];\n}\n\n/**\n * 是否当前月的最后一周\n */\nexport function isLastWeekOfMonth(date: Date): boolean {\n  // 偏移 7 天之后，月份是否一样\n  return date.getMonth() !== advanceBy(new Date(date), 7 * DAY_MS).getMonth();\n}\n\n/**\n * 是否是当月的最后一天\n */\nexport function isLastDayOfMonth(date: Date): boolean {\n  // 偏移 1 天之后，月份是否一样\n  return date.getMonth() !== advanceBy(new Date(date), DAY_MS).getMonth();\n}\n\n/**\n * 获取 date 对应的周索引（国际标准：一年的第一个周四为第一周）\n * @param date\n */\nexport function getWeek(date: Date): number {\n  // 当年的第一天\n  const oneJan = new Date(date.getFullYear(), 0, 1);\n\n  return Math.ceil(((date.getTime() - oneJan.getTime()) / DAY_MS + oneJan.getDay() + 1) / 7);\n}\n\n/**\n * 获得一周的第几天（周日第 0 天）\n * @param date\n */\nexport function getDay(date: Date): number {\n  return date.getDay();\n}\n\n/**\n * 将 Date 前进 ms 时间\n * @param d\n * @param ms\n */\nexport function advanceBy(d: Date, ms: number): Date {\n  d.setMilliseconds(d.getMilliseconds() + ms);\n  return d;\n}\n"]}