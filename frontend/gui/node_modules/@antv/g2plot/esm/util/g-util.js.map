{"version":3,"file":"g-util.js","sourceRoot":"","sources":["../../src/util/g-util.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,UAAU,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AACnC,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAErC,MAAM,UAAU,cAAc,CAAC,KAAK,EAAE,OAAO;IAC3C,IAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,IAAM,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACvD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,OAAO,EAAE,MAAO;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,OAAO,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAO;IACzC,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;IACrC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,OAAO,EAAE,MAAM;IACpC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["import * as MatrixUtil from '@antv/matrix-util';\nimport { clone } from '@antv/util';\nimport { Util } from '../dependents';\n\nexport function groupTransform(group, actions) {\n  const ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  const matrix = MatrixUtil.transform(ulMatrix, actions);\n  group.setMatrix(matrix);\n}\n\nexport function transform(actions, matrix?) {\n  const ulMatrix = matrix ? clone(matrix) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  return MatrixUtil.transform(ulMatrix, actions);\n}\n\nexport function move(element, x, y, matrix?) {\n  const ulMatrix = matrix ? clone(matrix) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  ulMatrix[6] = x;\n  ulMatrix[7] = y;\n  element.setMatrix(ulMatrix);\n}\n\nexport function translate(element, x, y) {\n  Util.translate(element, x, y);\n}\n\nexport function rotate(element, radian) {\n  Util.rotate(element, radian);\n}\n"]}