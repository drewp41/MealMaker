import ViewLayer from '../base/view-layer';
import { LooseMap } from '../interface/types';
declare type IEventmap = LooseMap<string>;
declare const EVENT_MAP: IEventmap;
declare const CANVAS_EVENT_MAP: {
    onPlotClick: string;
    onPlotDblClick: string;
    onPlotMousemove: string;
    onPlotMousedown: string;
    onPlotMouseup: string;
    onPlotMouseenter: string;
    onPlotMouseleave: string;
    onPlotContextmenu: string;
    onTitleClick: string;
    onTitleDblClick: string;
    onTitleMousemove: string;
    onTitleMousedown: string;
    onTitleMouseup: string;
    onTitleMouseenter: string;
    onTitleMouseleave: string;
    onTitleContextmenu: string;
    onDescriptionClick: string;
    onDescriptionDblClick: string;
    onDescriptionMousemove: string;
    onDescriptionMousedown: string;
    onDescriptionMouseup: string;
    onDescriptionMouseenter: string;
    onDescriptionMouseleave: string;
    onDescriptionContextmenu: string;
    onBreadcrumbClick: string;
    onBreadcrumbDblClick: string;
    onBreadcrumbMousemove: string;
    onBreadcrumbMousedown: string;
    onBreadcrumbMouseup: string;
    onBreadcrumbMouseenter: string;
    onBreadcrumbMouseleave: string;
    onBreadcrumbContextmenu: string;
};
declare const LAYER_EVENT_MAP: {
    onLayerClick: string;
    onLayerDblClick: string;
    onLayerMousemove: string;
    onLayerMousedown: string;
    onLayerMouseup: string;
    onLayerMouseenter: string;
    onLayerMouseleave: string;
    onLayerContextmenu: string;
};
declare type Handler = (...__: any[]) => {};
declare function onEvent(layer: ViewLayer, eventName: string, handler: Handler): void;
export declare function getEventMap(map: any): IEventmap;
export { IEventmap, EVENT_MAP, CANVAS_EVENT_MAP, LAYER_EVENT_MAP, onEvent };
