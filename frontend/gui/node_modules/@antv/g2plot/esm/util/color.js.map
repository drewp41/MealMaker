{"version":3,"file":"color.js","sourceRoot":"","sources":["../../src/util/color.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAElC,MAAM,UAAU,OAAO,CAAC,GAAW;IACjC,IAAM,QAAQ,GAAW,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACtE,IAAM,GAAG,GAAG,EAAE,CAAC;IACf,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9C,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,KAAK;IACzB,IAAI,CAAC,CAAC;IACN,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QAClB,CAAC,GAAG,MAAI,KAAO,CAAC;KACjB;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,GAAG;IACzB,OAAO,OAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;AAC7D,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,IAAI,EAAE,IAAI;IACrC,IAAI,OAAO,CAAC;IACZ,IAAI,CAAC,IAAI,EAAE,UAAC,CAAC;QACX,IAAM,GAAG,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,EAAE;YACrC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,wBAAwB;AACxB,oDAAoD;AACpD,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,GAAW;IACxC,IAAA,iBAAwB,EAAvB,SAAC,EAAE,SAAC,EAAE,SAAiB,CAAC;IAC/B,IAAM,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;IAE1D,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { each } from '@antv/util';\n\nexport function rgb2arr(str: string) {\n  const colorStr: string = str.indexOf('#') === 0 ? str.substr(1) : str;\n  const arr = [];\n  arr.push(parseInt(colorStr.substr(0, 2), 16));\n  arr.push(parseInt(colorStr.substr(2, 2), 16));\n  arr.push(parseInt(colorStr.substr(4, 2), 16));\n  return arr;\n}\n\nexport function toHex(value) {\n  let v;\n  v = Math.round(value);\n  v = v.toString(16);\n  if (v.length === 1) {\n    v = `0${value}`;\n  }\n  return v;\n}\n\nexport function arr2rgb(arr) {\n  return `#${toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2])}`;\n}\n\nexport function mappingColor(band, gray) {\n  let reflect;\n  each(band, (b) => {\n    const map = b;\n    if (gray >= map.from && gray < map.to) {\n      reflect = map.color;\n    }\n  });\n  return reflect;\n}\n\n// 根据YIQ亮度判断指定颜色取反色是不是白色\n// http://24ways.org/2010/calculating-color-contrast\nexport const isContrastColorWhite = (rgb: string): boolean => {\n  const [r, g, b] = rgb2arr(rgb);\n  const isDark = (r * 299 + g * 587 + b * 114) / 1000 < 128;\n\n  return isDark;\n};\n"]}