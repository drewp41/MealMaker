{"version":3,"file":"nodes-resampling.js","sourceRoot":"","sources":["../../../../src/util/responsive/rules/nodes-resampling.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAC5C,OAAO,QAAQ,MAAM,aAAa,CAAC;AAMnC,MAAM,CAAC,OAAO,UAAU,eAAe,CAAC,KAAK,EAAE,MAA0B,EAAE,KAAK,EAAE,GAAG;IACnF,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAC9B,wDAAwD;IACxD,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;QACrC,OAAO;KACR;IACD;QACE,IAAM,KAAK,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9C,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;KACF;AACH,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK;IAC1C,6BAA6B;IAC7B,IAAM,UAAU,GAAG,EAAE,CAAC;IACtB,IAAI,CAAC,OAAO,EAAE,UAAC,GAAG;QAChB,IAAI,GAAG,KAAK,OAAO,EAAE;YACnB,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;SAC9B;aAAM,IAAI,GAAG,KAAK,KAAK,EAAE;YACxB,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC7C;aAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC;SAChC;IACH,CAAC,CAAC,CAAC;IACH,KAAwB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;QAA/B,IAAM,SAAS,mBAAA;QAClB,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { each, isNumber } from '@antv/util';\nimport textHide from './text-hide';\n\nexport interface NodesResamplingCfg {\n  keep: string[];\n}\n\nexport default function nodesResampling(shape, option: NodesResamplingCfg, index, cfg) {\n  const nodes = cfg.nodes.nodes;\n  /** nodeLength为偶数，则奇数index的shape保留，反之则偶数index的shape保留 */\n  const oddKeep = nodes.length % 2 === 0 ? false : true;\n  if (isKeep(option.keep, index, nodes)) {\n    return;\n  }\n  {\n    const isOdd = index % 2 === 0 ? true : false;\n    if ((!oddKeep && isOdd) || (oddKeep && !isOdd)) {\n      textHide(shape);\n    }\n  }\n}\n\nexport function isKeep(keepCfg, index, nodes) {\n  /** 允许设置start end 或任意index */\n  const conditions = [];\n  each(keepCfg, (cfg) => {\n    if (cfg === 'start') {\n      conditions.push(index === 0);\n    } else if (cfg === 'end') {\n      conditions.push(index === nodes.length - 1);\n    } else if (isNumber(cfg)) {\n      conditions.push(index === cfg);\n    }\n  });\n  for (const condition of conditions) {\n    if (condition === true) {\n      return true;\n    }\n  }\n  return false;\n}\n"]}