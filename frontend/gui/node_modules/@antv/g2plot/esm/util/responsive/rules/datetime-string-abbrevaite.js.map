{"version":3,"file":"datetime-string-abbrevaite.js","sourceRoot":"","sources":["../../../../src/util/responsive/rules/datetime-string-abbrevaite.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport fecha from 'fecha';\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst MONTH = 31 * DAY;\nconst YEAR = 365 * DAY;\n\ninterface TimeStringAbbrevaiteCfg {\n  keep?: string[];\n}\n\nexport default function datetimeStringAbbrevaite(shape, option: TimeStringAbbrevaiteCfg, index, cfg) {\n  const nodes = cfg.nodes.nodes;\n  let campareText;\n  if (index === nodes.length - 1) {\n    campareText = nodes[index - 1].shape.get('delegateObject').item.name;\n  } else {\n    campareText = nodes[index + 1].shape.get('delegateObject').item.name;\n  }\n  const compare = new Date(campareText);\n  /** 获取时间周期和时间间隔 */\n  const text = shape.get('delegateObject').item.name;\n  const current = new Date(text);\n  const startText = nodes[0].shape.get('delegateObject').item.name;\n  const start = new Date(startText);\n  const endText = nodes[nodes.length - 1].shape.get('delegateObject').item.name;\n  const end = new Date(endText);\n  const timeDuration = getDateTimeMode(start, end);\n  const timeCycle = getDateTimeMode(current, compare); // time frequency\n  // 如果duration和frequency在同一区间\n  if (timeDuration === timeCycle) {\n    if (index !== 0 && index !== nodes.length - 1) {\n      const formatter = sameSectionFormatter(timeDuration);\n      shape.attr('text', fecha.format(current, formatter));\n    }\n    return;\n  }\n  if (index !== 0) {\n    const previousText = nodes[index - 1].shape.get('delegateObject').item.name;\n    const previous = new Date(previousText);\n    const isAbbreviate = needAbbrevaite(timeDuration, current, previous);\n    if (isAbbreviate) {\n      const formatter = getAbbrevaiteFormatter(timeDuration, timeCycle);\n      shape.attr('text', fecha.format(current, formatter));\n      return;\n    }\n  }\n}\n\nfunction needAbbrevaite(mode, current, previous) {\n  const currentStamp = getTime(current, mode);\n  const previousStamp = getTime(previous, mode);\n  if (currentStamp !== previousStamp) {\n    return false;\n  }\n  return true;\n}\n\nfunction getDateTimeMode(a, b) {\n  let mode;\n  const dist = Math.abs(a - b);\n  const mapper = {\n    minute: [MINUTE, HOUR],\n    hour: [HOUR, DAY],\n    day: [DAY, MONTH],\n    month: [MONTH, YEAR],\n    year: [YEAR, Infinity],\n  };\n  each(mapper, (range, key) => {\n    if (dist >= range[0] && dist < range[1]) {\n      mode = key;\n    }\n  });\n  return mode;\n}\n\nfunction getAbbrevaiteFormatter(duration, cycle) {\n  const times = ['year', 'month', 'day', 'hour', 'minute'];\n  const formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\n  const startIndex = times.indexOf(duration) + 1;\n  const endIndex = times.indexOf(cycle);\n  let formatter = '';\n  for (let i = startIndex; i <= endIndex; i++) {\n    formatter += formatters[i];\n    if (i < endIndex) {\n      formatter += '-';\n    }\n  }\n  return formatter;\n}\n\nfunction sameSectionFormatter(mode) {\n  const times = ['year', 'month', 'day', 'hour', 'minute'];\n  const formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\n  const index = times.indexOf(mode);\n  const formatter = formatters[index];\n  return formatter;\n}\n\nfunction getTime(date: Date, mode: string) {\n  if (mode === 'year') {\n    return date.getFullYear();\n  }\n  if (mode === 'month') {\n    return date.getMonth() + 1;\n  }\n  if (mode === 'day') {\n    return date.getDay() + 1;\n  }\n\n  if (mode === 'hour') {\n    return date.getHours() + 1;\n  }\n\n  if (mode === 'minute') {\n    return date.getMinutes() + 1;\n  }\n}\n\n/*tslint:disable*/\nexport function isTime(string) {\n  const hourminExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d)):[0-5]\\d$/;\n  const hourminSecExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d))(?::[0-5]\\d){2}$/;\n  return hourminExp.test(string) || hourminSecExp.test(string);\n}\n"]}