{"version":3,"file":"text-wrapper.js","sourceRoot":"","sources":["../../../../src/util/responsive/rules/text-wrapper.ts"],"names":[],"mappings":"AAMA,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,KAAa,EAAE,MAAsB;IACvE,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACxD,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;QAC1C,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;QACvB,WAAW,GAAM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,UAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,CAAC;KAC/D;IACD,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,KAAK,CAAC,IAAI,CAAC;QACT,IAAI,EAAE,WAAW;QACjB,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,QAAQ;QACnB,YAAY,EAAE,KAAK;KACpB,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { IShape } from '@antv/g-base';\n\ninterface TextWrapperCfg {\n  lineNumber: number;\n}\n\nexport default function textWrapper(shape: IShape, option: TextWrapperCfg) {\n  const text = shape.attr('text');\n  const step = Math.ceil(text.length / option.lineNumber);\n  let wrapperText = '';\n  for (let i = 1; i < option.lineNumber; i++) {\n    const index = step * i;\n    wrapperText = `${text.slice(0, index)}\\n${text.slice(index)}`;\n  }\n  const fontSize = shape.attr('fontSize');\n  shape.attr({\n    text: wrapperText,\n    lineHeight: fontSize,\n    textAlign: 'center',\n    textBaseline: 'top',\n  });\n}\n"]}