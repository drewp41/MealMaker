{"version":3,"file":"responsive.js","sourceRoot":"","sources":["../../../src/util/responsive/responsive.ts"],"names":[],"mappings":"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","sourcesContent":["/** 可插拔的responsive模块 */\nimport { IShape, BBox } from '@antv/g-base';\nimport { assign } from '@antv/util';\nimport { constraintsLib } from './constraints/index';\nimport ShapeNodes, { IShapeNode } from './node/shape-nodes';\nimport VariableNodes from './node/variable-node';\nimport { rulesLib } from './rules/index';\nimport { LooseMap } from '../../interface/types';\n\ninterface IConstraint {\n  name: string;\n  option?: any;\n}\n\ninterface IRule {\n  name: string;\n  method?: (...args: any[]) => any;\n  option?: any;\n}\n\ninterface ResponsiveCfg {\n  plot: any;\n  region?: any;\n  nodes: ShapeNodes | VariableNodes;\n  constraints: IConstraint[];\n  rules?: any;\n  iterationTime?: number;\n  onStart?: (...args: any[]) => any;\n  onIteration?: (...args: any[]) => any;\n  onEnd?: (...args: any[]) => any;\n  cfg?: LooseMap;\n}\n\nexport default class Responsive {\n  public plot: any;\n  public region: BBox;\n  public nodes: ShapeNodes | VariableNodes;\n  public constraints: any[];\n  public rules: any[];\n  public iterationTime: number = 10;\n  public iterationIndex: number = 0;\n  public rulesLocker: any[] = [];\n  public currentConstraint: IConstraint;\n  public constraintIndex: number = 0;\n  public onStart: (nodes: ShapeNodes | VariableNodes) => void;\n  public onIteration: (nodes: ShapeNodes | VariableNodes) => void;\n  public onEnd: (nodes: ShapeNodes | VariableNodes) => void;\n\n  constructor(cfg: ResponsiveCfg) {\n    assign(this, cfg);\n    this.currentConstraint = this.constraints[0];\n    if (this.rules) {\n      this.iterationTime = this.rules[this.currentConstraint.name].length;\n    }\n    this._start();\n    this._run();\n    this._end();\n  }\n\n  private _start() {\n    if (this.onStart) {\n      this.onStart(this.nodes);\n    }\n  }\n\n  private _iteration() {\n    let nodes;\n    if (this.nodes.type === 'shape') {\n      nodes = this.nodes as ShapeNodes;\n    } else {\n      nodes = this.nodes as VariableNodes;\n    }\n    if (nodes.type === 'shape') {\n      nodes.measureNodes();\n    }\n    if (this.rules) {\n      this._applyRules();\n    }\n    if (nodes.type === 'shape') {\n      nodes.measureNodes();\n    }\n    if (this.onIteration) {\n      this.onIteration(this.nodes);\n    }\n  }\n\n  private _end() {\n    if (this.onEnd) {\n      this.onEnd(this.nodes);\n    }\n  }\n\n  private _run() {\n    let constraintPassed = this._constraintsTest();\n    while (!constraintPassed) {\n      if (this.iterationIndex > this.iterationTime - 1) {\n        break;\n      }\n      this._iteration();\n      constraintPassed = this._constraintsTest();\n      this.iterationIndex++;\n    }\n    if (this.constraintIndex < this.constraints.length - 1) {\n      this.constraintIndex++;\n      this.currentConstraint = this.constraints[this.constraintIndex];\n      this.iterationTime = this.rules ? this.rules[this.currentConstraint.name].length : 1;\n      this.iterationIndex = 0;\n      this._run();\n    }\n  }\n\n  private _constraintsTest(): boolean {\n    const constraint = constraintsLib[this.currentConstraint.name];\n    const constraintOption = this.currentConstraint.option;\n    if (constraint.usage === 'compare') {\n      return this._constraintCompare(constraint, constraintOption);\n    }\n    return this._constraintAssignment(constraint, constraintOption);\n  }\n\n  private _constraintCompare(constraint, option) {\n    const { type, expression } = constraint;\n    const nodes = this.nodes.nodes;\n    if (type === 'chain') {\n      return this._chainConstraintCompare(expression, nodes, option);\n    }\n    if (type === 'padding') {\n      return this._paddingConstraintCompare(expression, this.region, nodes, option);\n    }\n    if (type === 'group') {\n      return this._groupConstraintCompare(expression, nodes, option);\n    }\n  }\n\n  private _chainConstraintCompare(expression, nodes, option) {\n    for (let i = 0; i < nodes.length - 1; i++) {\n      const a = nodes[i];\n      const b = nodes[i + 1];\n      if (expression(a, b, option) === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private _paddingConstraintCompare(expression, region, nodes, option) {\n    if (region) {\n      for (const node of nodes) {\n        if (expression(node, region, option) === false) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  private _groupConstraintCompare(expression, nodes, option) {\n    for (let i = 0; i < nodes.length; i++) {\n      const a = nodes[i];\n      for (let j = 0; j < nodes.length; j++) {\n        if (j !== i) {\n          const b = nodes[j];\n          if (expression(a, b, option) === false) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private _constraintAssignment(constraint, option) {\n    const { type, expression } = constraint;\n    const nodes = this.nodes.nodes;\n    if (type === 'chain') {\n      return this._chainConstraintAssign();\n    }\n    if (type === 'padding') {\n      return this._paddingConstraintAssign(expression, this.region, nodes, option);\n    }\n  }\n\n  private _chainConstraintAssign() {\n    return true;\n  }\n\n  private _paddingConstraintAssign(expression, region, nodes, option) {\n    if (region) {\n      for (const node of nodes) {\n        const value = expression(node, region, option);\n        node.value = value;\n      }\n    }\n    return true;\n  }\n\n  private _applyRules() {\n    const ruleCfg = this.rules[this.currentConstraint.name][this.iterationIndex];\n    // if (this.rulesLocker.indexOf(ruleCfg) < 0) {\n    const rule = rulesLib[ruleCfg.name];\n    const option = ruleCfg.option ? ruleCfg.option : {};\n    const nodes = this.nodes.nodes as IShapeNode[];\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      /** apply rule上下文 */\n      this._applyRule(node.shape, rule, option, i);\n    }\n    // this.rulesLocker.push(ruleCfg);\n    // }\n  }\n\n  private _applyRule(shape: IShape, rule, option, index) {\n    const cfg = {\n      nodes: this.nodes,\n      region: this.region,\n      plot: this.plot,\n    };\n    // rule(shape, option, index, this);\n    rule(shape, option, index, cfg);\n  }\n}\n"]}