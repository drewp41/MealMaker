{"version":3,"file":"node-jitter.js","sourceRoot":"","sources":["../../../../src/util/responsive/rules/node-jitter.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAE1C,mBAAmB;AACnB,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,KAAa,EAAE,KAAK,EAAE,GAAG;IAC1D,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAC9B,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QAC9B,OAAO;KACR;IACD,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7B,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACtB,IAAA,uCAAG,CAAmC;IAC9C,IAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC3C,IAAI,GAAG,KAAK,GAAG,EAAE;QACf,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;KACpC;AACH,CAAC;AAED,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK;IAClC,IAAI,GAAG,CAAC;IACR,wBAAwB;IACxB,IAAM,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IACtF,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACjE,IAAM,iBAAiB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS;IACpD,kBAAkB;IAClB,IAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAC9B,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CACtF,CAAC;IACF,IAAM,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IACpD,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAC7D,IAAI,KAAK,GAAG,CAAC;QAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;IACnC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,mBAAmB;IAE/C,2BAA2B;IAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IACtD,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IAEtD,IAAI,KAAK,GAAG,EAAE,EAAE;QACd,GAAG,GAAG,GAAG,CAAC;KACX;SAAM,IAAI,KAAK,GAAG,EAAE,EAAE;QACrB,GAAG,GAAG,GAAG,CAAC;KACX;IAED,OAAO,EAAE,GAAG,KAAA,EAAE,KAAK,OAAA,EAAE,KAAK,OAAA,EAAE,CAAC;AAC/B,CAAC;AAED,SAAS,WAAW,CAAC,KAAK;IACxB,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;QAC9B,OAAO,GAAG,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;QAC9B,OAAO,KAAK,GAAG,GAAG,CAAC;KACpB;IACD,OAAO,GAAG,GAAG,KAAK,CAAC;AACrB,CAAC","sourcesContent":["import { IShape } from '@antv/g-base';\nimport { dotProduct2D } from '../../math';\n\n/** 图形在水平或垂直方向抖开 */\nexport default function nodeJitter(shape: IShape, index, cfg) {\n  const nodes = cfg.nodes.nodes;\n  if (index === nodes.length - 1) {\n    return;\n  }\n  const current = nodes[index];\n  const next = nodes[index + 1];\n  const { dir } = alignDirection(current, next);\n  const startPoint = shape.get('startPoint');\n  if (dir === 'x') {\n    shape.attr('y', startPoint.y + 20);\n  }\n}\n\nfunction alignDirection(nodeA, nodeB) {\n  let dir;\n  /** 计算两个node 中心点向量的角度 */\n  const vector = { x: nodeB.centerX - nodeA.centerX, y: nodeB.centerY - nodeA.centerY };\n  const mag = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n  const vector_horizontal = { x: 10, y: 0 }; // 水平方向向量\n  /*tslint:disable*/\n  const mag_horizontal = Math.sqrt(\n    vector_horizontal.x * vector_horizontal.x + vector_horizontal.y * vector_horizontal.y\n  );\n  const dot = dotProduct2D(vector, vector_horizontal);\n  let angle = ((dot / (mag * mag_horizontal)) * 180) / Math.PI;\n  if (angle < 0) angle = 360 - angle;\n  angle = adjustAngle(angle); // 将角度从0-360转换到0-90\n\n  /** 计算两个node在x、y两个方向上的距离 */\n  const distX = Math.abs(nodeA.centerX - nodeB.centerX);\n  const distY = Math.abs(nodeA.centerY - nodeB.centerY);\n\n  if (angle > 45) {\n    dir = 'x';\n  } else if (angle < 45) {\n    dir = 'y';\n  }\n\n  return { dir, distX, distY };\n}\n\nfunction adjustAngle(angle) {\n  if (angle > 90 && angle <= 180) {\n    return 180 - angle;\n  }\n  if (angle > 180 && angle < 270) {\n    return angle - 180;\n  }\n  return 360 - angle;\n}\n"]}