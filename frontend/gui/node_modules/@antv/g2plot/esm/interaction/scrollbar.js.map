{"version":3,"file":"scrollbar.js","sourceRoot":"","sources":["../../src/interaction/scrollbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, Scrollbar } from '../dependents';\nimport BBox from '../util/bbox';\nimport { Scale } from '@antv/scale';\nimport { clamp, get, isEqual, map, throttle } from '@antv/util';\nimport ViewLayer from '../base/view-layer';\nimport { IScrollbarInteractionConfig } from '../interface/config';\nimport BaseInteraction from './base';\nimport { getDataByScaleRange } from './helper/data-range';\n\nconst DEFAULT_PADDING: number = 4;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\nconst SCROLL_BAR_Z_INDEX: number = 999;\n\nconst getValidScrollbarConfig = (cfg: IScrollbarInteractionConfig = {}): Required<IScrollbarInteractionConfig> => {\n  const _cfg: Required<IScrollbarInteractionConfig> = {\n    type: 'horizontal',\n    categorySize: DEFAULT_CATEGORY_SIZE,\n    width: DEFAULT_SIZE,\n    height: DEFAULT_SIZE,\n    padding: [0, 0, 0, 0],\n    ...cfg,\n  };\n\n  // default padding\n  if (!cfg.padding) {\n    _cfg.padding =\n      _cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n  }\n\n  return _cfg;\n};\n\nexport default class ScrollbarInteraction extends BaseInteraction {\n  public static getInteractionRange(layerRange: BBox, interaction: IScrollbarInteractionConfig) {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(interaction);\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding;\n\n    if (config.type === 'horizontal') {\n      return new BBox(\n        layerRange.minX,\n        layerRange.maxY - config.height - paddingTop - paddingBottom,\n        layerRange.width,\n        config.height + paddingTop + paddingBottom\n      );\n    } else {\n      return new BBox(\n        layerRange.maxX - config.width - paddingLeft - paddingRight,\n        layerRange.minY,\n        config.width + paddingLeft + paddingRight,\n        layerRange.height\n      );\n    }\n  }\n\n  private container: IGroup;\n  private scrollbar: Scrollbar;\n  private cnt: number;\n  private step: number;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Array<{\n    field: string;\n    type: string;\n    min: number;\n    max: number;\n    ticks: number[];\n    formatter: any;\n  }>;\n  private ratio: number;\n  private thumbOffset: number;\n  private trackLen: number;\n  private thumbLen: number;\n  private onChangeFn = throttle(this.onChange.bind(this), 20, {\n    leading: true,\n  }) as (evt: object) => void;\n\n  protected render(): void {\n    const view = this.view;\n    this.ratio = 0;\n    this.thumbOffset = 0;\n    view.on('afterrender', () => {\n      const padding = this.view.padding;\n      // if we're not in `auto padding` process\n      if (!isEqual([0, 0, 0, 0], padding)) {\n        if (!this.trackLen) {\n          this.measureScrollBar();\n          this.changeViewData(this.getScrollRange(), true);\n        } else {\n          this.renderScrollbar();\n        }\n      }\n    });\n  }\n\n  protected start() {\n    return;\n  }\n\n  protected clear(): void {\n    if (this.scrollbar) {\n      this.scrollbar.destroy();\n      this.scrollbar = null;\n    }\n    if (this.container) {\n      this.container.remove(true);\n      this.container = null;\n    }\n    this.trackLen = null;\n    this.thumbLen = null;\n  }\n\n  private renderScrollbar(): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const range = this.getRange();\n    const isHorizontal = config.type !== 'vertical';\n    const panelRange = this.view.coordinateBBox;\n    const [paddingTop, , , paddingLeft] = config.padding;\n    const position = isHorizontal\n      ? { x: panelRange.minX + paddingLeft, y: range.minY + paddingTop }\n      : { x: range.minX + paddingLeft, y: panelRange.minY + paddingTop };\n\n    if (!this.scrollbar) {\n      this.container = this.canvas.addGroup();\n      this.scrollbar = new Scrollbar({\n        container: this.container,\n        x: position.x,\n        y: position.y,\n        isHorizontal,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: this.ratio * this.trackLen,\n      });\n      this.scrollbar.init();\n      this.scrollbar.render();\n      this.scrollbar.get('group').set('zIndex', SCROLL_BAR_Z_INDEX);\n      this.scrollbar.on('scrollchange', this.onChangeFn);\n    } else {\n      this.scrollbar.update({\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: this.thumbOffset,\n        x: position.x,\n        y: position.y,\n      });\n      this.scrollbar.render();\n    }\n  }\n\n  private measureScrollBar(): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding;\n    const isHorizontal: boolean = config.type !== 'vertical';\n    const panelRange = this.view.coordinateBBox;\n    const xScale: Scale = this.view.getXScale();\n    const yScales: Scale[] = this.view.getYScales();\n\n    this.cnt = xScale.values.length;\n    this.xScaleCfg = { field: xScale.field, values: xScale.values || [] };\n    this.yScalesCfg = map(yScales, (item) => ({\n      field: item.field,\n      type: item.type,\n      min: item.min,\n      max: item.max,\n      ticks: item.ticks,\n      formatter: item.formatter,\n    }));\n    this.step = Math.floor((isHorizontal ? panelRange.width : panelRange.height) / config.categorySize);\n    this.trackLen = isHorizontal\n      ? panelRange.width - paddingLeft - paddingRight\n      : panelRange.height - paddingTop - paddingBottom;\n    this.thumbLen = Math.max(this.trackLen * clamp(this.step / xScale.values.length, 0, 1), MIN_THUMB_LENGTH);\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step, this.cnt);\n\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const viewLayer: ViewLayer = this.getViewLayer();\n    const { meta } = viewLayer.options;\n    const origData: object[] = viewLayer.getData();\n    const newData: object[] = getDataByScaleRange(\n      this.xScaleCfg.field,\n      this.xScaleCfg.values,\n      origData,\n      [startIdx, endIdx],\n      config.type === 'vertical'\n    );\n\n    // ScrollBar在滚动过程中保持\b\bY轴上scale配置: min/max/ticks\n    this.yScalesCfg.forEach((cfg) => {\n      const metaCfg = get(meta, cfg.field) || {};\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        ...metaCfg,\n        type: cfg.type as 'linear' | 'cat' | 'log' | 'pow' | 'identity' | 'time',\n        min: cfg.min,\n        max: cfg.max,\n      });\n    });\n    if (render) {\n      this.view.data(newData);\n      this.view.render();\n    } else {\n      this.view.changeData(newData);\n    }\n  }\n\n  private onChange({ ratio, thumbOffset }: { ratio: number; thumbOffset: number }): void {\n    this.ratio = ratio;\n    this.thumbOffset = thumbOffset;\n\n    const origAnimate = this.view.getOptions().animate;\n    this.view.animate(false);\n    this.changeViewData(this.getScrollRange());\n    this.view.animate(origAnimate);\n    // update scrollbar\n    this.renderScrollbar();\n  }\n}\n"]}