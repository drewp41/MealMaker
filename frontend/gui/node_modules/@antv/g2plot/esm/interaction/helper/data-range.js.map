{"version":3,"file":"data-range.js","sourceRoot":"","sources":["../../../src/interaction/helper/data-range.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAEnD;;;;;;;GAOG;AACH,MAAM,CAAC,IAAM,mBAAmB,GAAG,UACjC,KAAa,EACb,MAAgB,EAChB,IAAc,EACd,EAA8B,EAC9B,QAAyB;QADxB,aAAK,EAAE,WAAG;IACX,yBAAA,EAAA,gBAAyB;IAEzB,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACzC,IAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAEjH,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,KAAa,IAAK,OAAA,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAxB,CAAwB,CAAC,CAAC,CAAC;AAC9E,CAAC,CAAC","sourcesContent":["import { flatten, groupBy, map } from '@antv/util';\n\n/**\n * 按照scale字段values中的start和end信息从全部数据中取出对应的部分\n *\n * @param field scale field\n * @param values scale values\n * @param data original data\n * @param range range start & end\n */\nexport const getDataByScaleRange = (\n  field: string,\n  values: string[],\n  data: object[],\n  [start, end]: [number, number],\n  vertical: boolean = false\n): object[] => {\n  const groupedData = groupBy(data, field);\n  const newValues = vertical ? values.slice(values.length - end, values.length - start) : values.slice(start, end);\n\n  return flatten(map(newValues, (value: string) => groupedData[value] || []));\n};\n"]}