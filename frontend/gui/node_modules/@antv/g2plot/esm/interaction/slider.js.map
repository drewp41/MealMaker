{"version":3,"file":"slider.js","sourceRoot":"","sources":["../../src/interaction/slider.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, Slider, VIEW_LIFE_CIRCLE } from '../dependents';\nimport BBox from '../util/bbox';\nimport { Scale } from '@antv/scale';\nimport { clamp, head, last, map, size, throttle, isEmpty } from '@antv/util';\nimport { ISliderInteractionConfig } from '../interface/config';\nimport BaseInteraction from './base';\nimport { getDataByScaleRange } from './helper/data-range';\n\nconst DEFAULT_PADDING: number = 4;\nconst DEFAULT_SIZE: number = 16;\n\nconst getValidSliderConfig = (cfg: ISliderInteractionConfig = {}): Required<ISliderInteractionConfig> => {\n  const _cfg: Required<ISliderInteractionConfig> = {\n    type: 'horizontal',\n    start: 0,\n    end: 1,\n    width: undefined,\n    height: undefined,\n    padding: [0, 0, 0, 0],\n    backgroundStyle: {},\n    foregroundStyle: {},\n    handlerStyle: {},\n    textStyle: {},\n    trendCfg: {},\n    ...cfg,\n  };\n\n  // default padding\n  if (!cfg.padding) {\n    _cfg.padding =\n      _cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n  }\n\n  // default size\n  if (!cfg.height) {\n    _cfg.height = DEFAULT_SIZE;\n  }\n  if (!cfg.width) {\n    _cfg.width = DEFAULT_SIZE;\n  }\n\n  // start & end\n  const start = clamp(Math.min(_cfg.start, _cfg.end), 0, 1);\n  const end = clamp(Math.max(_cfg.start, _cfg.end), 0, 1);\n  _cfg.start = start;\n  _cfg.end = end;\n\n  return _cfg;\n};\n\nexport default class SliderInteraction extends BaseInteraction {\n  public static getInteractionRange(layerRange: BBox, interaction: ISliderInteractionConfig): BBox {\n    const config: ISliderInteractionConfig = getValidSliderConfig(interaction);\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding || [0, 0, 0, 0];\n\n    if (config.type === 'horizontal') {\n      const bbox = new BBox(\n        layerRange.minX,\n        layerRange.maxY - config.height - paddingTop - paddingBottom,\n        layerRange.width,\n        config.height + paddingTop + paddingBottom\n      );\n      return bbox;\n    } else {\n      return new BBox(\n        layerRange.maxX - config.width - paddingLeft - paddingRight,\n        layerRange.minY,\n        config.width + paddingLeft + paddingRight,\n        layerRange.height\n      );\n    }\n  }\n\n  private container: IGroup;\n  private slider: Slider;\n  private curStart: number;\n  private curEnd: number;\n  private xScaleCfg:\n    | {\n        field: string;\n        values: string[];\n      }\n    | undefined;\n  private onChangeFn: (range: [number, number]) => void = throttle(this.onChange.bind(this), 20, { leading: true }) as (\n    range: [number, number]\n  ) => void;\n\n  protected render(): void {\n    const layer = this.getViewLayer();\n    const view = this.view;\n    // 设置初始化的 start/end\n    const config = getValidSliderConfig(this.getInteractionConfig());\n    this.curStart = config.start;\n    this.curEnd = config.end;\n    this.xScaleCfg = undefined;\n    // 等待 view 每次 render 完成后更新 slider 组件\n    const callback = () => {\n      if (isEmpty(layer.options.data)) {\n        return;\n      }\n      if (!this.xScaleCfg) {\n        // 初始化配置和数据\n        const xScale: Scale = view.getXScale();\n        this.xScaleCfg = {\n          field: xScale.field,\n          values: xScale.values || [],\n        };\n        // 初始化 data\n        view.data(this.getSliderData(this.curStart, this.curEnd));\n        view.render();\n      } else {\n        this.renderSlider();\n      }\n    };\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback));\n    view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback));\n  }\n\n  protected start() {\n    return;\n  }\n\n  protected clear(): void {\n    if (this.slider) {\n      this.slider.destroy();\n      this.slider = null;\n    }\n    if (this.container) {\n      this.container.remove(true);\n      this.container = null;\n    }\n  }\n\n  private renderSlider(): void {\n    if (!this.slider) {\n      this.container = this.canvas.addGroup();\n      this.slider = new Slider({ ...this.getSliderConfig(), container: this.container });\n      this.slider.init();\n      this.slider.render();\n      this.slider.on('sliderchange', this.onChangeFn);\n    } else {\n      this.slider.update(this.getSliderConfig());\n      this.slider.render();\n    }\n  }\n\n  private getSliderConfig() {\n    const view = this.view;\n    const panelRange = view.coordinateBBox;\n    const range = this.getRange();\n    const config: ISliderInteractionConfig | null = getValidSliderConfig(this.getInteractionConfig());\n    const { padding = [0, 0, 0, 0], backgroundStyle, foregroundStyle, handlerStyle, textStyle, trendCfg = {} } =\n      config || {};\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const { minText, maxText } = this.getSliderMinMaxText(this.curStart, this.curEnd);\n    const cfg: any = {\n      x: panelRange.minX + paddingLeft,\n      y: range.minY + paddingTop,\n      width: panelRange.width - paddingLeft - paddingRight,\n      height: range.height - paddingTop - paddingBottom,\n      start: this.curStart,\n      end: this.curEnd,\n      minText,\n      maxText,\n      backgroundStyle,\n      foregroundStyle,\n      handlerStyle,\n      textStyle,\n      trendCfg: {\n        isArea: false,\n        smooth: false,\n        ...trendCfg,\n        data: this.getSliderTrendData(),\n      },\n    };\n\n    return cfg;\n  }\n\n  private getSliderTrendData(): number[] {\n    const { data, yField } = this.getViewLayer().options;\n\n    return map(data, (item) => item[yField]);\n  }\n\n  private getSliderData(start: number, end: number): any[] {\n    const origData = this.getViewLayer().getData();\n    const length = size(this.xScaleCfg.values);\n    const startIdx = Math.round(start * length);\n    const endIdx = Math.max(startIdx + 1, Math.round(end * length));\n\n    return getDataByScaleRange(this.xScaleCfg.field, this.xScaleCfg.values, origData, [startIdx, endIdx]);\n  }\n\n  private getSliderMinMaxText(start: number, end: number): { minText: string; maxText: string } {\n    const { data = [], xField } = this.getViewLayer().options;\n    const length = size(data);\n    const startIdx = Math.round(start * length);\n    const endIdx = Math.max(startIdx + 1, Math.round(end * length));\n    const newData = data.slice(startIdx, endIdx);\n\n    return {\n      minText: newData.length > 0 ? head(newData)[xField] : '',\n      maxText: newData.length > 0 ? last(newData)[xField] : '',\n    };\n  }\n\n  private onChange(range: [number, number]): void {\n    const view = this.view;\n    const start = clamp(Math.min(range[0], range[1]), 0, 1);\n    const end = clamp(Math.max(range[0], range[1]), 0, 1);\n    const data = this.getSliderData(start, end);\n    const { minText, maxText } = this.getSliderMinMaxText(start, end);\n    this.curStart = start;\n    this.curEnd = end;\n    this.slider.update({\n      start,\n      end,\n      minText,\n      maxText,\n    });\n    this.slider.render();\n    const origAnimate = view.getOptions().animate;\n    view.animate(false);\n    view.changeData(data);\n    view.animate(origAnimate);\n  }\n}\n"]}