import { View, ICanvas } from '../dependents';
interface InteractionCfg {
    view: View;
    startEvent?: string;
    processEvent?: string;
    endEvent?: string;
    resetEvent?: string;
}
export interface InteractionConstructor {
    new (cfg: any): Interaction;
}
export default class Interaction {
    view: View;
    protected canvas: ICanvas;
    startEvent: string;
    processEvent: string;
    endEvent: string;
    resetEvent: string;
    private _eventHandlers;
    constructor(cfg: InteractionCfg);
    private _getDefaultCfg;
    private _start;
    preStart(ev: any): void;
    start(ev: any): void;
    afterStart(ev: any): void;
    private _process;
    preProcess(ev: any): void;
    process(ev: any): void;
    afterProcess(ev: any): void;
    private _end;
    preEnd(ev: any): void;
    end(ev: any): void;
    afterEnd(ev: any): void;
    private _reset;
    preReset(ev?: any): void;
    reset(ev?: any): void;
    afterReset(ev?: any): void;
    private _bindEvents;
    private _unbindEvents;
    destroy(): void;
}
export {};
