{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/interaction/base.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAGlC,OAAO,WAAW,MAAM,QAAQ,CAAC;AAkBjC;IAAsD,mCAAW;IAkC/D,yBACE,GAAmB,EACnB,SAAyB,EACzB,gBAAuB,EACvB,WAAgC;QAJlC,YAME,kBAAM,GAAG,CAAC,SAMX;QALC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;QACrC,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,KAAI,CAAC,MAAM,EAAE,CAAC;;IAChB,CAAC;IA7Ca,mCAAmB,GAAjC,UAAkC,IAAY,EAAE,IAAS;QACvD,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IACtD,CAAC;IAEa,uCAAuB,GAArC,UAAsC,QAAgB,EAAE,IAAY,EAAE,IAAS;QAC7E,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;YACnD,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;SACrD;QACD,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IAC9D,CAAC;IAEa,8BAAc,GAA5B,UAA6B,IAAY,EAAE,QAAiB;QAC1D,IAAI,QAAQ,IAAI,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;YACjG,OAAO,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;SAC7D;QACD,OAAO,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,6DAA6D;IAC/C,mCAAmB,GAAjC,UAAkC,UAAgB,EAAE,WAAgC;QAClF,OAAO,SAAS,CAAC;IACnB,CAAC;IA0BM,iCAAO,GAAd;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,EAAE;YACxB,EAAE,EAAE,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,iBAAM,OAAO,WAAE,CAAC;IAClB,CAAC;IAES,sCAAY,GAAtB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAES,kCAAQ,GAAlB;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAES,8CAAoB,GAA9B;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAES,uCAAa,GAAvB,UAAwB,EAAc;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAES,gCAAM,GAAhB;QACE,OAAO;IACT,CAAC;IAnDc,sCAAsB,GAAmB,EAAE,CAAC;IAC5C,oCAAoB,GAAuC,EAAE,CAAC;IAqD/E,sBAAC;CAAA,AA9ED,CAAsD,WAAW,GA8EhE;eA9E6B,eAAe","sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../dependents';\nimport BBox from '../util/bbox';\nimport Interaction from './core';\nimport ViewLayer from '../base/view-layer';\nimport { IInteractionConfig } from '../interface/config';\n\nexport interface InteractionCtor {\n  new (\n    cfg: { view: View },\n    viewLayer: ViewLayer<any>,\n    interactionRange?: BBox,\n    interaction?: IInteractionConfig\n  ): BaseInteraction;\n  getInteractionRange(layerRange: BBox, interaction?: IInteractionConfig): BBox;\n}\n\ninterface InteractionMap {\n  [type: string]: InteractionCtor;\n}\n\nexport default abstract class BaseInteraction extends Interaction {\n  public static registerInteraction(type: string, ctor: any) {\n    BaseInteraction.GLOBAL_INTERACTION_MAP[type] = ctor;\n  }\n\n  public static registerPlotInteraction(plotType: string, type: string, ctor: any) {\n    if (!BaseInteraction.PLOT_INTERACTION_MAP[plotType]) {\n      BaseInteraction.PLOT_INTERACTION_MAP[plotType] = {};\n    }\n    BaseInteraction.PLOT_INTERACTION_MAP[plotType][type] = ctor;\n  }\n\n  public static getInteraction(type: string, plotType?: string): InteractionCtor | undefined {\n    if (plotType && BaseInteraction.PLOT_INTERACTION_MAP[plotType] && BaseInteraction[plotType][type]) {\n      return BaseInteraction.PLOT_INTERACTION_MAP[plotType][type];\n    }\n    return BaseInteraction.GLOBAL_INTERACTION_MAP[type];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public static getInteractionRange(layerRange: BBox, interaction?: IInteractionConfig): BBox | undefined {\n    return undefined;\n  }\n\n  private static GLOBAL_INTERACTION_MAP: InteractionMap = {};\n  private static PLOT_INTERACTION_MAP: { [plot: string]: InteractionMap } = {};\n\n  public type: string;\n  public cfg: any;\n  private interactionConfig: IInteractionConfig;\n  private interactionRange: BBox;\n  private viewLayer: ViewLayer<any>;\n  private disposables: (() => void)[];\n\n  constructor(\n    cfg: { view: View },\n    viewLayer: ViewLayer<any>,\n    interactionRange?: BBox,\n    interaction?: IInteractionConfig\n  ) {\n    super(cfg);\n    this.viewLayer = viewLayer;\n    this.interactionRange = interactionRange;\n    this.interactionConfig = interaction;\n    this.disposables = [];\n    this.render();\n  }\n\n  public destroy(): void {\n    each(this.disposables, (fn) => {\n      fn();\n    });\n    this.disposables = [];\n    this.clear();\n    super.destroy();\n  }\n\n  protected getViewLayer(): ViewLayer<any> {\n    return this.viewLayer;\n  }\n\n  protected getRange(): BBox | undefined {\n    return this.interactionRange;\n  }\n\n  protected getInteractionConfig(): IInteractionConfig | undefined {\n    return this.interactionConfig;\n  }\n\n  protected addDisposable(fn: () => void) {\n    this.disposables.push(fn);\n  }\n\n  protected render(): void {\n    return;\n  }\n\n  protected abstract clear(): void;\n}\n"]}