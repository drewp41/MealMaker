{"version":3,"file":"overlapped.js","sourceRoot":"","sources":["../../src/combo-plots/overlapped.ts"],"names":[],"mappings":"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","sourcesContent":["import ComboPlot, { ComboPlotConfig } from './base';\nimport { IGroup } from '@antv/g-base';\nimport * as _ from '@antv/util';\nimport { getPlotType } from '../base/global';\nimport Layer from '../base/layer';\nimport '../plots/index';\nimport * as ComboUtil from './util';\nimport { getOverlappingPadding } from './util/padding';\nimport { getGlobalTheme } from '../theme/global';\nimport { ViewLayer } from '..';\n\nexport type OverlappedComboPlotConfig = ComboPlotConfig;\n\nexport default class OverlappedComboPlot<\n  T extends OverlappedComboPlotConfig = OverlappedComboPlotConfig\n> extends ComboPlot<T> {\n  protected isOverlapped: boolean;\n  protected topLayer: Layer;\n  protected backLayer: Layer;\n  protected legendInfo: any[];\n  protected axisInfo: any[];\n  protected legendContainer: IGroup;\n  protected paddingComponents: any[];\n  protected globalOptions: any;\n  protected globalComponents: any[];\n  protected singleGeomCount: number;\n\n  public getDefaultOptions() {\n    return {\n      xAxis: {\n        visible: true,\n        autoHideLabel: false,\n        autoRotateLabel: false,\n        autoRotateTitle: false,\n        grid: {\n          visible: false,\n        },\n        line: {\n          visible: true,\n        },\n        tickLine: {\n          visible: true,\n        },\n        label: {\n          visible: true,\n        },\n        title: {\n          visible: false,\n          offset: 12,\n        },\n      },\n      yAxis: {\n        visible: true,\n        autoHideLabel: false,\n        autoRotateLabel: false,\n        autoRotateTitle: true,\n        grid: {\n          visible: true,\n        },\n        line: {\n          visible: true,\n        },\n        tickLine: {\n          visible: true,\n        },\n        label: {\n          visible: true,\n        },\n        title: {\n          visible: false,\n          offset: 12,\n        },\n        colorMapping: true,\n        synchroTick: true,\n      },\n      label: {\n        visible: false,\n      },\n      tooltip: {\n        visible: true,\n        sort: true,\n      },\n      legend: {\n        visible: true,\n        position: 'top-left',\n      },\n      animation: false,\n    };\n  }\n\n  constructor(container: HTMLElement, props: T) {\n    super(container, props);\n    this.options = props;\n  }\n\n  protected createComboLayers() {\n    this.options.layers = this.layerOptionsFilter(this.options.layers);\n    super.createComboLayers();\n    this.legendInfo = [];\n    this.axisInfo = [];\n    this.paddingComponents = [];\n    this.globalComponents = [];\n    this.singleGeomCount = 0;\n\n    this.backLayer = new Layer({\n      canvas: this.getCanvas(),\n      width: this.width,\n      height: this.height,\n    });\n\n    if (this.options.layers.length > 0) {\n      /** create layers */\n      _.each(this.options.layers, (layerCfg) => {\n        const overlapConfig = this.getOverlappedConfig(layerCfg);\n        const viewLayerCtr = getPlotType(layerCfg.type);\n        const viewLayerProps: T = _.deepMix(\n          {},\n          layerCfg,\n          {\n            canvas: this.canvas,\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height,\n            tooltip: {\n              domStyles: {\n                'g2-tooltip': {\n                  display: 'none',\n                },\n              },\n            },\n          },\n          overlapConfig\n        );\n        const viewLayer = new viewLayerCtr(viewLayerProps);\n        viewLayer.render();\n        viewLayer.hide();\n        this.axisInfo.push(...ComboUtil.getAxisData(viewLayer, viewLayerProps, this.globalOptions));\n        this.legendInfo.push(...ComboUtil.getLegendData(viewLayer, viewLayerProps));\n        this.addLayer(viewLayer);\n      });\n    }\n\n    /** add top layer for legend & tooltip */\n    this.topLayer = new Layer({\n      canvas: this.getCanvas(),\n      width: this.width,\n      height: this.height,\n    });\n    this.topLayer.render();\n  }\n\n  /** 图层叠加时的layer config */\n  protected getOverlappedConfig(layerCfg) {\n    const colorCfg = ComboUtil.getColorConfig(layerCfg.type, layerCfg, this.singleGeomCount);\n    if (colorCfg && colorCfg.single) {\n      this.singleGeomCount++;\n    }\n    return _.deepMix(\n      {},\n      {\n        xAxis: {\n          visible: false,\n        },\n        yAxis: {\n          visible: false,\n        },\n        legend: {\n          visible: false,\n        },\n        /* tooltip: {\n          visible: false,\n        },*/\n        padding: [0, 0, 0, 0],\n        color: colorCfg ? colorCfg.color : null,\n      }\n    );\n  }\n\n  protected overlappingLegend() {\n    const legendItems = ComboUtil.mergeLegendData(this.legendInfo);\n    this.legendContainer = this.topLayer.container.addGroup();\n    return ComboUtil.createLegend(\n      legendItems,\n      this.width,\n      this.height,\n      this.getCanvas(),\n      this.globalOptions.legend.position\n    );\n  }\n\n  public render() {\n    this.doDestroy();\n    this.createComboLayers();\n    if (this.layers.length < 1) {\n      return;\n    }\n    const { bleeding } = getGlobalTheme();\n    if (this.globalOptions.legend.visible) {\n      const legend = this.overlappingLegend();\n      this.globalComponents.push({ type: 'legend', component: legend.component });\n      this.paddingComponents.push(legend);\n    }\n    // 先获取legend的padding\n    const legendPadding = getOverlappingPadding(this.layers[0], this.paddingComponents);\n    const axisComponents = ComboUtil.axesLayout(\n      this.globalOptions,\n      this.axisInfo,\n      legendPadding,\n      this.layers[0],\n      this.width,\n      this.height,\n      this.getCanvas()\n    );\n    this.paddingComponents.push(...axisComponents);\n    _.each(axisComponents, (axis) => {\n      this.globalComponents.push({ type: 'axis', component: axis.component });\n    });\n    // 计算padding\n    const padding = getOverlappingPadding(this.layers[0], this.paddingComponents);\n    if (!this.globalOptions.xAxis.visible) {\n      padding[2] += bleeding[2];\n    }\n    // 更新layers\n    _.each(this.layers, (layer) => {\n      layer.updateConfig({\n        padding,\n      });\n\n      layer.render();\n      layer.show();\n    });\n\n    //补画坐标轴grid\n    if (this.globalOptions.yAxis.grid.visible) {\n      const leftAxis = axisComponents[0].component;\n      const containerLayer = this.layers[0] as ViewLayer;\n      const coord = containerLayer.view.geometries[0].coordinate;\n      const container = containerLayer.view.backgroundGroup;\n      ComboUtil.drawYGrid(leftAxis, coord, container, this.globalOptions);\n    }\n\n    this.canvas.draw();\n\n    if (this.globalOptions.tooltip.visible) {\n      const tooltip = ComboUtil.showTooltip(this.canvas, this.layers);\n      this.globalComponents.push({ type: 'tooltip', component: tooltip });\n    }\n  }\n\n  protected doDestroy() {\n    this.clearComponents();\n    this.eachLayer((layer) => {\n      layer.destroy();\n    });\n    this.layers = [];\n  }\n\n  protected clearComponents() {\n    _.each(this.globalComponents, (c) => {\n      if (c.type === 'legend' || c.type === 'tooltip') {\n        c.component.destroy();\n      }\n      if (c.type === 'axis') {\n        c.component.clear();\n      }\n    });\n    this.paddingComponents = [];\n    this.globalComponents = [];\n  }\n\n  private layerOptionsFilter(options) {\n    const filterOptions = [];\n    _.each(options, (option) => {\n      if (!_.isNil(option.data) && option.data.length > 0) {\n        filterOptions.push(option);\n      }\n    });\n    return filterOptions;\n  }\n}\n"]}