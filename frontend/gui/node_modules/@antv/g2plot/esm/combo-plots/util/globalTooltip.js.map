{"version":3,"file":"globalTooltip.js","sourceRoot":"","sources":["../../../src/combo-plots/util/globalTooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, isObject, has } from '@antv/util';\nimport { Tooltip } from '../../dependents';\nimport { getGlobalTheme } from '../../theme/global';\n\n//const TYPE_SHOW_MARKERS = ['line', 'area', 'path', 'areaStack'];\n\nexport function showTooltip(canvas, layers) {\n  const tooltip = renderTooltip(layers[0], canvas);\n  tooltip.init();\n  canvas.on('mousemove', (ev) => {\n    const tooltipItems = [];\n    const point = { x: ev.x, y: ev.y };\n    each(layers, (layer) => {\n      const { view } = layer;\n      if (view && layer.visibility) {\n        //const coord = view.geometries[0].coordinate;\n        //const geoms = view.geometries;\n        tooltipItems.push(...view.getTooltipItems(point));\n        /*each(geoms, (geom) => {\n          const type = geom.type;\n          const dataArray = geom.dataArray;\n          if (contains(['area', 'line', 'path', 'interval'], type)) {\n            const items = getTooltipItems(point, geom, type, dataArray, coord);\n            tooltipItems.push(...items);\n          } else {s\n            const shapeContainer = geom.container;\n            const shapes = getShapeByX(shapeContainer, point.x);\n            each(shapes, (shape) => {\n              if (shape.get('visible') && shape.get('origin')) {\n                const items = geom.getTooltipItems(shape.get('origin'), null);\n                tooltipItems.push(...items);\n              }\n            });\n          }\n        });*/\n      }\n    });\n    //adjustItems(tooltipItems, ev.target, tooltipCfg);\n    if (tooltipItems.length > 0) {\n      tooltip.setLocation(point);\n      tooltip.update({\n        items: getUniqueItems(tooltipItems),\n        domStyles: {\n          'g2-tooltip': {\n            opacity: 1,\n          },\n        },\n      });\n      tooltip.show();\n    } else if (tooltip.get('visible')) {\n      tooltip.hide();\n    }\n  });\n\n  return tooltip;\n}\n\n/*function getTooltipItems(point, geom, type, dataArray, coord) {\n  const items = [];\n  each(dataArray, (data) => {\n    const items = geom.findItemsFromView(geom.view, point);\n    const subItems = geom.getTooltipItems(point, null);\n    each(subItems, (v) => {\n      // tslint:disable-next-line: no-shadowed-variable\n      let point = v.point;\n      if (!isNil(point) && !isNil(point.x) && !isNil(point.y)) {\n        const x = isArray(point.x) ? point.x[point.x.length - 1] : point.x;\n        const y = isArray(point.y) ? point.y[point.y.length - 1] : point.y;\n        point = coord.applyMatrix(x, y, 1);\n        v.x = point[0];\n        v.y = point[1];\n        v.showMarker = true;\n        const itemMarker = getItemMarker(geom, v.color);\n        v.marker = itemMarker;\n        if (indexOf(TYPE_SHOW_MARKERS, type) !== -1) {\n          items.push(v);\n        }\n      }\n    });\n    items.push(...subItems);\n  });\n  return items;\n}*/\n\nfunction renderTooltip(layer, canvas) {\n  const tooltipTheme = getGlobalTheme().tooltip;\n  const options = {\n    parent: layer.canvas.get('container'),\n    panelGroup: layer.view.middleGroup,\n    panelRange: layer.view.coodinateBBox,\n    capture: false,\n    canvas,\n    frontgroundGroup: layer.view.frontgroundGroup,\n    theme: tooltipTheme,\n    backgroundGroup: layer.view.backgroundGroup,\n    items: [{ name: 0, value: 0 }],\n    domStyles: {\n      'g2-tooltip': {\n        opacity: 0,\n      },\n    },\n  };\n\n  return new Tooltip.Html(options);\n}\n\n/*function getItemMarker(geom, color) {\n  const shapeType = geom.get('shapeType') || 'point';\n  const shape = geom.getDefaultValue('shape') || 'circle';\n  const shapeObject = getShapeFactory(shapeType);\n  const cfg = { color, isInPolar: false };\n  const marker = shapeObject.getMarker(shape, cfg);\n  return marker;\n}*/\n\nfunction getUniqueItems(items) {\n  const tmp = [];\n  each(items, (item) => {\n    const index = indexOfArray(tmp, item);\n    if (index === -1) {\n      tmp.push(item);\n    }\n  });\n  return tmp;\n}\n\nfunction indexOfArray(items, item) {\n  let rst = -1;\n  each(items, (sub, index: number) => {\n    let isEqual = true;\n    for (const key in item) {\n      if (has(item, key)) {\n        if (!isObject(item[key]) && item[key] !== sub[key]) {\n          isEqual = false;\n          break;\n        }\n      }\n    }\n    if (isEqual) {\n      rst = index;\n      return false;\n    }\n  });\n  return rst;\n}\n\n/*function adjustItems(items, target, cfg) {\n  if (target.get('origin')) {\n    let data;\n    if (isArray(target.get('origin'))) {\n      data = getDataByTitle(items[0].title, target.get('origin')).data;\n    } else {\n      data = target.get('origin')._origin;\n    }\n    each(items, (item) => {\n      if (item.point._origin !== data) {\n        item.color = '#ccc';\n      }\n    });\n  }\n  if (cfg.sort) {\n    items.sort((a, b) => {\n      return parseFloat(b.value) - parseFloat(a.value);\n    });\n  }\n}\n\nfunction getDataByTitle(title, data) {\n  for (const i in data) {\n    const d = data[i]._origin;\n    const ks = keys(d);\n    for (const j in ks) {\n      const key = ks[j];\n      if (d[key] === title) {\n        return { data: d, key };\n      }\n    }\n  }\n}\n\nfunction getShapeByX(container, x) {\n  const shapes = [];\n  const children = container.get('children');\n  each(children, (c) => {\n    const bbox = c.getBBox();\n    if (bbox.minX < x && bbox.maxX > x) {\n      shapes.push(c);\n    }\n  });\n  return shapes;\n}*/\n"]}