{"version":3,"file":"padding.js","sourceRoot":"","sources":["../../../src/combo-plots/util/padding.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,iBAAiB,CAAC;AACnC,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC;AAChC,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,MAAM,UAAU,qBAAqB,CAAC,KAAK,EAAE,UAAU;IAC7C,IAAA,oCAAQ,CAAsB;IACtC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QACvB,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAE,KAAK;YACzB,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,UAAU,EAAE;gBACzC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;KACJ;IACD,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IACpC,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,SAAS;QACnB,IAAA,6BAAQ,CAAe;QACzB,IAAA,wBAAgD,EAA9C,cAAI,EAAE,cAAI,EAAE,cAAI,EAAE,cAA4B,CAAC;QACvD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,QAAQ,KAAK,KAAK,EAAE;YAC5D,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;YAC/D,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;YAChE,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC7D,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,QAAQ,KAAK,OAAO,EAAE;YAC9D,QAAQ,GAAG,IAAI,CAAC;SACjB;IACH,CAAC,CAAC,CAAC;IACH,IAAM,KAAK,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACrF,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IACpD,IAAI,WAAW,KAAK,CAAC,EAAE;QACrB,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC3B;IACD,IAAM,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxD,IAAM,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACzD,IAAM,YAAY,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IAEvD,OAAO,CAAC,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;AACpE,CAAC","sourcesContent":["import BBox from '../../util/bbox';\nimport * as _ from '@antv/util';\nimport { getGlobalTheme } from '../../theme/global';\n\nexport function getOverlappingPadding(layer, components) {\n  const { bleeding } = getGlobalTheme();\n  if (_.isArray(bleeding)) {\n    _.each(bleeding, (it, index) => {\n      if (typeof bleeding[index] === 'function') {\n        bleeding[index] = bleeding[index]({});\n      }\n    });\n  }\n  let viewMinX = layer.layerBBox.minX;\n  let viewMaxX = layer.layerBBox.maxX;\n  let viewMinY = _.clone(layer.layerBBox.minY);\n  let viewMaxY = layer.layerBBox.maxY;\n  _.each(components, (component) => {\n    const { position } = component;\n    const { minX, maxX, minY, maxY } = component.getBBox();\n    if (maxY > viewMinY && maxY < viewMaxY && position === 'top') {\n      viewMinY = maxY;\n    }\n    if (minY > viewMinY && maxY > viewMaxY && position === 'bottom') {\n      viewMaxY = minY;\n    }\n    if (minY > viewMinY && minY <= viewMaxY && position === 'bottom') {\n      viewMaxY = minY;\n    }\n    if (maxX > viewMinX && maxX < viewMaxX && position === 'left') {\n      viewMinX = maxX;\n    }\n    if (minX > viewMinX && maxX < viewMaxX && position === 'right') {\n      viewMaxX = minX;\n    }\n  });\n  const range = new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\n  let top_padding = range.minY - layer.layerBBox.minY;\n  if (top_padding === 0) {\n    top_padding = bleeding[0];\n  }\n  const right_padding = layer.layerBBox.maxX - range.maxX;\n  const bottom_padding = layer.layerBBox.maxY - range.maxY;\n  const left_padding = range.minX - layer.layerBBox.minX;\n\n  return [top_padding, right_padding, bottom_padding, left_padding];\n}\n"]}