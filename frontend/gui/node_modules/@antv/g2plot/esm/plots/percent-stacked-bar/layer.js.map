{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/percent-stacked-bar/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAErD,OAAO,UAAoC,MAAM,sBAAsB,CAAC;AAExE,OAAO,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAK1D;IAAoD,0CAAwC;IAA5F;QAAA,qEAkDC;QAzBQ,UAAI,GAAW,mBAAmB,CAAC;;IAyB5C,CAAC;IAjDe,wCAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACf;gBACD,KAAK,EAAE;oBACL,OAAO,EAAE,IAAI;oBACb,SAAS,EAAE,UAAC,CAAC,IAAK,OAAG,CAAC,SAAM,EAAV,CAAU;iBAC7B;gBACD,KAAK,EAAE;oBACL,OAAO,EAAE,KAAK;oBACd,SAAS,EAAE,UAAC,CAAC;wBACX,IAAM,GAAG,GAAG,KAAK,CAAC;wBAClB,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBAC5B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAGS,4CAAW,GAArB,UAAsB,UAAuB;QACrC,IAAA,iBAAiC,EAA/B,kBAAM,EAAE,kBAAuB,CAAC;QACxC,IAAM,WAAW,GAAG,iBAAM,WAAW,YAAC,UAAU,CAAC,CAAC;QAElD,OAAO,uBAAuB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;IAES,sCAAK,GAAf;QACE,IAAM,UAAU,GAAG,EAAE,CAAC;QACd,IAAA,4BAAM,CAAkB;QAChC,UAAU,CAAC,MAAM,CAAC,GAAG;YACnB,SAAS,EAAE,CAAC;YACZ,KAAK,EAAK,MAAM,SAAM;YACtB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,SAAS,EAAE,UAAC,CAAC;gBACX,IAAM,cAAc,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC5C,OAAU,cAAc,MAAG,CAAC;YAC9B,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC;QAC/B,iBAAM,KAAK,WAAE,CAAC;IAChB,CAAC;IACH,6BAAC;AAAD,CAAC,AAlDD,CAAoD,UAAU,GAkD7D;;AAED,gBAAgB,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport StackedBar, { StackedBarViewConfig } from '../stacked-bar/layer';\nimport { DataItem } from '../../interface/config';\nimport { transformDataPercentage } from '../../util/data';\n\nexport type PercentStackedBarViewConfig = StackedBarViewConfig;\nexport interface PercentStackedBarLayerConfig extends PercentStackedBarViewConfig, LayerConfig {}\n\nexport default class PercentStackedBarLayer extends StackedBar<PercentStackedBarLayerConfig> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      xAxis: {\n        visible: true,\n        tickLine: {\n          visible: false,\n        },\n        grid: {\n          visible: false,\n        },\n        title: {\n          visible: true,\n          formatter: (v) => `${v} (%)`,\n        },\n        label: {\n          visible: false,\n          formatter: (v) => {\n            const reg = /%/gi;\n            return v.replace(reg, '');\n          },\n        },\n      },\n    });\n  }\n  public type: string = 'percentStackedBar';\n\n  protected processData(originData?: DataItem[]) {\n    const { xField, yField } = this.options;\n    const processData = super.processData(originData);\n\n    return transformDataPercentage(processData, yField, [xField]);\n  }\n\n  protected scale() {\n    const metaConfig = {};\n    const { xField } = this.options;\n    metaConfig[xField] = {\n      tickCount: 6,\n      alias: `${xField} (%)`,\n      min: 0,\n      max: 1,\n      formatter: (v) => {\n        const formattedValue = (v * 100).toFixed(1);\n        return `${formattedValue}%`;\n      },\n    };\n    this.options.meta = metaConfig;\n    super.scale();\n  }\n}\n\nregisterPlotType('percentStackedBar', PercentStackedBarLayer);\n"]}