{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/heatmap/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, valuesOfKey, each, isObject, isFunction } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { MatrixLegendConfig } from './component/legend';\nimport { getRectPath, getCirclePath, getCircleCurve } from './shape';\nimport { getPlotComponents } from './component';\nimport { GraphicStyle } from '../../interface/config';\n\nexport interface HeatmapViewConfig extends ViewConfig {\n  sizeField?: string;\n  colorField?: string;\n  shapeSize?: number[];\n  shapeType?: string;\n  shapeStyle?: GraphicStyle;\n  color?: string[];\n  legend?: MatrixLegendConfig;\n}\n\nexport interface HeatmapLayerConfig extends HeatmapViewConfig, LayerConfig {}\n\nexport default class HeatmapLayer<T extends HeatmapLayerConfig = HeatmapLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      shapeType: 'rect',\n      legend: {\n        visible: true,\n        position: 'right-center',\n      },\n      tooltip: {\n        shared: false,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      xAxis: {\n        visible: true,\n        gridAlign: 'center',\n        grid: {\n          visible: true,\n        },\n        tickLine: {\n          visible: true,\n        },\n        line: {\n          visible: false,\n        },\n        label: {\n          visible: true,\n          autoHide: true,\n          autoRotate: true,\n        },\n      },\n      yAxis: {\n        visible: true,\n        gridAlign: 'center',\n        grid: {\n          visible: true,\n          align: 'center',\n        },\n        tickLine: {\n          visible: true,\n        },\n        label: {\n          autoHide: true,\n          autoRotate: false,\n        },\n      },\n      color: ['#9ae3d5', '#66cdbb', '#e7a744', '#f1e066', '#f27664', '#e7c1a2'],\n      label: {\n        visible: true,\n        adjustColor: true,\n        adjustPosition: true,\n        offset: 0,\n        style: {\n          stroke: 'rgba(255,255,255,0)',\n          lineWidth: 0,\n        },\n      },\n      interactions: [{ type: 'tooltip' }],\n    });\n  }\n\n  public type: string = 'heatmap';\n  protected gridSize: number[] = [];\n  protected plotComponents: any[] = [];\n\n  public afterRender() {\n    this.renderPlotComponents();\n    super.afterRender();\n  }\n\n  public changeShape(type: string) {\n    if (this.options.shapeType === type) {\n      return;\n    }\n    this.options.shapeType = type;\n    if (type === 'rect') {\n      const shapes = this.getShapes();\n      this.circleToRect(shapes);\n    } else if (type === 'circle') {\n      const shapes = this.getShapes();\n      this.rectToCircle(shapes);\n    }\n  }\n\n  public mappingSize(field: string) {\n    if (this.options.sizeField && this.options.sizeField === field) {\n      return;\n    }\n    this.options.sizeField = field;\n    // 创建scale\n    const values = valuesOfKey(this.options.data, field);\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const LinearScale = getScale('linear');\n    const scale = new LinearScale({\n      min,\n      max,\n    });\n    const shapes = this.getShapes();\n    if (this.options.shapeType === 'rect') {\n      this.rectSizeMapping(shapes, scale, field);\n    } else if (this.options.shapeType === 'circle') {\n      this.circleSizeMapping(shapes, scale, field);\n    }\n  }\n\n  public disableMappingSize() {\n    const shapes = this.getShapes();\n    if (this.options.shapeType === 'rect') {\n      this.rectDisableSizeMapping(shapes);\n    } else if (this.options.shapeType === 'circle') {\n      this.circleDisableSizeMapping(shapes);\n    }\n  }\n\n  public destroy() {\n    each(this.plotComponents, (component) => {\n      component.destroy();\n    });\n    super.destroy();\n  }\n\n  protected geometryParser() {\n    return '';\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected legend() {\n    this.setConfig('legends', false);\n  }\n\n  protected addGeometry() {\n    this.gridSize = this.getGridSize();\n    let geomConfig;\n    if (this.options.shapeType === 'rect') {\n      geomConfig = this.addRect();\n    } else {\n      const circle = this.addCircle();\n      geomConfig = circle;\n    }\n    if (this.options.shapeStyle) {\n      const styleConfig: any = {};\n      if (isObject(this.options.shapeStyle)) {\n        styleConfig.cfg = this.options.shapeStyle;\n      } else if (isFunction(this.options.shapeType)) {\n        styleConfig.fields = [\n          this.options.colorField,\n          this.options.xField,\n          this.options.yField,\n          this.options.sizeField,\n        ];\n        styleConfig.callback = this.options.shapeType;\n      }\n      geomConfig.style = styleConfig;\n    }\n    if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n      this.geometryTooltip(geomConfig);\n    }\n\n    this.setConfig('geometry', geomConfig);\n  }\n\n  protected addRect() {\n    // 如果用户设置了size，将size数值转换为[0,1]区间\n    const size = [0.3, 0.9];\n    if (this.options.shapeSize) {\n      size[0] = this.options.shapeSize[0] / this.gridSize[0];\n      size[1] = this.options.shapeSize[1] / this.gridSize[1];\n    }\n    const rect: any = {\n      type: 'polygon',\n      position: {\n        fields: [this.options.xField, this.options.yField],\n      },\n      color: {\n        fields: [this.options.colorField],\n        values: this.options.color,\n      },\n      shape: {\n        values: ['rect'],\n      },\n      label: false,\n    };\n    if (this.options.sizeField) {\n      rect.size = {\n        fields: [this.options.sizeField],\n        values: size,\n      };\n    } else {\n      rect.size = {\n        values: [1],\n      };\n    }\n    return rect;\n  }\n\n  protected addCircle() {\n    let size = [0.3, 0.9];\n    if (this.options.shapeSize) {\n      size = this.options.shapeSize;\n    } else {\n      size[0] = this.gridSize[0] * size[0] * 0.5;\n      size[1] = this.gridSize[1] * size[1] * 0.5;\n    }\n    const circle: any = {\n      type: 'point',\n      position: {\n        fields: [this.options.xField, this.options.yField],\n      },\n      color: {\n        fields: [this.options.colorField],\n        values: this.options.color,\n      },\n      shape: {\n        values: ['curvePoint'],\n      },\n      label: false,\n    };\n    if (this.options.sizeField) {\n      circle.size = {\n        fields: [this.options.sizeField],\n        values: size,\n      };\n    } else {\n      circle.size = {\n        values: [Math.min(this.gridSize[0], this.gridSize[1]) * 0.5 * 0.9],\n      };\n    }\n    return circle;\n  }\n\n  protected geometryTooltip(config) {\n    config.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      config.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      config.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        config.tooltip.fields = [this.options.xField, this.options.yField];\n        if (this.options.colorField) {\n          config.tooltip.fields.push(this.options.colorField);\n        }\n      }\n    }\n  }\n\n  private getGridSize() {\n    if (this.options.padding === 'auto') {\n      return [0, 0];\n    } else {\n      const viewRange = this.getViewRange();\n      const { padding, xField, yField, data } = this.options;\n      const width = viewRange.width - padding[1] - padding[3];\n      const height = viewRange.height - padding[0] - padding[2];\n      const xCount = valuesOfKey(data, xField).length;\n      const yCount = valuesOfKey(data, yField).length;\n      return [width / xCount, height / yCount];\n    }\n  }\n\n  private circleToRect(shapes) {\n    const gridSize = this.gridSize;\n    each(shapes, (shape) => {\n      const { x, y, size } = shape.get('origin');\n      let sizeRatio = (size * 2) / Math.min(gridSize[0], gridSize[1]);\n      if (!this.options.sizeField) {\n        sizeRatio = 1;\n      }\n      const curvePath = getCircleCurve(x, y, size);\n      const rectPath = getRectPath(x, y, gridSize[0], gridSize[1], sizeRatio);\n      shape.stopAnimate();\n      shape.attr('path', curvePath);\n      shape.animate(\n        {\n          path: rectPath,\n        },\n        500,\n        'easeLinear'\n      );\n    });\n  }\n\n  private rectToCircle(shapes) {\n    each(shapes, (shape) => {\n      const coord = shape.get('coord');\n      const { points } = shape.get('origin');\n      const ps = [];\n      each(points, (p) => {\n        ps.push(coord.convertPoint(p));\n      });\n      const bbox = shape.getBBox();\n      const width = bbox.width;\n      const height = bbox.height;\n      const centerX = bbox.minX + width / 2;\n      const centerY = bbox.minY + height / 2;\n      const offsetRatio = this.options.sizeField ? 1 : 0.9;\n      const curvePath = getCircleCurve(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n      const circlePath = getCirclePath(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n      shape.stopAnimate();\n      shape.animate(\n        {\n          path: curvePath,\n        },\n        500,\n        'easeLinear',\n        () => {\n          shape.attr('path', circlePath);\n        }\n      );\n    });\n  }\n\n  private rectSizeMapping(shapes, scale, field) {\n    each(shapes, (shape) => {\n      const data = shape.get('origin').data;\n      const ratio = 0.3 + scale.scale(data[field]) * 0.6;\n      shape.get('origin').size = ratio;\n      const bbox = shape.getBBox();\n      const width = bbox.width;\n      const height = bbox.height;\n      const centerX = bbox.minX + width / 2;\n      const centerY = bbox.minY + height / 2;\n      const path = getRectPath(centerX, centerY, width, height, ratio);\n      shape.stopAnimate();\n      shape.animate(\n        {\n          path: path,\n        },\n        500,\n        'easeLinear'\n      );\n    });\n  }\n\n  private circleSizeMapping(shapes, scale, field) {\n    each(shapes, (shape) => {\n      const data = shape.get('origin').data;\n      const ratio = 0.3 + scale.scale(data[field]) * 0.6;\n      const { x, y, size } = shape.get('origin');\n      const path = getCirclePath(x, y, size * ratio);\n      shape.get('origin').size = size * ratio;\n      shape.stopAnimate();\n      shape.animate(\n        {\n          path: path,\n        },\n        500,\n        'easeLinear'\n      );\n    });\n  }\n\n  private circleDisableSizeMapping(shapes) {\n    this.options.sizeField = null;\n    each(shapes, (shape) => {\n      const { x, y } = shape.get('origin');\n      const size = Math.min(this.gridSize[0], this.gridSize[1]) * 0.9;\n      shape.get('origin').size = size / 2;\n      const path = getCirclePath(x, y, size / 2);\n      shape.stopAnimate();\n      shape.animate(\n        {\n          path: path,\n        },\n        500,\n        'easeLinear'\n      );\n    });\n  }\n\n  private rectDisableSizeMapping(shapes) {\n    this.options.sizeField = null;\n    each(shapes, (shape) => {\n      const bbox = shape.getBBox();\n      const width = bbox.width;\n      const height = bbox.height;\n      const centerX = bbox.minX + width / 2;\n      const centerY = bbox.minY + height / 2;\n      const path = getRectPath(centerX, centerY, this.gridSize[0], this.gridSize[1], 1);\n      shape.get('origin').size = 1;\n      shape.stopAnimate();\n      shape.animate(\n        {\n          path: path,\n        },\n        500,\n        'easeLinear'\n      );\n    });\n  }\n\n  private getShapes() {\n    const elements = this.view.geometries[0].elements;\n    const shapes = [];\n    each(elements, (ele) => {\n      shapes.push(ele.shape);\n    });\n    return shapes;\n  }\n\n  protected renderPlotComponents() {\n    each(this.plotComponents, (component) => {\n      component.destroy();\n    });\n    this.plotComponents = [];\n    const componentsType = ['label', 'legend'];\n    each(componentsType, (t) => {\n      const cfg = {\n        view: this.view,\n        plot: this,\n        ...this.options[t],\n      };\n      const component = getPlotComponents(this, t, cfg);\n      if (component) {\n        component.render();\n        this.plotComponents.push(component);\n      }\n    });\n  }\n}\n\nregisterPlotType('heatmap', HeatmapLayer);\n"]}