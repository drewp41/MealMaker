{"version":3,"file":"label-auto.js","sourceRoot":"","sources":["../../../../src/plots/bar/component/label-auto.ts"],"names":[],"mappings":"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","sourcesContent":["import { every, each, groupBy, findIndex, uniq, map, size } from '@antv/util';\nimport { registerLabelComponent } from '../../../components/label/base';\nimport { IShape, Geometry, Element, ORIGIN, FIELD_ORIGIN } from '../../../dependents';\nimport BarLabel from './label';\nimport { getOverlapArea, moveInPanel, checkShapeOverlap } from '../../../util/view';\nimport BBox from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport { IBarAutoLabel } from '../interface';\n\n/** 自动模式的 Column 数据标签，会根据图形和数据标签自动优化数据标签布局和样式等 */\nexport default class BarAutoLabel extends BarLabel<IBarAutoLabel> {\n  protected getPosition(element: Element): { x: number; y: number } {\n    const offset = this.getDefaultOffset();\n    const value = this.getValue(element);\n    const bbox = this.getElementShapeBBox(element);\n    const { minX, maxX, minY, height } = bbox;\n    const { offsetX, offsetY } = this.options;\n    const y = minY + height / 2 + offsetY;\n    const dir = value < 0 ? -1 : 1;\n    const root = value > 0 ? maxX : minX;\n    const x = root + offset * dir + offsetX;\n\n    // 统一先设置为 right\n    return { x, y };\n  }\n\n  protected getTextAlign(element: Element) {\n    const value = this.getValue(element);\n    return value > 0 ? 'left' : 'right';\n  }\n\n  /** 默认的 fill 取自用户配置或主题配置 */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getTextFill(element: Element) {\n    const { style } = this.options;\n    return style.fill;\n  }\n\n  /** 默认不描边 */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getTextStroke(element: Element) {\n    return undefined;\n  }\n\n  /** 默认无处理：在 layout 阶段处理 */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected adjustLabel(label: IShape, element: Element): void {\n    // empty\n  }\n\n  /** 自动布局所有的数据标签 */\n  protected layoutLabels(geometry: Geometry, labels: IShape[]): void {\n    if (this.shouldInShapeLabels(labels)) {\n      this.inShapeLabels(geometry, labels);\n    }\n    this.autoHideLabels(geometry, labels);\n  }\n\n  /** 判断是否可以把数据标签放置在柱子内部 */\n  protected shouldInShapeLabels(labels: IShape[]): boolean {\n    return every(labels, (label) => {\n      const labelBBox = label.getBBox();\n      const element: Element = label.get('element');\n      const bbox = this.getElementShapeBBox(element);\n\n      return bbox.height >= labelBBox.height;\n    });\n  }\n\n  /** 内置数据标签，并自动设置颜色描边等属性 */\n  protected inShapeLabels(geometry: Geometry, labels: IShape[]) {\n    const coordinateBBox = this.getCoordinateBBox();\n    const [xField] = geometry.getXYFields();\n    const { darkStyle, lightStyle } = this.options;\n    const groupedLabels = groupBy(labels, (label) => label.get(ORIGIN)[FIELD_ORIGIN][xField]);\n    each(labels, (label: IShape) => {\n      const curGroup = groupedLabels[label.get(ORIGIN)[FIELD_ORIGIN][xField]] || [];\n      const element: Element = label.get('element');\n      const { shape } = element;\n      const fillWhite = isContrastColorWhite(shape.attr('fill'));\n      const shapeBBox = BBox.fromBBoxObject(shape.getBBox());\n      const labelBBox = BBox.fromBBoxObject(label.getBBox());\n\n      // 如果 Column 本身就不可见，直接隐藏对应的 label\n      if (getOverlapArea(coordinateBBox, shapeBBox) <= 0) {\n        label.set('visible', false);\n      }\n      if (labelBBox.width > shapeBBox.width) {\n        // 处理放不下的情况\n        const idx = findIndex(curGroup, (item) => item === label);\n        if (idx !== curGroup.length - 1) {\n          label.set('visible', false);\n        }\n      } else {\n        // 数据标签展示在图形中央\n        label.attr({\n          x: shapeBBox.x + shapeBBox.width / 2,\n          textAlign: 'center',\n        });\n        const overflow = labelBBox.width > shapeBBox.width || labelBBox.height > shapeBBox.height;\n        if (overflow) {\n          // 出现了溢出情况，添加描边\n          label.attr({\n            stroke: lightStyle?.stroke,\n          });\n        } else {\n          // 放置在柱形内部，颜色取反\n          label.attr({\n            fill: fillWhite ? lightStyle?.fill : darkStyle?.fill,\n            fillOpacity: fillWhite ? lightStyle?.fillOpacity : darkStyle?.fillOpacity,\n            stroke: undefined,\n          });\n        }\n      }\n    });\n  }\n\n  /** 数据标签防重叠抽样 */\n  protected autoHideLabels(geometry: Geometry, labels: IShape[]) {\n    const coordinateBBox = this.getCoordinateBBox();\n    const filteredLabels = this.filterLabels(labels);\n    const [xField] = geometry.getXYFields();\n    const dones: IShape[] = [];\n    const todo: IShape[] = [];\n    const groupedLabels = groupBy(filteredLabels, (label) => label.get(ORIGIN)[FIELD_ORIGIN][xField]);\n    const xValues = uniq(map(filteredLabels, (label: IShape) => label.get(ORIGIN)[FIELD_ORIGIN][xField]));\n    let xValue;\n\n    if (size(xValues) > 0) {\n      // 第一组\n      xValue = xValues.shift();\n      each(groupedLabels[xValue], (label) => todo.push(label));\n    }\n    if (size(xValues) > 0) {\n      // 最后一组\n      xValue = xValues.pop();\n      each(groupedLabels[xValue], (label) => todo.push(label));\n    }\n    each(xValues.reverse(), (val) => {\n      // 其他组\n      each(groupedLabels[val], (label) => todo.push(label));\n    });\n\n    while (todo.length > 0) {\n      const cur = todo.shift();\n      if (cur.get('visible')) {\n        moveInPanel(cur, coordinateBBox);\n        if (checkShapeOverlap(cur, dones)) {\n          cur.set('visible', false);\n        } else {\n          dones.push(cur);\n        }\n      }\n    }\n  }\n\n  /** 抽样数据标签，设置最大数量的数据标签，其他的统一隐藏 */\n  private filterLabels(labels: IShape[]): IShape[] {\n    const MAX_CNT = 500; // 最多显示 500 个数据标签\n    const filteredLabels = [];\n    const pages = Math.max(Math.floor(labels.length / MAX_CNT), 1);\n    each(labels, (label, idx) => {\n      if (idx % pages === 0) {\n        filteredLabels.push(label);\n      } else {\n        label.set('visible', false);\n      }\n    });\n\n    return filteredLabels;\n  }\n}\n\nregisterLabelComponent('bar-auto', BarAutoLabel);\n"]}