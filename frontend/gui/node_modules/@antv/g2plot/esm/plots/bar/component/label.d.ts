import { View, IGroup } from '../../../dependents';
import BBox from '../../../util/bbox';
export interface BarLabelConfig {
    visible?: boolean;
    position?: string;
    formatter?: (...args: any[]) => string;
    offsetX?: number;
    offsetY?: number;
    style?: any;
    adjustColor?: boolean;
    adjustPosition?: boolean;
}
export interface IBarLabel extends BarLabelConfig {
    view: View;
    plot: any;
}
export default class BarLabel {
    options: BarLabelConfig;
    destroyed: boolean;
    protected plot: any;
    protected view: View;
    protected coord: any;
    protected container: IGroup;
    constructor(cfg: IBarLabel);
    protected init(): void;
    render(): void;
    clear(): void;
    hide(): void;
    show(): void;
    destroy(): void;
    getBBox(): void;
    protected getPosition(shape: any, value: any): {
        x: any;
        y: number;
    };
    protected getTextColor(shape: any): any;
    protected getTextAlign(value: any): any;
    protected getValue(shape: any): any;
    protected adjustLabel(label: any, shape: any): void;
    protected getDefaultOptions(): {
        offsetX: number;
        offsetY: number;
        style: any;
        adjustPosition: boolean;
    };
    protected getShapeBbox(shape: any): BBox;
    private getGeometry;
}
