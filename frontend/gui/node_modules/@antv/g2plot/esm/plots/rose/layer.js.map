{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/rose/layer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-17\n */\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../..';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { Label } from '../..';\nimport * as EventParser from './event';\nimport { GraphicStyle } from '../../interface/config';\n\nexport interface RoseViewConfig extends ViewConfig {\n  radiusField: string;\n  categoryField: string;\n  colorField?: string;\n  radius?: number;\n  innerRadius?: number;\n  /** 每个扇形切片的样式 */\n  sectorStyle?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  label?: RoseLabel;\n}\n\ntype RoseLabel = ViewConfig['label'] & {\n  type: 'outer' | 'inner';\n  /** 自动调整颜色 */\n  adjustColor?: boolean;\n  /** 自动旋转 */\n  autoRotate?: boolean;\n  // label的内容，如果不配置，读取scale中的第一个field对应的值  G2 4.0 就这样实现的\n  content?: string | ((...args: any[]) => string);\n};\n\nexport interface RoseLayerConfig extends RoseViewConfig, LayerConfig {}\n\nconst G2_GEOM_MAP = {\n  rose: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  rose: 'column',\n};\n\nexport default class RoseLayer<T extends RoseLayerConfig = RoseLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      width: 400,\n      height: 400,\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      forceFit: true,\n      padding: 'auto',\n      radius: 0.8,\n      innerRadius: 0,\n      label: {\n        visible: true,\n        type: 'inner',\n        autoRotate: true,\n        adjustColor: false,\n      },\n      legend: {\n        visible: true,\n        position: 'right',\n      },\n      tooltip: {\n        visible: true,\n        shared: false,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      columnStyle: {\n        stroke: 'white',\n        lineWidth: 1,\n      },\n      xAxis: {\n        visible: false,\n        line: {\n          visible: false,\n        },\n        tickLine: {\n          visible: false,\n        },\n        grid: {\n          visible: true,\n          alignTick: false,\n          style: {\n            lineWidth: 0.5,\n          },\n        },\n        label: {\n          offset: 5,\n          autoRotate: true,\n        },\n      },\n      yAxis: {\n        visible: false,\n      },\n    });\n  }\n\n  public rose: any;\n  public type: string = 'rose';\n\n  public getOptions(props: T) {\n    const options = super.getOptions(props);\n    const columnStyle = props.sectorStyle;\n    const xField = props.categoryField;\n    const yField = props.radiusField;\n    return deepMix({}, options, { columnStyle, xField, yField });\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected scale() {\n    // super.scale();\n    const props = this.options;\n    const scales = {};\n    scales[props.radiusField] = {};\n    scales[props.categoryField] = { type: 'cat' };\n    this.setConfig('scales', scales);\n  }\n\n  /** 不显示坐标轴 */\n  /*protected axis() {\n    super.axis();\n    const options = this.options;\n    if (!options.stackField && !options.groupField) {\n      this.setConfig('axes', false);\n    }\n  }*/\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig = {\n      type: 'polar',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius || 0,\n      },\n    };\n    this.setConfig('coordinate', coordConfig as any);\n  }\n\n  protected addGeometry() {\n    const options = this.options;\n    const rose = getGeom('interval', 'main', {\n      plot: this,\n      positionFields: [options.categoryField, options.radiusField],\n      widthRatio: {\n        rose: 1,\n      },\n    });\n    rose.label = this.extractLabel();\n    rose.adjust = this.adjustRoseAdjust();\n    this.rose = rose;\n    if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n    this.setConfig('geometry', rose);\n  }\n\n  protected adjustRoseAdjust() {\n    return;\n  }\n\n  protected geometryTooltip() {\n    this.rose.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.rose.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.rose.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.rose.tooltip.fields = [this.options.radiusField, this.options.categoryField, this.options.colorField];\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.rose.animate = false;\n    }\n  }\n\n  protected annotation() {\n    return;\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  protected extractLabel() {\n    const options = this.options;\n    if (!options.label || !options.label.visible) {\n      return false;\n    }\n    const label = deepMix({}, options.label as Label);\n    this.adjustLabelOptions(label);\n    const fields = [options.categoryField, options.radiusField];\n    const labelConfig = getComponent('label', {\n      plot: this,\n      labelType: 'polar',\n      fields,\n      ...label,\n    });\n    return labelConfig;\n  }\n\n  private adjustLabelOptions(labelOptions: RoseLabel) {\n    const { radiusField } = this.options;\n    if (labelOptions) {\n      const { offset, type, content } = labelOptions;\n      if (type === 'inner') {\n        labelOptions.offset = offset < 0 ? offset : -10;\n      } else if (type === 'outer') {\n        labelOptions.offset = offset >= 0 ? offset : 10;\n      }\n      if (!content) {\n        // 默认显示 数值\n        labelOptions.content = (text, item) => `${item._origin[radiusField]}`;\n      }\n    }\n  }\n}\n\nregisterPlotType('rose', RoseLayer);\n"]}