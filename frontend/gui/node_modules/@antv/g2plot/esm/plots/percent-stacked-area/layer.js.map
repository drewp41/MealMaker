{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/percent-stacked-area/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAErD,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAGhD,OAAO,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAK1D;IAAqD,2CAA0C;IAA/F;QAAA,qEAuCC;QAxBQ,UAAI,GAAW,oBAAoB,CAAC;;IAwB7C,CAAC;IAtCe,yCAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE;oBACL,OAAO,EAAE,IAAI;oBACb,SAAS,EAAE,UAAC,CAAC;wBACX,IAAM,GAAG,GAAG,KAAK,CAAC;wBAClB,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBAC5B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAGS,6CAAW,GAArB,UAAsB,UAAuB;QACrC,IAAA,iBAAiC,EAA/B,kBAAM,EAAE,kBAAuB,CAAC;QAExC,OAAO,uBAAuB,CAAC,UAAU,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;IAES,uCAAK,GAAf;QACE,IAAM,UAAU,GAAG,EAAE,CAAC;QACd,IAAA,4BAAM,CAAkB;QAChC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG;YAChC,SAAS,EAAE,CAAC;YACZ,KAAK,EAAK,MAAM,SAAM;YACtB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,SAAS,EAAE,UAAC,CAAC;gBACX,IAAM,cAAc,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC5C,OAAU,cAAc,MAAG,CAAC;YAC9B,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/D,iBAAM,KAAK,WAAE,CAAC;IAChB,CAAC;IACH,8BAAC;AAAD,CAAC,AAvCD,CAAqD,WAAW,GAuC/D;;AAED,gBAAgB,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport StackedArea from '../stacked-area/layer';\nimport { StackedAreaViewConfig } from '../stacked-area/interface';\nimport { DataItem } from '../../interface/config';\nimport { transformDataPercentage } from '../../util/data';\n\nexport type PercentStackedAreaViewConfig = StackedAreaViewConfig;\nexport interface PercentStackedAreaLayerConfig extends PercentStackedAreaViewConfig, LayerConfig {}\n\nexport default class PercentStackedAreaLayer extends StackedArea<PercentStackedAreaLayerConfig> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      yAxis: {\n        visible: true,\n        label: {\n          visible: true,\n          formatter: (v) => {\n            const reg = /%/gi;\n            return v.replace(reg, '');\n          },\n        },\n      },\n    });\n  }\n  public type: string = 'percentStackedArea';\n\n  protected processData(originData?: DataItem[]) {\n    const { xField, yField } = this.options;\n\n    return transformDataPercentage(originData, xField, [yField]);\n  }\n\n  protected scale() {\n    const metaConfig = {};\n    const { yField } = this.options;\n    metaConfig[this.options.yField] = {\n      tickCount: 6,\n      alias: `${yField} (%)`,\n      min: 0,\n      max: 1,\n      formatter: (v) => {\n        const formattedValue = (v * 100).toFixed(1);\n        return `${formattedValue}%`;\n      },\n    };\n    this.options.meta = deepMix({}, metaConfig, this.options.meta);\n    super.scale();\n  }\n}\n\nregisterPlotType('percentStackedArea', PercentStackedAreaLayer);\n"]}