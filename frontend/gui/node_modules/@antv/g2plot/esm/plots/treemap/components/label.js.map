{"version":3,"file":"label.js","sourceRoot":"","sources":["../../../../src/plots/treemap/components/label.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nimport { View, IGroup } from '../../../dependents';\nimport { breakText } from '../../../util/common';\n\nconst LEAF_LABEL_OFFSET = 4;\nconst MIN_FONTSIZE = 8;\n\nfunction isLeaf(data, maxLevel) {\n  return !data.children || data.depth >= maxLevel;\n}\n\nfunction textWrapper(label, width, container) {\n  const fontSize = label.attr('fontSize');\n  const textContent: string = label.attr('text');\n  const tShape = container.addShape('text', {\n    attrs: {\n      text: '',\n      x: 0,\n      y: 0,\n      fontSize,\n    },\n  });\n  const textArr = textContent.split('\\n');\n  const wrappedTextArr = textArr.map((wrappedText) => {\n    let text = '';\n    const chars = wrappedText.split('');\n    const breakIndex: number[] = [];\n    for (let i = 0; i < chars.length; i++) {\n      const item = chars[i];\n      tShape.attr('text', (text += item));\n      const currentWidth = tShape.getBBox().width - 1;\n      if (currentWidth > width) {\n        // 如果是第一个字符就大于宽度不做任何换行处理\n        if (i === 0) {\n          break;\n        }\n        breakIndex.push(i);\n        text = '';\n      }\n    }\n\n    return breakText(chars, breakIndex);\n  });\n\n  tShape.remove();\n  return wrappedTextArr.join('\\n');\n}\n\nfunction textAbbreviate(text, fontSize, width, container) {\n  const tailShape = container.addShape('text', {\n    attrs: {\n      text: '...',\n      x: 0,\n      y: 0,\n      fontSize,\n    },\n  });\n  const tailWidth = tailShape.getBBox().width;\n  const tShape = container.addShape('text', {\n    attrs: {\n      text: '',\n      x: 0,\n      y: 0,\n      fontSize,\n    },\n  });\n  let t = '';\n  const abbreviateWidth = width - tailWidth;\n  for (let i = 0; i < text.length; i++) {\n    const item = text[i];\n    tShape.attr('text', (t += item));\n    const currentWidth = tShape.getBBox().width;\n    if (currentWidth >= abbreviateWidth) {\n      const string = t.substr(0, t.length - 1);\n      if (string.length > 0) {\n        return string + '...';\n      }\n    }\n  }\n  tShape.remove();\n  tailShape.remove();\n  return t;\n}\n\nexport interface TreemapLabelConfig {\n  visible?: boolean;\n  formatter?: (...args: any[]) => string;\n  offsetX?: number;\n  offsetY?: number;\n  style?: any;\n}\n\nexport interface ILineLabel extends TreemapLabelConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class TreemapLabel {\n  public options: TreemapLabelConfig;\n  public destroyed: boolean = false;\n  protected plot: any;\n  protected view: View;\n  private container: IGroup;\n\n  constructor(cfg: ILineLabel) {\n    this.view = cfg.view;\n    this.plot = cfg.plot;\n    const defaultOptions = this.getDefaultOptions();\n    this.options = deepMix(defaultOptions, cfg, {});\n    this.init();\n  }\n\n  protected init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    const elements = this.getGeometry().elements;\n    each(elements, (ele) => {\n      const shape = ele.shape;\n      const data = shape.get('origin').data;\n      const isLeafNode = isLeaf(data, this.plot.options.maxLevel);\n      if (data.showLabel) {\n        const style = clone(this.options.style);\n        const position = this.getPosition(shape, isLeafNode);\n        const formatter = this.options.formatter;\n        const content = formatter ? formatter(data.name) : data.name;\n        const textBaseline = this.getTextBaseLine(isLeafNode);\n        const label = this.container.addShape('text', {\n          attrs: deepMix({}, style, {\n            x: position.x,\n            y: position.y,\n            text: content,\n            fill: 'black',\n            textAlign: 'center',\n            textBaseline,\n            fontWeight: isLeafNode ? 300 : 600,\n          }),\n          name: 'label',\n        });\n        this.adjustLabel(label, shape, isLeafNode);\n      }\n    });\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    return this.container.getBBox();\n  }\n\n  protected getPosition(shape, isLeafNode) {\n    const shapeBbox = shape.getBBox();\n    let x = 0;\n    let y = 0;\n    if (!isLeafNode) {\n      x = shapeBbox.x + shapeBbox.width / 2;\n      y = shapeBbox.y + 4;\n    } else {\n      x = shapeBbox.minX + shapeBbox.width / 2;\n      y = shapeBbox.minY + shapeBbox.height / 2;\n    }\n    return { x, y };\n  }\n\n  protected getTextBaseLine(isLeafNode) {\n    return isLeafNode ? 'middle' : 'top';\n  }\n\n  protected adjustLabel(label, shape, isLeafNode) {\n    if (isLeafNode) {\n      this.adjustLeafLabel(label, shape);\n    } else {\n      this.adjustParentLabel(label, shape);\n    }\n  }\n\n  private adjustLeafLabel(label, shape) {\n    const bbox = shape.getBBox();\n    const labelBBox = label.getBBox();\n    const labelText = clone(label.attr('text'));\n    const sizeOffset = 2;\n    const fontSize = Math.max(label.attr('fontSize') - sizeOffset, MIN_FONTSIZE);\n    const centerX = bbox.x + bbox.width / 2;\n    const centerY = bbox.y + bbox.height / 2;\n    label.attr({\n      x: centerX,\n      y: centerY,\n      textAlign: 'center',\n      textBaseline: 'middle',\n      lineHeight: fontSize,\n      fontSize,\n    });\n    const wrapperWidth = bbox.width - LEAF_LABEL_OFFSET * 2;\n    if (labelBBox.width > bbox.width && labelBBox.height > bbox.height) {\n      label.attr('text', '');\n      return;\n    } else if (wrapperWidth < fontSize) {\n      label.attr('text', '');\n      return;\n    }\n    if (labelBBox.width > bbox.width) {\n      const wrappedText = textWrapper(label, wrapperWidth, this.container);\n      label.attr({\n        lineHeight: label.attr('fontSize'),\n        text: wrappedText,\n      });\n      const tem_bbox = label.getBBox();\n      if (tem_bbox.height > bbox.height) {\n        const text = textAbbreviate(labelText, fontSize, wrapperWidth, this.container);\n        label.attr('text', text);\n      }\n    }\n  }\n\n  private adjustParentLabel(label, shape) {\n    const shapeBbox = shape.getBBox();\n    const wrapperWidth = shapeBbox.width - LEAF_LABEL_OFFSET * 2;\n    if (label.getBBox().width > wrapperWidth) {\n      const text = textAbbreviate(label.attr('text'), label.attr('fontSize'), wrapperWidth, this.container);\n      label.attr('text', text);\n    }\n  }\n\n  private getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = theme.label.style;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      style: clone(labelStyle),\n    };\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geom) => geom.type === 'polygon');\n  }\n}\n"]}