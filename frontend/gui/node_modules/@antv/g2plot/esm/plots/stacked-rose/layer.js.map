{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/stacked-rose/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAErD,OAAO,SAA6B,MAAM,eAAe,CAAC;AAQ1D;IAAyG,oCAAY;IAArH;QAAA,qEAoDC;QAvBQ,UAAI,GAAW,aAAa,CAAC;;IAuBtC,CAAC;IAnDe,kCAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACf;gBACD,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,IAAI;oBACb,SAAS,EAAE,KAAK;oBAChB,KAAK,EAAE;wBACL,SAAS,EAAE,GAAG;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,CAAC;oBACT,UAAU,EAAE,IAAI;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf;SACF,CAAC,CAAC;IACL,CAAC;IAIS,2CAAgB,GAA1B;QACE,OAAO;YACL;gBACE,IAAI,EAAE,OAAO;aACd;SACF,CAAC;IACJ,CAAC;IAES,0CAAe,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,IAAM,cAAc,GAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACjD,IAAI,cAAc,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;SAClD;QACD,IAAI,cAAc,CAAC,SAAS,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC,SAAS,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC5G;SACF;IACH,CAAC;IACH,uBAAC;AAAD,CAAC,AApDD,CAAyG,SAAS,GAoDjH;;AAED,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport RoseLayer, { RoseViewConfig } from '../rose/layer';\n\nexport interface StackedRoseViewConfig extends RoseViewConfig {\n  stackField: string;\n}\n\nexport interface StackedRoseLayerConfig extends StackedRoseViewConfig, LayerConfig {}\n\nexport default class StackedRoseLayer<T extends StackedRoseLayerConfig = StackedRoseLayerConfig> extends RoseLayer<T> {\n  public static getDefaultOptions() {\n    return deepMix({}, super.getDefaultOptions(), {\n      xAxis: {\n        visible: true,\n        line: {\n          visible: false,\n        },\n        tickLine: {\n          visible: false,\n        },\n        grid: {\n          visible: true,\n          alignTick: false,\n          style: {\n            lineWidth: 0.5,\n          },\n        },\n        label: {\n          offset: 5,\n          autoRotate: true,\n        },\n      },\n      yAxis: {\n        visible: false,\n      },\n    });\n  }\n\n  public type: string = 'stackedRose';\n\n  protected adjustRoseAdjust() {\n    return [\n      {\n        type: 'stack',\n      },\n    ];\n  }\n\n  protected geometryTooltip() {\n    this.rose.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.rose.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.rose.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.rose.tooltip.fields = [this.options.radiusField, this.options.categoryField, this.options.stackField];\n      }\n    }\n  }\n}\n\nregisterPlotType('stackedRose', StackedRoseLayer);\n"]}