{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/radar/layer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-14\n */\nimport { deepMix, has } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport * as EventParser from './event';\nimport { IValueAxis, ICatAxis, GraphicStyle, LineStyle } from '../../interface/config';\nimport './theme';\n\nexport interface RadarViewConfig extends ViewConfig {\n  /** 角度字段 */\n  angleField: string;\n  /** 径向字段 */\n  radiusField: string;\n  /** 分组字段 */\n  seriesField?: string;\n  /** 是否平滑 */\n  smooth?: boolean;\n  /** 折线图形样式 */\n  line?: {\n    visible?: boolean;\n    size?: number;\n    color?: string;\n    style?: LineStyle | ((...args: any[]) => LineStyle);\n  };\n  /** 数据点图形样式 */\n  point?: {\n    visible?: boolean;\n    shape?: string;\n    size?: number;\n    color?: string;\n    style?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  };\n  /** area图形样式 */\n  area?: {\n    visible?: boolean;\n    style?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  };\n  /** 角度轴配置 */\n  angleAxis?: ICatAxis;\n  /** 径向轴配置 */\n  radiusAxis?: IValueAxis;\n  /** 雷达图半径 */\n  radius?: number;\n}\n\nexport interface RadarLayerConfig extends RadarViewConfig, LayerConfig {}\n\nconst GEOM_MAP = {\n  area: 'area',\n  line: 'line',\n  point: 'point',\n};\n\nexport default class RadarLayer extends ViewLayer<RadarLayerConfig> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      width: 400,\n      height: 400,\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      forceFit: true,\n      padding: 'auto',\n      radius: 0.8,\n      smooth: false,\n      line: {\n        visible: true,\n        size: 2,\n        style: {\n          opacity: 1,\n        },\n      },\n      area: {\n        visible: true,\n        style: {\n          opacity: 0.25,\n        },\n      },\n      point: {\n        visible: false,\n        size: 4,\n        shape: 'point',\n        style: {\n          opacity: 1,\n        },\n      },\n      angleAxis: {\n        visible: true,\n        autoRotateTitle: true,\n        line: {\n          visible: false,\n        },\n        tickLine: {\n          visible: false,\n        },\n        grid: {\n          visible: true,\n          line: {\n            style: {\n              lineDash: [0, 0],\n            },\n          },\n        },\n        label: {\n          visible: true,\n          offset: 16,\n          autoRotate: true,\n          autoHide: true,\n        },\n        title: {\n          visible: false,\n        },\n      },\n      radiusAxis: {\n        min: 0,\n        visible: true,\n        /** G2 4.0 默认 nice 不生效，需要手动添加 */\n        nice: true,\n        autoRotateTitle: true,\n        line: {\n          visible: true,\n        },\n        tickLine: {\n          visible: true,\n        },\n        gridType: 'line',\n        grid: {\n          visible: true,\n          line: {\n            style: {\n              lineDash: [0, 0],\n            },\n          },\n        },\n        label: {\n          visible: true,\n          autoHide: true,\n          autoRotate: true,\n        },\n        title: {\n          visible: false,\n        },\n      },\n      label: {\n        visible: false,\n        type: 'point',\n      },\n      legend: {\n        visible: true,\n        position: 'left-top',\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: false,\n      },\n    });\n  }\n  public type: string = 'radar';\n  public line: any;\n  public point: any;\n  public area: any;\n  public baseElement: any;\n  public lineElement: any; // 保存line、area、point的配置项，用于后续的label、tooltip\n  public pointElement: any;\n  public areaElement: any;\n\n  public init() {\n    const props = this.options;\n    props.xField = props.angleField;\n    props.yField = props.radiusField;\n    super.init();\n  }\n\n  protected geometryParser(dim, type) {\n    return GEOM_MAP[type];\n  }\n\n  protected scale() {\n    const props = this.options;\n    const scales = {};\n    /** 配置x-scale */\n    scales[props.angleField] = {};\n    if (has(props, 'angleAxis')) {\n      extractScale(scales[props.angleField], props.angleAxis);\n    }\n    /** 配置y-scale */\n    scales[props.radiusField] = {};\n    if (has(props, 'radiusAxis')) {\n      extractScale(scales[props.radiusField], props.radiusAxis);\n    }\n    this.setConfig('scales', scales);\n    super.scale();\n  }\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig: any = {\n      type: 'polar',\n      cfg: {\n        radius: props.radius,\n      },\n    };\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected axis(): void {\n    const props = this.options;\n    const xAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'angle',\n    });\n    const yAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'radius',\n    });\n    const axesConfig = {};\n    axesConfig[props.angleField] = xAxis_parser;\n    axesConfig[props.radiusField] = yAxis_parser;\n    /** 存储坐标轴配置项到config */\n    this.setConfig('axes', axesConfig);\n  }\n\n  protected addGeometry() {\n    const props = this.options;\n    /** 配置面积 */\n    if (props.area.visible) {\n      const area = getGeom('area', 'main', {\n        plot: this,\n      });\n      this.setConfig('geometry', area);\n      this.area = area;\n    }\n    /** 配置线 */\n    if (props.line && props.line.visible) {\n      const line = getGeom('line', 'guide', {\n        plot: this,\n      });\n      this.setConfig('geometry', line);\n      this.line = line;\n    }\n    /** 配置点 */\n    if (props.point && props.point.visible) {\n      const point = getGeom('point', 'guide', {\n        plot: this,\n      });\n      this.setConfig('geometry', point);\n      this.point = point;\n    }\n    if (props.label) {\n      this.label();\n    }\n    if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n  }\n\n  protected geometryTooltip() {\n    const geomConfig = this.line ? this.line : this.area;\n    geomConfig.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      geomConfig.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      geomConfig.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        geomConfig.tooltip.fields = [this.options.angleField, this.options.radiusField];\n      }\n      if (this.options.seriesField) {\n        geomConfig.tooltip.fields.push(this.options.seriesField);\n      }\n    }\n  }\n\n  protected label() {\n    const props = this.options;\n\n    if (props.label.visible === false) {\n      if (this.point) {\n        this.point.label = false;\n      }\n      if (this.line) {\n        this.line.label = false;\n      }\n      if (this.area) {\n        this.area.label = false;\n      }\n      return;\n    }\n\n    // @Todo 雷达图标签布局算法后续补充\n    const label = getComponent('label', {\n      fields: [props.radiusField],\n      cfg: {\n        type: 'polar',\n        autoRotate: false,\n      },\n      plot: this,\n      ...props.label,\n    });\n\n    if (this.point) {\n      this.point.label = label;\n    } else if (this.line) {\n      this.line.label = label;\n    } else if (this.area) {\n      this.area.label = label;\n    }\n  }\n\n  protected annotation() {\n    return;\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      // 关闭动画\n      if (this.area) this.area.animate = false;\n      if (this.line) this.line.animate = false;\n      if (this.point) this.point.animate = false;\n    }\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n}\n\nregisterPlotType('radar', RadarLayer);\n"]}