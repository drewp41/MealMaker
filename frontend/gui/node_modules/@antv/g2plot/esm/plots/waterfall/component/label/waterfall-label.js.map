{"version":3,"file":"waterfall-label.js","sourceRoot":"","sources":["../../../../../src/plots/waterfall/component/label/waterfall-label.ts"],"names":[],"mappings":";AAAA;;;GAGG;AACH,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,OAAO,WAAW,MAAM,iCAAiC,CAAC;AAE1D,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAC1C,OAAO,EAAE,sBAAsB,EAAE,MAAM,mCAAmC,CAAC;AAE3E,IAAM,MAAM,GAAG,CAAC,CAAC;AAEjB;IAA4C,kCAAW;IAAvD;;IAsBA,CAAC;IArBW,oCAAW,GAArB,UAAsB,KAAa,EAAE,OAAgB;QAC3C,IAAA,qBAAK,CAAa;QAC1B,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;QACjC,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACnD,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,YAAY,GAAG,QAAQ,CAAC;QAE5B,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC;YAC9B,YAAY,GAAG,KAAK,CAAC;SACtB;aAAM;YACL,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC;SAC/B;QAED,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACtB,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1B,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAC3C,CAAC;IACH,qBAAC;AAAD,CAAC,AAtBD,CAA4C,WAAW,GAsBtD;;AAED,sBAAsB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-18\n */\nimport { isArray } from '@antv/util';\n\nimport ColumnLabel from '../../../column/component/label';\nimport { IShape, Element } from '../../../../dependents';\nimport { VALUE_FIELD } from '../../layer';\nimport { registerLabelComponent } from '../../../../components/label/base';\n\nconst MARGIN = 2;\n\nexport default class WaterfallLabel extends ColumnLabel {\n  protected adjustLabel(label: IShape, element: Element): void {\n    const { shape } = element;\n    const shapeBox = shape.getBBox();\n    const data = element.getData();\n    const values = data[VALUE_FIELD];\n    const diff = data[this.layer.options.yField];\n    const value = isArray(values) ? values[1] : values;\n    let yPos = (shapeBox.minY + shapeBox.maxY) / 2;\n    let textBaseline = 'bottom';\n\n    if (diff < 0) {\n      yPos = shapeBox.maxY + MARGIN;\n      textBaseline = 'top';\n    } else {\n      yPos = shapeBox.minY - MARGIN;\n    }\n\n    label.attr('y', yPos);\n    label.attr('text', value);\n    label.attr('textBaseline', textBaseline);\n  }\n}\n\nregisterLabelComponent('waterfall', WaterfallLabel);\n"]}