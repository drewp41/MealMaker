{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/plots/pie/component/label/utils/index.ts"],"names":[],"mappings":"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","sourcesContent":["export interface Point {\n  x: number;\n  y: number;\n}\n\nexport function getEndPoint(center, angle, r): Point {\n  return {\n    x: center.x + r * Math.cos(angle),\n    y: center.y + r * Math.sin(angle),\n  };\n}\n\nexport interface Box {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n/** 获取矩形中点 */\nexport function getCenter(box: Box): Point {\n  return {\n    x: box.x + box.width / 2,\n    y: box.y + box.height / 2,\n  };\n}\n\nexport function getOverlapArea(a: Box, b: Box, margin = 0): number {\n  const xOverlap = Math.max(\n    0,\n    Math.min(a.x + a.width + margin, b.x + b.width + margin) - Math.max(a.x - margin, b.x - margin)\n  );\n  const yOverlap = Math.max(\n    0,\n    Math.min(a.y + a.height + margin, b.y + b.height + margin) - Math.max(a.y - margin, b.y - margin)\n  );\n  return xOverlap * yOverlap;\n}\n\n/**\n * 计算两个矩形之间的堆叠情况\n * @return xOverlap x方向重叠大小\n * @return yOverlap y方向重叠大小\n */\nexport function getOverlapInfo(a: Box, b: Box, margin = 0): { xOverlap: number; yOverlap: number } {\n  let xOverlap = Math.max(\n    0,\n    Math.min(a.x + a.width + margin, b.x + b.width + margin) - Math.max(a.x - margin, b.x - margin)\n  );\n  let yOverlap = Math.max(\n    0,\n    Math.min(a.y + a.height + margin, b.y + b.height + margin) - Math.max(a.y - margin, b.y - margin)\n  );\n\n  // 添加 sign\n  if (xOverlap && a.x < b.x) {\n    xOverlap = -xOverlap;\n  }\n  if (yOverlap && a.y < b.y) {\n    yOverlap = -yOverlap;\n  }\n\n  // 重叠\n  if (a.x === b.x && a.width === b.width) {\n    xOverlap = b.width;\n  }\n  if (a.y === b.y && a.height === b.height) {\n    yOverlap = b.height;\n  }\n\n  return { xOverlap, yOverlap };\n}\n\n/**\n * 粗略地判断是否在panel内部\n * @param panel\n * @param shape\n */\nexport function inPanel(panel: Box, shape: Box) {\n  return (\n    panel.x < shape.x &&\n    panel.x + panel.width > shape.x + shape.width &&\n    panel.y < shape.y &&\n    panel.y + panel.height > shape.y + shape.height\n  );\n}\n\n/**\n * 判断两个数值 是否接近\n * - 解决精度问题（由于无法确定精度上限，根据具体场景可传入 精度 参数）\n */\nexport const near = (x: number, y: number, e: number = Number.EPSILON ** 0.5): boolean =>\n  [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < e;\n\n/**\n * 获取点到圆心的连线与水平方向的夹角\n */\nexport function getAngleByPoint(coordinate, point): number {\n  const center = coordinate.getCenter();\n  return Math.atan2(point.y - center.y, point.x - center.x);\n}\n\n/**\n * 获取 label 的旋转角度\n * @param angle\n */\nexport function getLabelRotate(angle: number) {\n  const HALF_PI = Math.PI / 2;\n  let rotate = angle;\n  if (rotate > HALF_PI || rotate < -HALF_PI) {\n    rotate = rotate + Math.PI;\n  }\n  return rotate;\n}\n"]}