{"version":3,"file":"spider-label.js","sourceRoot":"","sources":["../../../../../src/plots/pie/component/label/spider-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { View, IGroup, IShape } from '../../../../dependents';\nimport { deepMix, clone, each, isString, mix } from '@antv/util';\nimport { LooseMap } from '../../../../interface/types';\n\nconst ANCHOR_OFFSET = 0; // 锚点偏移量\nconst INFLECTION_OFFSET = 15; // 拐点偏移量\nconst DEFAULT_COLOR = '#CCC';\nconst LABEL1_OFFSETY = 2;\nconst LABEL2_OFFSETY = -2;\nconst ADJUSTOFFSET = 15;\n\ntype IAttrs = LooseMap;\n\ntype Point = { x: number; y: number };\ninterface LabelData {\n  _anchor: Point;\n  _inflection: Point;\n  _data: object;\n  x: number;\n  y: number;\n  r: number;\n  fill: string;\n  textGroup: IGroup;\n  _side?: 'left' | 'right';\n}\n\ninterface SpiderLabelConfig {\n  line?: any;\n  text?: any;\n  formatter?: (text: string, item: OriginLabelItem, index: number) => string | string[];\n  offsetX?: number;\n  offsetY?: number;\n  [field: string]: any;\n}\n\ninterface ISpiderLabel extends SpiderLabelConfig {\n  view: View;\n  fields: string[];\n}\n\nfunction getEndPoint(center, angle, r) {\n  return {\n    x: center.x + r * Math.cos(angle),\n    y: center.y + r * Math.sin(angle),\n  };\n}\n\ninterface OriginLabelItem {\n  /** 原始数据值 */\n  _origin: object;\n  color?: string;\n}\n\nexport default class SpiderLabel {\n  public destroyed: boolean = false;\n  private view: View;\n  private options: ISpiderLabel;\n  private halves: any[][];\n  private container: IGroup;\n  private width: number;\n  private height: number;\n  private coord: any;\n\n  constructor(cfg: ISpiderLabel) {\n    this.view = cfg.view;\n    this.options = deepMix({}, this.getDefaultOptions(), cfg);\n    this._adjustOptions(this.options);\n    this.init();\n  }\n\n  private init() {\n    this.container = this.view.geometries[0].labelsContainer;\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n  }\n\n  public render() {\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n    /** 如果有formatter则事先处理数据 */\n    const data = clone(this.view.getData());\n    this.halves = [[], []];\n    const shapes = [];\n    const elements = this.view.geometries[0].elements;\n    each(elements, (ele) => {\n      shapes.push(ele.shape);\n    });\n    this.coord = this.view.geometries[0].coordinate;\n    const angleField = this.options.fields[0];\n    const scale = this.view.getScalesByDim('y')[angleField];\n    const center = this.coord.getCenter();\n    const { startAngle } = this.coord;\n    const radius = this.coord.polarRadius;\n    const { width, height } = this.view.coordinateBBox;\n    this.width = width;\n    this.height = height;\n    let angle = startAngle;\n    // tslint:disable-next-line: prefer-for-of\n    for (let idx = 0; idx < data.length; idx++) {\n      const d = data[idx];\n      // 计算每个切片的middle angle\n      const angleValue = scale.scale(d[angleField]);\n      const targetAngle = angle + Math.PI * 2 * angleValue;\n      const middleAngle = angle + (targetAngle - angle) / 2;\n      angle = targetAngle;\n      // 根据middle angle计算锚点和拐点距离\n      const anchorPoint = getEndPoint(center, middleAngle, radius + ANCHOR_OFFSET);\n      const inflectionPoint = getEndPoint(center, middleAngle, radius + INFLECTION_OFFSET);\n      // 获取对应shape的color\n      let color = DEFAULT_COLOR;\n      if (this.options.fields.length === 2) {\n        const colorField = this.options.fields[1];\n        const colorScale = this.view.geometries[0].scales[colorField];\n        const colorIndex = colorScale.scale(d[colorField]);\n        const shapeIndex = Math.floor(colorIndex * (shapes.length - 1));\n        color = shapes[shapeIndex].attr('fill');\n      }\n      // 组装label数据\n      const label: LabelData = {\n        _anchor: anchorPoint,\n        _inflection: inflectionPoint,\n        _data: d,\n        x: inflectionPoint.x,\n        y: inflectionPoint.y,\n        r: radius + INFLECTION_OFFSET,\n        fill: color,\n        textGroup: null,\n        _side: null,\n      };\n      // 创建label文本\n      let texts = [];\n      each(this.options.fields, (f) => {\n        texts.push(d[f]);\n      });\n      if (this.options.formatter) {\n        let formatted: any = this.options.formatter(d[angleField], { _origin: d, color }, idx);\n        if (isString(formatted)) {\n          formatted = [formatted];\n        }\n        texts = formatted;\n      }\n      const textGroup = this.container.addGroup();\n      const textAttrs: IAttrs = {\n        x: 0,\n        y: 0,\n        fontSize: this.options.text.fontSize,\n        lineHeight: this.options.text.fontSize,\n        fontWeight: this.options.text.fontWeight,\n        fill: this.options.text.fill,\n      };\n      // label1:下部label\n      let lowerText = d[angleField];\n      if (this.options.formatter) {\n        lowerText = texts[0];\n      }\n      const lowerTextAttrs = clone(textAttrs);\n      if (texts.length === 2) {\n        lowerTextAttrs.fontWeight = 700;\n      }\n      const lowerTextShape: any = textGroup.addShape('text', {\n        attrs: mix(\n          {\n            textBaseline: texts.length === 2 ? 'top' : 'middle',\n            text: lowerText,\n          },\n          lowerTextAttrs\n        ),\n        data: d,\n        offsetY: texts.length === 2 ? LABEL1_OFFSETY : 0,\n        name: 'label',\n      });\n      lowerTextShape.name = 'label'; // 用于事件标记 shapeName\n      /** label2:上部label */\n      if (texts.length === 2) {\n        const topTextShape: any = textGroup.addShape('text', {\n          attrs: mix(\n            {\n              textBaseline: 'bottom',\n              text: texts[1],\n            },\n            textAttrs\n          ),\n          data: d,\n          offsetY: LABEL2_OFFSETY,\n          name: 'label',\n        });\n        topTextShape.name = 'label'; // 用于事件标记 shapeName\n      }\n\n      label.textGroup = textGroup;\n\n      /** 将label分组 */\n      if (anchorPoint.x < center.x) {\n        label._side = 'left';\n        this.halves[0].push(label);\n      } else {\n        label._side = 'right';\n        this.halves[1].push(label);\n      }\n    }\n\n    /** 绘制label */\n    const maxCountForOneSide = Math.floor(height / this.options.lineHeight);\n\n    each(this.halves, (half) => {\n      if (half.length > maxCountForOneSide) {\n        half.splice(maxCountForOneSide, half.length - maxCountForOneSide);\n      }\n\n      half.sort((a, b) => {\n        return a.y - b.y;\n      });\n\n      this._antiCollision(half);\n    });\n    this.view.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.view.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.view.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  protected getDefaultOptions() {\n    return {\n      text: {\n        fill: 'rgba(0, 0, 0, 0.65)',\n        fontSize: 12,\n      },\n      line: {\n        lineWidth: 0.5,\n        stroke: 'rgba(0, 0, 0, 0.45)',\n      },\n      lineHeight: 32,\n      /** distance between label and edge */\n      sidePadding: 20,\n      // anchorSize: 2,\n    };\n  }\n\n  private _antiCollision(half: LabelData[]) {\n    const { coord } = this;\n    const canvasHeight = coord.getHeight();\n    const { center } = coord;\n    const radius = coord.getRadius();\n    const startY = center.y - radius - INFLECTION_OFFSET - this.options.lineHeight;\n    let overlapping = true;\n    let totalH = canvasHeight;\n    let i;\n\n    let maxY = 0;\n    let minY = Number.MIN_VALUE;\n    let maxLabelWidth = 0;\n    const boxes: any[] = half.map((label) => {\n      const labelY = label.y;\n      if (labelY > maxY) {\n        maxY = labelY;\n      }\n      if (labelY < minY) {\n        minY = labelY;\n      }\n\n      const textGroup = label.textGroup;\n      const labelWidth = textGroup.getBBox().width;\n      if (labelWidth >= maxLabelWidth) {\n        maxLabelWidth = labelWidth;\n      }\n\n      return {\n        size: this.options.lineHeight,\n        targets: [labelY - startY],\n      };\n    });\n    if (maxY - startY > totalH) {\n      totalH = maxY - startY;\n    }\n\n    const iteratorBoxed = function (items) {\n      items.forEach((box) => {\n        const target = (Math.min.apply(minY, box.targets) + Math.max.apply(minY, box.targets)) / 2;\n        box.pos = Math.min(Math.max(minY, target - box.size / 2), totalH - box.size);\n      });\n    };\n\n    while (overlapping) {\n      iteratorBoxed(boxes);\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          if (previousBox.pos + previousBox.size > box.pos) {\n            // overlapping\n            previousBox.size += box.size;\n            previousBox.targets = previousBox.targets.concat(box.targets);\n\n            // overflow, shift up\n            if (previousBox.pos + previousBox.size > totalH) {\n              previousBox.pos = totalH - previousBox.size;\n            }\n            boxes.splice(i, 1); // removing box\n            overlapping = true;\n          }\n        }\n      }\n    }\n\n    i = 0;\n    boxes.forEach((b) => {\n      let posInCompositeBox = startY; // middle of the label\n      b.targets.forEach(() => {\n        half[i].y = b.pos + posInCompositeBox + this.options.lineHeight / 2;\n        posInCompositeBox += this.options.lineHeight;\n        i++;\n      });\n    });\n\n    const drawnLabels = [];\n    half.forEach((label) => {\n      const textGroup = this._drawLabel(label);\n      this._drawLabelLine(label, maxLabelWidth, textGroup);\n      drawnLabels.push(textGroup);\n    });\n  }\n\n  private _drawLabel(label: LabelData) {\n    const { coord } = this;\n    const center = coord.getCenter();\n    const radius = coord.getRadius();\n\n    const { y, textGroup } = label;\n    const children = textGroup.get('children');\n    const x_dir = label._side === 'left' ? 1 : -1;\n\n    const textAttrs = {\n      textAlign: label._side === 'left' ? 'right' : 'left',\n      x:\n        label._side === 'left'\n          ? center.x - radius - this.options.sidePadding\n          : center.x + radius + this.options.sidePadding,\n    };\n\n    if (this.options.offsetX) {\n      textAttrs.x += this.options.offsetX * x_dir;\n    }\n\n    children.forEach((child) => {\n      const offsetY = child.get('offsetY');\n      const yPosition = y + offsetY;\n      child.attr(textAttrs);\n      child.attr('y', yPosition);\n    });\n\n    return textGroup;\n  }\n\n  private _drawLabelLine(label: LabelData, maxLabelWidth, container: IGroup): IShape {\n    const _anchor = [label._anchor.x, label._anchor.y];\n    const _inflection = [label._inflection.x, label._inflection.y];\n    const { y, textGroup } = label;\n    if (!textGroup) return;\n    const lastPoint = [label._side === 'left' ? textGroup.getBBox().maxX + 4 : textGroup.getBBox().minX - 4, y];\n\n    let points = [_anchor, _inflection, lastPoint];\n    if (_inflection[1] !== y) {\n      // 展示全部文本文本位置做过调整\n      if (_inflection[1] < y) {\n        // 文本被调整下去了，则添加拐点连接线\n        const point1 = _inflection;\n        const leftPoint = lastPoint[0] + maxLabelWidth + ADJUSTOFFSET;\n        const rightPoint = lastPoint[0] - maxLabelWidth - ADJUSTOFFSET;\n        const point2 = [label._side === 'left' ? leftPoint : rightPoint, _inflection[1]];\n        const point3 = [\n          label._side === 'left' ? lastPoint[0] + maxLabelWidth : lastPoint[0] - maxLabelWidth,\n          lastPoint[1],\n        ];\n\n        points = [_anchor, point1, point2, point3, lastPoint];\n\n        if ((label._side === 'right' && point2[0] < point1[0]) || (label._side === 'left' && point2[0] > point1[0])) {\n          points = [_anchor, point3, lastPoint];\n        }\n      } else {\n        points = [_anchor, [_inflection[0], y], lastPoint];\n      }\n    }\n\n    const path = [];\n    for (let i = 0; i < points.length; i++) {\n      const p = points[i];\n      let starter = 'L';\n      if (i === 0) {\n        starter = 'M';\n      }\n      path.push([starter, p[0], p[1]]);\n    }\n    container.addShape('path', {\n      attrs: {\n        path,\n        lineWidth: this.options.line.lineWidth,\n        stroke: this.options.line.stroke,\n      },\n    });\n\n    // 绘制锚点\n    // container.addShape('circle', {\n    //   attrs: {\n    //     x: _anchor[0],\n    //     y: _anchor[1],\n    //     r: this.config.anchorSize,\n    //     fill,\n    //   },\n    // });\n  }\n\n  private _adjustOptions(config) {\n    if (config.text.fontSize) {\n      config.lineHeight = config.text.fontSize * 3;\n    }\n  }\n}\n"]}