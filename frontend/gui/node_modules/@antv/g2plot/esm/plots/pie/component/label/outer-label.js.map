{"version":3,"file":"outer-label.js","sourceRoot":"","sources":["../../../../../src/plots/pie/component/label/outer-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { IShape, BBox } from '../../../../dependents';\nimport { filter, head, last, map } from '@antv/util';\nimport PieBaseLabel, { LabelItem, PieLabelConfig } from './base-label';\nimport { getEndPoint } from './utils';\n\n// 默认label和element的偏移 16px\nexport const DEFAULT_OFFSET = 16;\n\nexport default class PieOuterLabel extends PieBaseLabel {\n  /** @override 不能大于0 */\n  protected adjustOption(options: PieLabelConfig) {\n    super.adjustOption(options);\n    if (options.offset < 0) {\n      options.offset = 0;\n    }\n  }\n\n  protected getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = theme.label.style;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      offset: 12,\n      style: {\n        ...labelStyle,\n        textBaseline: 'middle',\n      },\n    };\n  }\n\n  /** label 碰撞调整 */\n  protected layout(labels: IShape[], items: LabelItem[], panel: BBox) {\n    const { center } = this.getCoordinate();\n    const leftHalf = filter(labels, (l) => l.attr('x') <= center.x);\n    const rightHalf = filter(labels, (l) => l.attr('x') > center.x);\n    [rightHalf, leftHalf].forEach((half, isLeft) => {\n      this._antiCollision(half, !isLeft, panel);\n    });\n  }\n\n  /** labels 碰撞处理（重点算法） */\n  private _antiCollision(labels: IShape[], isRight: boolean, panelBox: BBox) {\n    const labelHeight = this.getLabelHeight(labels);\n    const { center, radius } = this.getCoordinate();\n    const offset = this.options.offset;\n    const totalR = radius + offset;\n    const totalHeight = Math.min(panelBox.height, Math.max(totalR * 2 + labelHeight * 2, labels.length * labelHeight));\n    const maxLabelsCount = Math.floor(totalHeight / labelHeight);\n    // fix-bug, maxLabelsCount 之后的labels 在非 allowOverlap 不显示（避免出现尾部label展示，而前置label不展示）\n    if (!this.options.allowOverlap) {\n      labels.slice(maxLabelsCount).forEach((label) => {\n        label.get('parent').set('visible', false);\n      });\n    }\n    labels.splice(maxLabelsCount, labels.length - maxLabelsCount);\n\n    // sort by y DESC\n    labels.sort((a, b) => a.getBBox().y - b.getBBox().y);\n    // adjust y position of labels to avoid overlapping\n    let overlapping = true;\n    let i;\n    let maxY = center.y + totalHeight / 2;\n    let minY = center.y - totalHeight / 2;\n    const boxes = labels.map((label) => {\n      const labelBox = label.getBBox();\n      if (labelBox.maxY > maxY) {\n        maxY = Math.min(panelBox.maxY, labelBox.maxY);\n      }\n      if (labelBox.minY < minY) {\n        minY = Math.max(panelBox.minY, labelBox.minY);\n      }\n      return {\n        text: label.attr('text'),\n        size: labelHeight,\n        pos: labelBox.y,\n        targets: [],\n      };\n    });\n    let j = 0;\n    while (j < boxes.length) {\n      if (j === boxes.length - 1) {\n        boxes[j].targets[0] = maxY;\n      } else {\n        boxes[j].targets[0] = boxes[j + 1].pos - boxes[j + 1].size / 2;\n      }\n      j++;\n    }\n    while (overlapping) {\n      boxes.forEach((box) => {\n        const target = last(box.targets);\n        box.pos = Math.max(minY, Math.min(box.pos, target - box.size));\n      });\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          if (previousBox.pos + previousBox.size > box.pos) {\n            // overlapping\n            previousBox.size += box.size;\n            previousBox.targets = previousBox.targets.concat(box.targets);\n            // overflow, shift up\n            const target = last(previousBox.targets);\n            if (previousBox.pos + previousBox.size > target) {\n              previousBox.pos = target - previousBox.size;\n            }\n            boxes.splice(i, 1); // removing box\n            overlapping = true;\n          } else {\n            // 换掉最后一个\n            previousBox.targets.splice(-1, 1, box.pos);\n          }\n        }\n      }\n    }\n\n    i = 0;\n    // step 4: normalize y and adjust x\n    boxes.forEach((b) => {\n      let posInCompositeBox = labelHeight / 2; // middle of the label\n      b.targets.forEach(() => {\n        labels[i].attr('y', b.pos + posInCompositeBox);\n        posInCompositeBox += labelHeight;\n        i++;\n      });\n    });\n\n    // 调整 x 位置在椭圆轨道上\n    const topLabels = [];\n    const bottomLabels = [];\n    labels.forEach((label, idx) => {\n      const anchor = this.arcPoints[idx];\n      if (anchor.angle >= 0 && anchor.angle <= Math.PI) {\n        bottomLabels.push(label);\n      } else {\n        topLabels.push(label);\n      }\n    });\n    [topLabels, bottomLabels].forEach((adjustLabels, isBottom) => {\n      if (!adjustLabels.length) {\n        return;\n      }\n      let ry = isBottom ? last(adjustLabels).getBBox().maxY - center.y : center.y - head(adjustLabels).getBBox().minY;\n      ry = Math.max(totalR, ry);\n      const distance = offset > 4 ? 4 : 0;\n      const maxLabelWidth =\n        Math.max.apply(\n          0,\n          map(labels, (label) => label.getBBox().width)\n        ) +\n        offset +\n        distance;\n      const rx = Math.max(totalR, Math.min((ry + totalR) / 2, center.x - (panelBox.minX + maxLabelWidth)));\n      const rxPow2 = rx * rx;\n      const ryPow2 = ry * ry;\n      adjustLabels.forEach((label, idx) => {\n        const anchor = this.arcPoints[idx];\n        const box = label.getBBox();\n        const boxCenter = { x: box.minX + box.width / 2, y: box.minY + box.height / 2 };\n        const dyPow2 = Math.pow(boxCenter.y - center.y, 2);\n        const endPoint = getEndPoint(center, anchor.angle, radius);\n        const distance_offset = (isRight ? 1 : -1) * distance * 2;\n        if (dyPow2 > ryPow2) {\n          console.warn('异常(一般不会出现)', label.attr('text'));\n          label.attr('x', endPoint.x + distance_offset);\n        } else {\n          // (x - cx)^2 / rx ^ 2 + (y - cy)^2 / ry ^ 2 = 1\n          // 避免 label的 拉线 在 element 上\n          let xPos = center.x + (isRight ? 1 : -1) * Math.sqrt((1 - dyPow2 / ryPow2) * rxPow2);\n          if (\n            (center.x === endPoint.x && boxCenter.y === endPoint.y) ||\n            (center.y === endPoint.y && xPos === endPoint.x)\n          ) {\n            xPos = endPoint.x;\n          } else {\n            // const k1 = (center.y - endPoint.y) / (center.x - endPoint.x);\n            // const k2 = (boxCenter.y - endPoint.y) / (xPos - endPoint.x);\n            // const theta = Math.atan((k1 - k2) / (1 + k1 * k2));\n            // 切角 < 90度（目前的坐标系 无法精准计算切角）\n            // if (Math.cos(theta) > 0 && (!isRight ? xPos > endPoint.x : xPos < endPoint.x)) {\n            //   xPos = endPoint.x;\n            // }\n          }\n          label.attr('x', xPos + distance_offset);\n        }\n      });\n    });\n  }\n\n  /** 获取label height */\n  private getLabelHeight(labels: IShape[]): number {\n    if (!this.options.labelHeight) {\n      return head(labels) ? head(labels).getBBox().height : 14;\n    }\n    return this.options.labelHeight;\n  }\n}\n"]}