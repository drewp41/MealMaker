{"version":3,"file":"inner-label.js","sourceRoot":"","sources":["../../../../../src/plots/pie/component/label/inner-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { IShape } from '../../../../dependents';\nimport { each, clone } from '@antv/util';\nimport PieBaseLabel, { LabelItem, PieLabelConfig } from './base-label';\nimport { getOverlapInfo } from './utils';\nimport { distBetweenPoints } from '../../../../util/math';\n\nexport function percent2Number(value: string): number {\n  const percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n\nexport default class PieInnerLabel extends PieBaseLabel {\n  /** @override 不能大于0 */\n  protected adjustOption(options: PieLabelConfig) {\n    super.adjustOption(options);\n    if (options.offset > 0) {\n      options.offset = 0;\n    }\n  }\n\n  protected adjustItem(item: LabelItem) {\n    item.textAlign = 'middle';\n  }\n\n  /** @override 不绘制拉线 */\n  protected drawLines() {\n    return;\n  }\n\n  protected layout(labels: IShape[], shapeInfos: LabelItem[]) {\n    labels.forEach((label, idx) => {\n      if (idx > 0) {\n        each(labels.slice(0, idx), (prevLabel) => {\n          this.resolveCollision(label, prevLabel, shapeInfos[idx]);\n        });\n      }\n    });\n  }\n\n  protected getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = theme.label.style;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      offset: '-30%',\n      style: {\n        ...labelStyle,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    };\n  }\n\n  /** label 碰撞调整 */\n  protected resolveCollision(label: IShape, prev: IShape, shapeInfo: LabelItem): void {\n    const { center } = this.getCoordinate();\n    const angle = shapeInfo.angle;\n    const box = label.getBBox();\n    const prevBBox = prev.getBBox();\n    const pos = { x: (box.minX + box.maxX) / 2, y: (box.minY + box.maxY) / 2 };\n    // 两种调整方案\n    /** 先偏移 x 方向 -> 再计算 y 位置 */\n    const pos1 = clone(pos);\n    /** 先偏移 y 方向 -> 再计算 x 位置 */\n    const pos2 = clone(pos);\n    // check overlap\n    if (prev.get('id') !== label.get('id')) {\n      const { xOverlap, yOverlap } = getOverlapInfo(box, prevBBox);\n      if (xOverlap) {\n        pos1.x = pos.x + xOverlap;\n        pos1.y = pos.y + Math.tan(angle) * xOverlap;\n      }\n      if (yOverlap) {\n        // fix issue-460\n        let yMover = yOverlap;\n        if (pos.y < center.y) {\n          // 上方label优先往上偏移\n          yMover = yMover < 0 ? yMover : prevBBox.minY - box.maxY;\n        } else {\n          // 下方label优先往下偏移\n          yMover = yMover > 0 ? yMover : prevBBox.maxY - box.minY;\n        }\n        pos2.y = pos.y + yMover;\n        pos2.x = pos.x + yMover / Math.tan(angle);\n      }\n\n      const dist1 = distBetweenPoints(pos, pos1);\n      const dist2 = distBetweenPoints(pos, pos2);\n      const actualPos = dist1 < dist2 ? pos1 : pos2;\n      // 取偏移距离最小的\n      label.attr('x', actualPos.x);\n      label.attr('y', actualPos.y);\n    }\n  }\n}\n"]}