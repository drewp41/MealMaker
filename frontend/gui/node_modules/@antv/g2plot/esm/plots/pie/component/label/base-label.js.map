{"version":3,"file":"base-label.js","sourceRoot":"","sources":["../../../../../src/plots/pie/component/label/base-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, IShape, BBox } from '../../../../dependents';\nimport { transform } from '@antv/matrix-util';\nimport { deepMix, isString } from '@antv/util';\nimport { getEndPoint, getLabelRotate, getAngleByPoint, getOverlapArea, near } from './utils';\nimport { Label, TextStyle } from '../../../../interface/config';\nimport PieLayer from '../../layer';\nimport { getEllipsisText } from './utils/text';\n\n/** label text和line距离 4px */\nexport const CROOK_DISTANCE = 4;\n\nexport function percent2Number(value: string): number {\n  const percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n\n/**\n * 超出panel边界的标签默认隐藏\n */\nfunction checkInPanel(label: IShape, panel: BBox): void {\n  const box = label.getBBox();\n  //  横向溢出 暂不隐藏\n  if (!(panel.y <= box.y && panel.y + panel.height >= box.y + box.height)) {\n    label.get('parent').set('visible', false);\n  }\n}\n\nexport interface LabelItem {\n  x: number;\n  y: number;\n  color: string;\n  origin: object;\n  name: string;\n  angle: number;\n  textAlign: string;\n  textBaseline?: string;\n}\n\nexport interface PieLabelConfig extends Label {\n  visible: boolean;\n  formatter?: (text: string | number | undefined | null, item: any, idx: number, ...extras: any[]) => string;\n  /** whether */\n  adjustPosition?: boolean;\n  /** allow label overlap */\n  allowOverlap?: boolean;\n  autoRotate?: boolean;\n  labelHeight?: number;\n  offset?: number | string;\n  offsetX?: number;\n  offsetY?: number;\n  /** label leader-line */\n  line?: {\n    visible?: boolean;\n    smooth?: boolean;\n    stroke?: string;\n    lineWidth?: number;\n  };\n  style?: TextStyle;\n}\n\nexport default abstract class PieBaseLabel {\n  public options: PieLabelConfig & { offset: number };\n  public destroyed: boolean = false;\n  protected plot: PieLayer;\n  protected coordinateBBox: BBox;\n  protected container: IGroup;\n  /** 圆弧上的锚点 */\n  protected arcPoints: LabelItem[];\n\n  constructor(plot: PieLayer, cfg: PieLabelConfig) {\n    this.plot = plot;\n    this.coordinateBBox = this.plot.view.coordinateBBox;\n    const options = deepMix(this.getDefaultOptions(), cfg, {});\n    this.adjustOption(options);\n    this.options = options;\n    this.init();\n  }\n\n  protected abstract getDefaultOptions();\n  protected abstract layout(labels: IShape[], shapeInfos: LabelItem[], panelBox: BBox);\n  /** 处理标签遮挡问题 */\n  protected adjustOverlap(labels: IShape[], panel: BBox): void {\n    // clearOverlap;\n    for (let i = 1; i < labels.length; i++) {\n      const label = labels[i];\n      let overlapArea = 0;\n      for (let j = i - 1; j >= 0; j--) {\n        const prev = labels[j];\n        // fix: start draw point.x is error when textAlign is right\n        const prevBox = prev.getBBox();\n        const currBox = label.getBBox();\n        // if the previous one is invisible, skip\n        if (prev.get('parent').get('visible')) {\n          overlapArea = getOverlapArea(prevBox, currBox);\n          if (!near(overlapArea, 0)) {\n            label.get('parent').set('visible', false);\n            break;\n          }\n        }\n      }\n    }\n    labels.forEach((label) => checkInPanel(label, panel));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected adjustItem(item: LabelItem): void {\n    return;\n  }\n\n  protected init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.plot.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    // 先清空 再重新渲染（避免双次绘制）\n    this.clear();\n    this.initArcPoints();\n    this.drawTexts();\n    this.drawLines();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  private getFilteredSum() {\n    const { angleField } = this.plot.options;\n    const filteredData = (this.plot.view as any).filteredData || [];\n    return filteredData.reduce((pre, filteredDataItem) => {\n      return pre + filteredDataItem[angleField];\n    }, 0);\n  }\n\n  /** 绘制文本 */\n  protected drawTexts() {\n    const { style, formatter, autoRotate, offsetX, offsetY, adjustPosition, allowOverlap } = this.options;\n    const shapeInfos = this.getItems();\n    const shapes: IShape[] = [];\n    shapeInfos.map((shapeInfo, idx) => {\n      const attrs = deepMix({}, shapeInfo, style);\n      const filteredSum = this.getFilteredSum();\n      const { angleField } = this.plot.options;\n      const percent = shapeInfo.origin[angleField] / filteredSum;\n      const content = formatter\n        ? formatter(\n            shapeInfo.name,\n            {\n              _origin: shapeInfo.origin,\n              percent,\n            },\n            idx\n          )\n        : shapeInfo.name;\n      const itemGroup = this.container.addGroup({ name: 'itemGroup', index: idx });\n      const textShape = itemGroup.addShape('text', {\n        attrs: deepMix({}, attrs, {\n          x: shapeInfo.x + offsetX,\n          y: shapeInfo.y + offsetY,\n          text: content,\n        }),\n      });\n      textShape.set('id', `text-${shapeInfo.name}-${idx}`);\n      shapes.push(textShape);\n    });\n    shapes.forEach((shape) => {\n      const panelBox = this.coordinateBBox;\n      this.adjustText(shape, panelBox);\n    });\n    if (adjustPosition) {\n      this.layout(shapes, shapeInfos, this.coordinateBBox);\n    }\n    if (!allowOverlap) {\n      this.adjustOverlap(shapes, this.coordinateBBox);\n    }\n    shapes.forEach((label, idx) => {\n      if (autoRotate) {\n        this.rotateLabel(label, getLabelRotate(shapeInfos[idx].angle));\n      }\n    });\n  }\n\n  private adjustText(label: IShape, panelBox: BBox) {\n    const box = label.getBBox();\n    let width = box.width;\n    const deltaWidth = 0;\n    if (box.maxX > panelBox.maxX) {\n      width = panelBox.maxX - box.minX;\n    } else if (box.minX < panelBox.minX) {\n      width = box.maxX - panelBox.minX;\n    }\n    if (label.attr('textAlign') === 'left') {\n      label.attr('x', Math.max(box.x - deltaWidth, 0));\n    } else if (label.attr('textAlign') === 'right') {\n      label.attr('x', Math.max(box.maxX - deltaWidth, 0));\n    }\n    if (width !== box.width) {\n      const font = {};\n      ['fontSize', 'fontFamily', 'fontWeight'].forEach((k) => {\n        font[k] = label.attr(k);\n      });\n      const ellipsisTexts = label\n        .attr('text')\n        .split('\\n')\n        .map((t) => getEllipsisText(t, width, font));\n      label.attr('text', ellipsisTexts.join('\\n'));\n    }\n  }\n\n  /** 绘制拉线 */\n  protected drawLines() {\n    if (this.options.line.visible) {\n      const itemGroups = this.container.get('children');\n      const { center } = this.getCoordinate();\n      itemGroups.forEach((labelGroup, idx) => {\n        const label: IShape = labelGroup.get('children')[0];\n        const anchor = this.arcPoints[idx];\n        const inLeft = anchor.x < center.x;\n        // 拉线 和 label 之间的距离\n        const distance = this.options.offset > 4 ? 4 : 0;\n        const path = this.getLinePath(label, anchor, distance);\n        const style = this.options.line;\n        labelGroup.addShape('path', {\n          attrs: {\n            path,\n            stroke: anchor.color,\n            ...style,\n          },\n        });\n        // 由于拉线的存在 label 需要进行偏移\n        label.attr('x', label.attr('x') + (inLeft ? -distance : distance));\n      });\n    }\n  }\n\n  /** 获取label leader-line, 默认 not smooth */\n  private getLinePath(label: IShape, anchor: LabelItem, distance: number): string {\n    const smooth = this.options.line ? this.options.line.smooth : false;\n    const angle = anchor.angle;\n    const { center, radius } = this.getCoordinate();\n    let breakAt = getEndPoint(center, angle, radius + distance);\n    if (distance < 4) {\n      breakAt = anchor;\n    }\n    const inLeft = anchor.x < center.x;\n    const box = label.getBBox();\n    const labelPosition = { x: inLeft ? box.maxX : box.minX, y: box.y + box.height / 2 };\n    const smoothPath = [\n      'C', // soft break\n      // 1st control point (of the curve)\n      labelPosition.x +\n        // 4 gives the connector a little horizontal bend\n        (inLeft ? 1 : -1) * (distance < 4 ? distance / 2 : 4),\n      labelPosition.y, //\n      2 * breakAt.x - anchor.x, // 2nd control point\n      2 * breakAt.y - anchor.y, //\n      breakAt.x, // end of the curve\n      breakAt.y, //\n    ];\n    const straightPath = ['L', /** pointy break */ breakAt.x, breakAt.y];\n    const linePath = smooth ? smoothPath : straightPath;\n    const path = ['M', labelPosition.x, labelPosition.y].concat(linePath).concat('L', anchor.x, anchor.y);\n\n    return path.join(',');\n  }\n\n  protected getGeometry() {\n    return this.plot.view.geometries[0];\n  }\n\n  protected getCoordinate() {\n    const coordinate = this.getGeometry().coordinate;\n    const center = coordinate.getCenter();\n    // @ts-ignore\n    const radius = coordinate.getRadius();\n    const startAngle = coordinate.startAngle;\n    return { center, radius, startAngle };\n  }\n\n  protected adjustOption(options: PieLabelConfig): void {\n    let offset = options.offset;\n    const { radius } = this.getCoordinate();\n    if (isString(offset)) {\n      offset = radius * percent2Number(offset);\n    }\n    options.offset = offset;\n  }\n\n  private rotateLabel(label: IShape, angle): void {\n    const x = label.attr('x');\n    const y = label.attr('y');\n    const matrix = transform(label.getMatrix(), [\n      ['t', -x, -y],\n      ['r', angle],\n      ['t', x, y],\n    ]);\n    label.setMatrix(matrix);\n  }\n\n  private getItems(): LabelItem[] {\n    const { offset } = this.options;\n    const { center, radius } = this.getCoordinate();\n    const items = this.arcPoints.map((anchor) => {\n      const point = getEndPoint(center, anchor.angle, radius + offset);\n      const item = { ...anchor, ...point };\n      this.adjustItem(item);\n      return item;\n    });\n    return items;\n  }\n\n  // 初始化圆弧上锚点\n  private initArcPoints(): void {\n    const { angleField } = this.plot.options;\n    const elements = this.getGeometry().elements;\n    const coord = this.getCoordinate();\n    const { center, radius } = coord;\n    let { startAngle } = this.getCoordinate();\n    const scale = this.getGeometry().scales[angleField];\n    const anchors = elements.map((ele) => {\n      const origin = ele.shape.get('origin');\n      const color = origin.color;\n      const originData = origin.data[0] || origin.data;\n      const endAngle = startAngle + Math.PI * 2 * scale.scale(originData[angleField]);\n      const angle = (startAngle + endAngle) / 2;\n      const point = getEndPoint(center, angle, radius);\n      startAngle = endAngle;\n      const name = `${originData[angleField]}`;\n      const textAlign = point.x > center.x ? 'left' : 'right';\n\n      return {\n        x: point.x,\n        y: point.y,\n        color,\n        name,\n        origin: originData,\n        // 实际的角度\n        angle: getAngleByPoint(this.getGeometry().coordinate, point),\n        textAlign,\n      };\n    });\n    this.arcPoints = anchors;\n  }\n}\n"]}