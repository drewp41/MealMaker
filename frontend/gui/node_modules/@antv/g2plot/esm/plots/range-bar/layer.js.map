{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/range-bar/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport BaseBarLayer from '../bar/layer';\nimport { BarViewConfig } from '../bar/interface';\nimport RangeBarLabel, { RangeBarLabelConfig } from './component/label';\nimport { setShapeCache } from './animation';\n\nexport interface RangeBarViewConfig extends BarViewConfig {\n  label?: RangeBarLabelConfig;\n}\n\nexport interface RangeBarLayerConfig extends RangeBarViewConfig, LayerConfig {}\n\nexport default class RangeBarLayer extends BaseBarLayer<RangeBarLayerConfig> {\n  public static getDefaultOptions(): Partial<RangeBarViewConfig> {\n    return deepMix(\n      super.getDefaultOptions(),\n      {\n        label: {\n          visible: true,\n          position: 'outer',\n        },\n        xAxis: {\n          visible: true,\n          autoRotateTitle: false,\n          grid: {\n            visible: true,\n          },\n          line: {\n            visible: false,\n          },\n          tickLine: {\n            visible: false,\n          },\n          label: {\n            visible: true,\n            autoRotate: true,\n            autoHide: true,\n          },\n          title: {\n            visible: true,\n            offset: 12,\n          },\n        },\n        yAxis: {\n          visible: true,\n          autoRotateTitle: true,\n          grid: {\n            visible: false,\n          },\n          line: {\n            visible: true,\n          },\n          tickLine: {\n            visible: true,\n          },\n          label: {\n            visible: true,\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            visible: false,\n            offset: 12,\n          },\n        },\n      },\n      {}\n    );\n  }\n\n  public type: string = 'rangeBar';\n\n  public afterRender() {\n    this.renderLabel();\n    // 为更新动画缓存shape\n    const shapeCaches = [];\n    const geoms = this.view.geometries;\n    each(geoms, (geom) => {\n      const elements = geom.elements;\n      each(elements, (ele) => {\n        shapeCaches.push(ele.shape);\n      });\n    });\n    setShapeCache(shapeCaches);\n    super.afterRender();\n  }\n\n  protected renderLabel() {\n    if (this.options.label && this.options.label.visible) {\n      const label = new RangeBarLabel({\n        view: this.view,\n        plot: this,\n        ...this.options.label,\n      });\n      label.render();\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    this.bar.animate = {\n      appear: {\n        animation: 'clipInFromCenter',\n        duration: 600,\n      },\n      update: {\n        animation: 'updateFromCenter',\n        duration: 600,\n      },\n    };\n  }\n}\n\nregisterPlotType('rangeBar', RangeBarLayer);\n"]}