{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/donut/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { modifyCSS } from '@antv/dom-util';\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport PieLayer, { PieViewConfig } from '../pie/layer';\nimport * as EventParser from './event';\nimport { LooseMap } from '../../interface/types';\nimport RingStatistic from './component/ring-statistic';\n\nexport interface DonutViewConfig extends PieViewConfig {\n  innerRadius?: number;\n  /** 指标卡用于显示总计值和各项数据 */\n  statistic?: {\n    visible: boolean;\n    /** 指标卡 总计值 标签 */\n    totalLabel: string;\n    /** 触发显示的事件 */\n    triggerOn: 'mouseenter';\n    /** 触发隐藏的事件 */\n    triggerOff: 'mouseleave';\n    content?: string;\n    htmlContent?: (...args: any) => string;\n  };\n}\n\nexport interface DonutLayerConfig extends DonutViewConfig, LayerConfig {}\n\nconst G2_GEOM_MAP = {\n  ring: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'ring',\n};\n\nexport default class DonutLayer<T extends DonutLayerConfig = DonutLayerConfig> extends PieLayer<T> {\n  public static centralId = 0;\n  public type: string = 'donut';\n  private statistic: any; // 保存指标卡实例用于响应交互\n  private statisticClass: string; // 指标卡的class,用于重点文本容器的唯一标识，一个页面多个环图时，共用 class 交互会有问题。\n\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      radius: 0.8,\n      innerRadius: 0.64,\n      statistic: {\n        visible: true,\n        totalLabel: '总计',\n        triggerOn: 'mouseenter',\n        triggerOff: 'mouseleave',\n      },\n    });\n  }\n\n  public beforeInit() {\n    super.beforeInit();\n    DonutLayer.centralId++;\n    this.statisticClass = `statisticClassId${DonutLayer.centralId}`;\n    this.adjustLabelDefaultOptions();\n    if (this.options.statistic.visible && this.options.statistic.triggerOn) {\n      this.options.tooltip.visible = false;\n    }\n  }\n\n  public afterRender() {\n    const container = this.canvas.get('container');\n    if (this.statistic) {\n      container.removeChild(this.statistic.wrapperNode);\n    }\n    /**环图中心文本 */\n    if (this.options.statistic && this.options.statistic.visible) {\n      const container = this.canvas.get('container');\n      modifyCSS(container, { position: 'relative' });\n      this.statistic = new RingStatistic({\n        container,\n        view: this.view,\n        plot: this,\n        statisticClass: this.statisticClass,\n        ...this.options.statistic,\n      });\n      this.statistic.render();\n      /**响应交互 */\n      if (this.options.statistic.triggerOn) {\n        this.statistic.triggerOn();\n      }\n    }\n    super.afterRender();\n  }\n\n  public destroy() {\n    if (this.statistic) {\n      this.statistic.destroy();\n    }\n    super.destroy();\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig: any = {\n      type: 'theta',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius,\n      },\n    };\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  /** @override 调整 label 默认 options */\n  protected adjustLabelDefaultOptions() {\n    const labelConfig = this.options.label;\n    if (labelConfig && labelConfig.type === 'inner') {\n      const labelStyleConfig = (labelConfig.style || {}) as LooseMap;\n      if (!labelStyleConfig.textAlign) {\n        labelStyleConfig.textAlign = 'center';\n      }\n      labelConfig.style = labelStyleConfig;\n      if (!labelConfig.offset) {\n        labelConfig.offset = `${((this.options.innerRadius - 1) / 2) * 100}%`;\n      }\n    }\n  }\n}\n\nregisterPlotType('donut', DonutLayer);\n"]}