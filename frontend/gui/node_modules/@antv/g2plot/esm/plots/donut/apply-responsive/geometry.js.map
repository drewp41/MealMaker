{"version":3,"file":"geometry.js","sourceRoot":"","sources":["../../../../src/plots/donut/apply-responsive/geometry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,aAAa,MAAM,6CAA6C,CAAC;AACxE,OAAO,UAAU,MAAM,qCAAqC,CAAC;AAG7D,MAAM,CAAC,OAAO,UAAU,cAAc,CAAC,KAAgB;IACrD,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;IAC5B,IAAM,eAAe,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACnD,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAC9B,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,IAAA,mBAAK,EAAE,qBAAM,CAAW;IAChC,YAAY;IACZ,IAAM,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC;QACtB,MAAM,QAAA;QACN,KAAK,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;QACvC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE;KACvD,CAAC,CAAC;IACH,IAAM,MAAM,GAAG;QACb,MAAM,QAAA;QACN,KAAK,OAAA;KACN,CAAC;IACF,IAAM,KAAK,GAAG,IAAI,aAAa,CAAC;QAC9B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;KAC3C,CAAC,CAAC;IAEK,IAAA,8CAAW,CAA0B;IAC7C,IAAI,UAAU,CAAC;QACb,KAAK,OAAA;QACL,WAAW,aAAA;QACX,MAAM,QAAA;QACN,IAAI,EAAE,KAAK;QACX,KAAK,EAAE;YACL,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,CAAC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { getCoordinate } from '@antv/coord';\nimport VariableNodes from '../../../util/responsive/node/variable-node';\nimport Responsive from '../../../util/responsive/responsive';\nimport RingLayer from '../layer';\n\nexport default function responsiveRing(layer: RingLayer) {\n  const props = layer.options;\n  const responsiveTheme = layer.getResponsiveTheme();\n  const padding = props.padding;\n  const radius = props.radius ? props.radius : 1;\n  const { width, height } = layer;\n  /** 创建坐标系 */\n  const polar = getCoordinate('polar');\n  const coord = new polar({\n    radius,\n    start: { x: padding[3], y: padding[0] },\n    end: { x: width - padding[1], y: height - padding[2] },\n  });\n  const region = {\n    radius,\n    coord,\n  };\n  const nodes = new VariableNodes({\n    nodes: [{ name: 'innerRadius', value: 0 }],\n  });\n\n  const { constraints } = responsiveTheme.ring;\n  new Responsive({\n    nodes,\n    constraints,\n    region,\n    plot: layer,\n    onEnd: () => {\n      props.innerRadius = nodes.nodes[0].value;\n    },\n  });\n}\n"]}