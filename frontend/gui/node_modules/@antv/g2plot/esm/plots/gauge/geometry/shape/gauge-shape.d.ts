import { GaugeViewConfig } from '../../options';
interface PointerStyle {
    /** 指针颜色 */
    fill: string;
    /** 指针粗细 */
    thickness: number;
    /** 指针长度  */
    radius: number;
}
interface AxisStyle {
    /** 数目 */
    amount: number;
    /** 偏移量 */
    offset: number;
    /** 刻度线长度 */
    length: number;
    /** 刻度线厚度 */
    thickness: number;
    /** 刻度线颜色 */
    color: string;
}
interface RingStyle {
    /** 环高亮颜色 */
    color: string;
    /** 环底色 */
    background: string;
    /** 圆环粗细  */
    thickness: number;
    /** 圆环半径  */
    radius: number;
    /** 角度  */
    angle: number;
    /** 刻度线样式 */
    axis: AxisStyle;
}
/**
 * 仪表盘指针图形
 * 指针主体由梯形和一大一小圆形组成，
 * 中心处由灰色圆底和小白圆加以装饰
 */
export declare class GaugeShape {
    uid: any;
    ringRadius: number;
    center: any;
    group: any;
    options: GaugeViewConfig;
    ringStyle: RingStyle;
    pointerStyle: PointerStyle;
    type: string;
    constructor(uid: any);
    setOption(type: any, options: GaugeViewConfig, pointerStyle: PointerStyle, ringStyle: RingStyle): void;
    render(): void;
}
export {};
