{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/gauge/layer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author linhuiw\n * @description 仪表盘 layer\n */\nimport { deepMix, uniqueId } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer from '../../base/view-layer';\nimport { ElementOption } from '../../interface/config';\nimport { extractScale } from '../../util/scale';\nimport { GaugeViewConfig } from './interface';\nimport { GaugeShape } from './geometry/shape/gauge-shape';\nimport * as EventParser from './event';\n\nexport interface GaugeLayerConfig extends GaugeViewConfig, LayerConfig {}\n\nexport default class GaugeLayer<T extends GaugeLayerConfig = GaugeLayerConfig> extends ViewLayer<T> {\n  data: [];\n\n  gaugeShape: any;\n\n  options: any;\n\n  constructor(props) {\n    super(props);\n  }\n\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      startAngle: -7 / 6,\n      endAngle: 1 / 6,\n      rangeBackgroundStyle: {\n        fill: '#f0f0f0',\n      },\n      rangeSize: 24,\n      statistic: {\n        position: ['50%', '80%'],\n      },\n      axis: {\n        visible: true,\n        offset: -10,\n        tickCount: 21,\n        subTickCount: 4,\n        tickLine: {\n          visible: true,\n          length: 5,\n          style: {\n            stroke: '#aaa',\n            lineWidth: 2,\n          },\n        },\n        label: {\n          visible: true,\n          style: {\n            fill: '#aaa',\n            fontSize: 16,\n            textAlign: 'center',\n            textBaseline: 'middle',\n          },\n        },\n      },\n      pivot: {\n        visible: true,\n        thickness: 6,\n        pin: {\n          visible: true,\n          size: 2,\n          style: {\n            fill: '#2E364B',\n          },\n        },\n        base: {\n          visible: true,\n          style: {\n            fill: '#EEEEEE',\n          },\n        },\n        pointer: {\n          visible: true,\n          style: {\n            fill: '#CFCFCF',\n          },\n        },\n      },\n    });\n  }\n\n  public type: string = 'gauge';\n\n  public init() {\n    const { value, range } = this.options;\n    const rangeSorted = (range || []).map((d: number) => +d).sort((a: number, b: number) => a - b);\n\n    const { min = rangeSorted[0], max = rangeSorted[rangeSorted.length - 1], format = (d) => `${d}` } = this.options;\n\n    const valueText = format(value);\n    //const styleMix = this.getStyleMix();\n    //this.options.styleMix = styleMix;\n    this.options.data = [{ value: value || 0 }];\n    this.options.valueText = valueText;\n    this.options.min = min;\n    this.options.max = max;\n    this.options.format = format;\n    this.initG2Shape();\n    super.init();\n  }\n\n  /**\n   * 绘制指针\n   */\n  protected initG2Shape() {\n    this.gaugeShape = new GaugeShape(uniqueId());\n    this.gaugeShape.setOption(\n      this.type,\n      deepMix({}, this.options, {\n        radius: 0.6,\n        angle: 240,\n        textPosition: '100%',\n      })\n    );\n    this.gaugeShape.render();\n  }\n\n  protected geometryParser(): string {\n    return 'gauge';\n  }\n\n  protected scale() {\n    const { min, max, format } = this.options;\n    const scales = {\n      value: {},\n    };\n    extractScale(scales.value, {\n      min,\n      max,\n      minLimit: min,\n      maxLimit: max,\n      nice: true,\n      formatter: format,\n      // 自定义 tick step\n      tickInterval: 20,\n    });\n    // @ts-ignore\n    this.setConfig('scales', scales);\n    super.scale();\n  }\n\n  protected coord() {\n    const coordConfig: any = {\n      type: 'polar',\n      cfg: {\n        radius: 1,\n        startAngle: this.options.startAngle * Math.PI,\n        endAngle: this.options.endAngle * Math.PI,\n      },\n    };\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected axis() {\n    const { axis } = this.options;\n\n    const axesConfig: any = {\n      value: {\n        line: null,\n        grid: null,\n        tickLine: null,\n      },\n    };\n    let offsetValue;\n    if (axis.offset < 0) {\n      offsetValue = axis.offset - this.options.rangeSize - axis.tickLine.length;\n    } else {\n      offsetValue = axis.offset + axis.tickLine.length;\n    }\n    if (axis.label.visible) {\n      axesConfig.value.label = {\n        offset: offsetValue,\n        textStyle: axis.label.style,\n        autoRotate: true,\n      };\n    } else {\n      axesConfig.value.label = {\n        style: {\n          opacity: 0,\n        },\n      };\n    }\n\n    axesConfig['1'] = false;\n    this.setConfig('axes', axesConfig);\n  }\n\n  protected addGeometry() {\n    const pointerColor = this.options.pivot.pointer.style.fill || this.theme.defaultColor;\n\n    const pointer: ElementOption = {\n      type: 'point',\n      position: {\n        fields: ['value', '1'],\n      },\n      shape: {\n        values: ['gauge'],\n      },\n      color: {\n        values: [pointerColor],\n      },\n    };\n\n    this.setConfig('geometry', pointer);\n  }\n\n  protected annotation() {\n    const { statistic } = this.options;\n    const annotationConfigs = [];\n    // @ts-ignore\n    if (statistic && statistic.visible) {\n      const statistics = this.renderStatistic();\n      annotationConfigs.push(statistics);\n    }\n    this.setConfig('annotations', annotationConfigs);\n  }\n\n  protected renderStatistic() {\n    const containerSize = Math.max(this.options.width, this.options.height) / 20;\n    const { statistic } = this.options;\n    const text = {\n      type: 'text',\n      content: statistic.text,\n      top: true,\n      position: statistic.position,\n      style: {\n        fill: statistic.color,\n        fontSize: statistic.size ? statistic.size : containerSize * 1.2,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    };\n    return text;\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n}\n\nregisterPlotType('gauge', GaugeLayer);\n"]}