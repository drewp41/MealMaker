{"version":3,"file":"legend.js","sourceRoot":"","sources":["../../../../src/plots/density-heatmap/components/legend.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAE3D,OAAO,IAAI,MAAM,oBAAoB,CAAC;AAGtC,IAAM,YAAY,GAAG,CAAC,CAAC;AACvB,IAAM,cAAc,GAAG,CAAC,CAAC;AACzB,IAAM,gBAAgB,GAAG,GAAG,CAAC;AAoB7B;IAeE,uBAAY,GAAmB;QAXxB,cAAS,GAAY,KAAK,CAAC;QAQxB,eAAU,GAAQ,EAAE,CAAC;QAI7B,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,MAAM,EAAE;YAC/D,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SACxC;QACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,EAAE,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,4BAAI,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC9E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAClF,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IAEM,8BAAM,GAAb;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAA,oBAA8B,EAA5B,YAAG,EAAE,YAAuB,CAAC;QAC7B,IAAA,uCAAK,CAA+B;QAC5C,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,4BAAI,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,4BAAI,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,6BAAK,GAAZ;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;IACH,CAAC;IAEM,+BAAO,GAAd;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,+BAAO,GAAd;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7C,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;IACzE,CAAC;IAES,sCAAc,GAAxB,UAAyB,GAAG,EAAE,GAAG,EAAE,MAAM;QAAzC,iBAwEC;QAvEC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC/C,IAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACpD,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3C,IAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9C,SAAS;QACT,IAAI,CAAC,UAAU,EAAE,UAAC,CAAC,EAAE,CAAC;YACpB,IAAM,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;YACzB,4BAA4B;YAC5B,IAAM,UAAU,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YAChF,IAAM,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC3C,KAAK,EAAE;oBACL,CAAC,EAAE,CAAC;oBACJ,CAAC,GAAA;oBACD,KAAK,EAAE,SAAS;oBAChB,MAAM,EAAE,UAAU;oBAClB,IAAI,EAAE,CAAC;oBACP,OAAO,EAAE,cAAc;oBACvB,MAAM,EAAE,SAAS;iBAClB;gBACD,IAAI,EAAE,QAAQ;aACf,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC7B,IAAM,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAChD,KAAI,CAAC,UAAU,CAAI,UAAU,CAAC,IAAI,SAAI,UAAU,CAAC,EAAI,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;YAC7F,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACjC,KAAK,aACH,IAAI,EAAE;wBACJ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;wBACxB,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,GAAG,UAAU,CAAC;qBACjC,IACE,KAAI,CAAC,OAAO,CAAC,aAAa,CAC9B;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,aAAa;QACb,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9B,KAAK,aACH,IAAI,EAAE,GAAG,EACT,CAAC,EAAE,SAAS,GAAG,CAAC,EAChB,CAAC,EAAE,CAAC,YAAY,EAChB,SAAS,EAAE,QAAQ,EACnB,YAAY,EAAE,QAAQ,IACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAC3B;YACD,IAAI,EAAE,cAAc;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9B,KAAK,sBACH,IAAI,EAAE,GAAG,EACT,CAAC,EAAE,SAAS,GAAG,CAAC,EAChB,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,YAAY,EAC7B,SAAS,EAAE,QAAQ,EACnB,YAAY,EAAE,KAAK,IAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,KAC1B,IAAI,EAAE,cAAc,GACrB;SACF,CAAC,CAAC;QACH,QAAQ;QACR,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE;YACjC,KAAK,aACH,IAAI,EAAE;oBACJ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;oBACX,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBACpB,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;oBAC9B,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;oBACrB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;iBACZ,IACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAES,wCAAgB,GAA1B,UAA2B,GAAG,EAAE,GAAG,EAAE,MAAM;QAA3C,iBAqEC;QApEC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7C,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACpD,IAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9C,SAAS;QACT,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC;YAChB,IAAM,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;YACxB,4BAA4B;YAC5B,IAAM,UAAU,GAAG,EAAE,IAAI,EAAE,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACpE,IAAM,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC3C,KAAK,EAAE;oBACL,CAAC,GAAA;oBACD,CAAC,EAAE,CAAC;oBACJ,KAAK,EAAE,SAAS;oBAChB,MAAM,EAAE,UAAU;oBAClB,IAAI,EAAE,CAAC;oBACP,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,SAAS;iBAClB;gBACD,IAAI,EAAE,QAAQ;aACf,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC7B,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACjC,KAAK,aACH,IAAI,EAAE;wBACJ,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,CAAC;wBACvB,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,EAAE,UAAU,CAAC;qBACjC,IACE,KAAI,CAAC,OAAO,CAAC,aAAa,CAC9B;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,aAAa;QACb,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9B,KAAK,sBACH,IAAI,EAAE,GAAG,EACT,CAAC,EAAE,CAAC,YAAY,EAChB,CAAC,EAAE,UAAU,GAAG,CAAC,IACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,KAC1B,SAAS,EAAE,OAAO,EAClB,YAAY,EAAE,QAAQ,GACvB;YACD,IAAI,EAAE,cAAc;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9B,KAAK,aACH,IAAI,EAAE,GAAG,EACT,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,YAAY,EAC5B,CAAC,EAAE,UAAU,GAAG,CAAC,EACjB,SAAS,EAAE,MAAM,EACjB,YAAY,EAAE,QAAQ,IACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAC3B;YACD,IAAI,EAAE,cAAc;SACrB,CAAC,CAAC;QACH,QAAQ;QACR,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE;YACjC,KAAK,aACH,IAAI,EAAE;oBACJ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;oBACX,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBACpB,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;oBAC9B,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;oBACrB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;iBACZ,IACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAES,iCAAS,GAAnB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YACvD,OAAO,UAAU,CAAC;SACnB;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAES,uCAAe,GAAzB;QACE,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;YACxB,IAAA,uCAAK,CAA+B;YAC5C,OAAO,KAAK,GAAG,GAAG,CAAC;SACpB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,wCAAgB,GAA1B;QACE,IAAI,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;YACtB,IAAA,yCAAM,CAA+B;YAC7C,OAAO,MAAM,GAAG,GAAG,CAAC;SACrB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,oCAAY,GAAtB;QAAA,iBA4CC;QA3CS,IAAA,oDAAQ,CAAsC;QACtD,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAE,KAAK;gBACvB,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,UAAU,EAAE;oBACzC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC9D;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAC1C,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO;QACP,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;YAC3B,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACjB;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YACnC,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SAC1C;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACpC,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;YAClC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACjB;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YACnC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SACxD;QACD,OAAO;QACP,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC7B,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SAC5C;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;YACjC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SACnC;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACpC,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACpC;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;YACjC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACjB;aAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACpC,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SAC5C;QAED,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAES,yCAAiB,GAA3B;QACE,OAAO;YACL,IAAI,EAAE;gBACJ,KAAK,EAAE;oBACL,QAAQ,EAAE,EAAE;oBACZ,IAAI,EAAE,qBAAqB;iBAC5B;aACF;YACD,aAAa,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,MAAM,EAAE,qBAAqB;aAC9B;SACF,CAAC;IACJ,CAAC;IAES,sCAAc,GAAxB;QACE,OAAO;YACL,IAAI,EAAE;gBACJ,KAAK,EAAE;oBACL,QAAQ,EAAE,EAAE;oBACZ,IAAI,EAAE,2BAA2B;iBAClC;aACF;YACD,aAAa,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,MAAM,EAAE,2BAA2B;aACpC;SACF,CAAC;IACJ,CAAC;IAES,sCAAc,GAAxB;QAAA,iBAwCC;QAvCS,IAAA,iDAAU,CAA+B;QACjD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,EAAE;YACpB,IAAA,kBAAM,CAAQ;YACtB,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;gBACnC,IAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtC,IAAM,UAAU,GAAM,UAAU,CAAC,IAAI,SAAI,UAAU,CAAC,EAAI,CAAC;gBACzD,IAAM,YAAY,GAAG,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACjD,IAAI,YAAY,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAClC,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC;oBAC/B,MAAM,CAAC,WAAW,EAAE,CAAC;oBACrB,MAAM,CAAC,OAAO,CACZ;wBACE,OAAO,EAAE,gBAAgB;qBAC1B,EACD,GAAG,CACJ,CAAC;iBACH;qBAAM;oBACL,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC;oBAC7B,MAAM,CAAC,WAAW,EAAE,CAAC;oBACrB,MAAM,CAAC,OAAO,CACZ;wBACE,OAAO,EAAE,cAAc;qBACxB,EACD,GAAG,CACJ,CAAC;iBACH;gBACD,IAAM,YAAY,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;gBAC5C,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;oBACnC,sCAAsC;oBACtC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;wBAC1B,GAAG,EAAE,KAAI,CAAC,UAAU,CAAC,GAAG;wBACxB,GAAG,EAAE,KAAI,CAAC,UAAU,CAAC,GAAG;wBACxB,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI;qBACpB,CAAC,CAAC;oBACV,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;iBACpB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAES,uCAAe,GAAzB;QACE,IAAM,YAAY,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,CAAC;YACtB,IAAI,CAAC,CAAC,IAAI,IAAI,QAAQ,EAAE;gBACtB,YAAY,CAAC,IAAI,OAAjB,YAAY,EAAS,CAAC,CAAC,IAAI,EAAE;aAC9B;QACH,CAAC,CAAC,CAAC;QACH,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,WAAW;IACD,oCAAY,GAAtB,UAAuB,KAAK;QAC1B,IAAM,KAAK,GAAG,EAAE,CAAC;QACX,IAAA,8BAAgD,EAA9C,0BAAU,EAAE,cAAkC,CAAC;QACvD,IAAI,CAAC,IAAI,EAAE,UAAC,CAAC;YACX,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE,EAAE;gBAC3C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACf;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,sCAAc,GAAtB,UAAuB,QAAQ;QAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE;YACjC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YACrD,OAAO,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;YAClC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YAC/C,OAAO,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SACvB;QACD,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAEO,iCAAS,GAAjB;QACE,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,IAAI;YAC9B,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC3B,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,oBAAC;AAAD,CAAC,AAzZD,IAyZC","sourcesContent":["import { each, isArray, deepMix, clone } from '@antv/util';\nimport { View, IGroup } from '../../../dependents';\nimport BBox from '../../../util/bbox';\nimport { LegendPosition } from '../../../interface/config';\n\nconst LABEL_MARGIN = 4;\nconst ACTIVE_OPACITY = 1;\nconst DEACTIVE_OPACITY = 0.1;\n\nexport interface HeatmapLegendConfig {\n  visible?: boolean;\n  position?: LegendPosition;\n  width?: number;\n  height?: number;\n  text?: {\n    style?: any;\n    formatter?: () => string;\n  };\n  gridlineStyle?: any;\n  triggerOn?: string;\n}\n\nexport interface IHeatmapLegend extends HeatmapLegendConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class HeatmapLegend {\n  public options: IHeatmapLegend;\n  public container: IGroup;\n  public afterRender: boolean;\n  public destroyed: boolean = false;\n  protected view: View;\n  protected layout: string;\n  protected width: number;\n  protected height: number;\n  protected position: string;\n  protected x: number;\n  protected y: number;\n  protected dataSlides: any = {};\n  protected colorScale: any;\n\n  constructor(cfg: IHeatmapLegend) {\n    let defaultOptions = this.getDefaultOptions();\n    if (cfg.plot.options.theme && cfg.plot.options.theme === 'dark') {\n      defaultOptions = this.getDarkOptions();\n    }\n    this.options = deepMix({}, defaultOptions, cfg);\n    this.view = this.options.view;\n    this.afterRender = true;\n    this.init();\n  }\n\n  public init() {\n    this.layout = this.getLayout();\n    this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n    this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n    const plotContainer = this.options.plot.container;\n    this.container = plotContainer.addGroup();\n  }\n\n  public render() {\n    const scales = this.getScales();\n    const colorField = this.options.plot.options.colorField;\n    this.colorScale = scales[colorField];\n    const { min, max } = this.colorScale;\n    const { color } = this.options.plot.options;\n    if (this.layout === 'horizontal') {\n      this.renderHorizontal(min, max, color);\n    } else {\n      this.renderVertical(min, max, color);\n    }\n    this.legendLayout();\n    this.addInteraction();\n    this.options.plot.canvas.draw();\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.options.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.options.plot.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    const origin_bbox = this.container.getBBox();\n    return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n  }\n\n  protected renderVertical(min, max, colors) {\n    const gridWidth = this.width;\n    const gridHeight = this.height / colors.length;\n    const gridLineContainer = this.container.addGroup();\n    const gridColors = clone(colors).reverse();\n    const valueStep = (max - min) / colors.length;\n    // 绘制色彩格子\n    each(gridColors, (c, i) => {\n      const y = gridHeight * i;\n      // 记录每个grid代表的区间信息用于legend交互\n      const appendInfo = { to: max - valueStep * i, from: max - valueStep * (i + 1) };\n      const rect = this.container.addShape('rect', {\n        attrs: {\n          x: 0,\n          y,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: ACTIVE_OPACITY,\n          cursor: 'pointer',\n        },\n        name: 'legend',\n      });\n      rect.set('info', appendInfo);\n      const dataSlide = this.getDataSlide(appendInfo);\n      this.dataSlides[`${appendInfo.from}-${appendInfo.to}`] = { mode: 'active', data: dataSlide };\n      gridLineContainer.addShape('path', {\n        attrs: {\n          path: [\n            ['M', 0, y + gridHeight],\n            ['L', gridWidth, y + gridHeight],\n          ],\n          ...this.options.gridlineStyle,\n        },\n      });\n    });\n    // 绘制两边的label\n    this.container.addShape('text', {\n      attrs: {\n        text: max,\n        x: gridWidth / 2,\n        y: -LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'bottom',\n        ...this.options.text.style,\n      },\n      name: 'legend-label',\n    });\n    this.container.addShape('text', {\n      attrs: {\n        text: min,\n        x: gridWidth / 2,\n        y: this.height + LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'top',\n        ...this.options.text.style,\n        name: 'legend-label',\n      },\n    });\n    // 绘制包围线\n    gridLineContainer.addShape('path', {\n      attrs: {\n        path: [\n          ['M', 0, 0],\n          ['L', this.width, 0],\n          ['L', this.width, this.height],\n          ['L', 0, this.height],\n          ['L', 0, 0],\n        ],\n        ...this.options.gridlineStyle,\n      },\n    });\n  }\n\n  protected renderHorizontal(min, max, colors) {\n    const gridWidth = this.width / colors.length;\n    const gridHeight = this.height;\n    const gridLineContainer = this.container.addGroup();\n    const valueStep = (max - min) / colors.length;\n    // 绘制色彩格子\n    each(colors, (c, i) => {\n      const x = gridWidth * i;\n      // 记录每个grid代表的区间信息用于legend交互\n      const appendInfo = { from: valueStep * i, to: valueStep * (i + 1) };\n      const rect = this.container.addShape('rect', {\n        attrs: {\n          x,\n          y: 0,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: 0.8,\n          cursor: 'pointer',\n        },\n        name: 'legend',\n      });\n      rect.set('info', appendInfo);\n      gridLineContainer.addShape('path', {\n        attrs: {\n          path: [\n            ['M', x + gridWidth, 0],\n            ['L', x + gridWidth, gridHeight],\n          ],\n          ...this.options.gridlineStyle,\n        },\n      });\n    });\n    // 绘制两边的label\n    this.container.addShape('text', {\n      attrs: {\n        text: min,\n        x: -LABEL_MARGIN,\n        y: gridHeight / 2,\n        ...this.options.text.style,\n        textAlign: 'right',\n        textBaseline: 'middle',\n      },\n      name: 'legend-label',\n    });\n    this.container.addShape('text', {\n      attrs: {\n        text: max,\n        x: this.width + LABEL_MARGIN,\n        y: gridHeight / 2,\n        textAlign: 'left',\n        textBaseline: 'middle',\n        ...this.options.text.style,\n      },\n      name: 'legend-label',\n    });\n    // 绘制包围线\n    gridLineContainer.addShape('path', {\n      attrs: {\n        path: [\n          ['M', 0, 0],\n          ['L', this.width, 0],\n          ['L', this.width, this.height],\n          ['L', 0, this.height],\n          ['L', 0, 0],\n        ],\n        ...this.options.gridlineStyle,\n      },\n    });\n  }\n\n  protected getLayout() {\n    const positions = this.options.position.split('-');\n    this.position = positions[0];\n    if (positions[0] === 'left' || positions[0] === 'right') {\n      return 'vertical';\n    }\n    return 'horizontal';\n  }\n\n  protected getDefaultWidth() {\n    if (this.layout === 'horizontal') {\n      const { width } = this.options.plot.options;\n      return width * 0.5;\n    }\n    return 10;\n  }\n\n  protected getDefaultHeight() {\n    if (this.layout === 'vertical') {\n      const { height } = this.options.plot.options;\n      return height * 0.5;\n    }\n    return 10;\n  }\n\n  protected legendLayout() {\n    const { bleeding } = this.options.plot.getPlotTheme();\n    if (isArray(bleeding)) {\n      each(bleeding, (it, index) => {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](this.options.plot.options);\n        }\n      });\n    }\n    const bbox = this.container.getBBox();\n    let x = 0;\n    let y = 0;\n    const positions = this.options.position.split('-');\n    const plotWidth = this.options.plot.width;\n    const plotHeight = this.options.plot.height;\n    // 先确定x\n    if (positions[0] === 'left') {\n      x = bleeding[3];\n    } else if (positions[0] === 'right') {\n      x = plotWidth - bleeding[1] - bbox.width;\n    } else if (positions[1] === 'center') {\n      x = (plotWidth - bbox.width) / 2;\n    } else if (positions[1] === 'left') {\n      x = bleeding[3];\n    } else if (positions[1] === 'right') {\n      x = this.options.plot.width - bleeding[1] - bbox.width;\n    }\n    // 再确定y\n    if (positions[0] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    } else if (positions[0] === 'top') {\n      y = this.getTopPosition(bleeding);\n    } else if (positions[1] === 'center') {\n      y = (plotHeight - bbox.height) / 2;\n    } else if (positions[1] === 'top') {\n      y = bleeding[0];\n    } else if (positions[1] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    }\n\n    this.x = x;\n    this.y = y;\n\n    this.container.translate(x, y);\n  }\n\n  protected getDefaultOptions() {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.45)',\n        },\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(0, 0, 0, 0.45)',\n      },\n    };\n  }\n\n  protected getDarkOptions() {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(255, 255, 255, 0.45)',\n        },\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(255, 255, 255, 0.25)',\n      },\n    };\n  }\n\n  protected addInteraction() {\n    const { colorField } = this.options.plot.options;\n    this.container.on('click', (ev) => {\n      const { target } = ev;\n      if (target.get('name') === 'legend') {\n        const appendInfo = target.get('info');\n        const targetInfo = `${appendInfo.from}-${appendInfo.to}`;\n        const relativeData = this.dataSlides[targetInfo];\n        if (relativeData.mode === 'active') {\n          relativeData.mode = 'deactive';\n          target.stopAnimate();\n          target.animate(\n            {\n              opacity: DEACTIVE_OPACITY,\n            },\n            200\n          );\n        } else {\n          relativeData.mode = 'active';\n          target.stopAnimate();\n          target.animate(\n            {\n              opacity: ACTIVE_OPACITY,\n            },\n            200\n          );\n        }\n        const filteredData = this.getFilteredData();\n        if (filteredData.length > 0) {\n          this.view.changeData(filteredData);\n          //this.view.set('data', filteredData);\n          this.view.scale(colorField, {\n            min: this.colorScale.min,\n            max: this.colorScale.max,\n            nice: this.colorScale.nice,\n          } as any);\n          this.view.render();\n        }\n      }\n    });\n  }\n\n  protected getFilteredData() {\n    const filteredData = [];\n    each(this.dataSlides, (s) => {\n      if (s.mode == 'active') {\n        filteredData.push(...s.data);\n      }\n    });\n    return filteredData;\n  }\n\n  //预先对数据进行分组\n  protected getDataSlide(range) {\n    const slide = [];\n    const { colorField, data } = this.options.plot.options;\n    each(data, (d) => {\n      const value = d[colorField];\n      if (value >= range.from && value < range.to) {\n        slide.push(d);\n      }\n    });\n    return slide;\n  }\n\n  private getTopPosition(bleeding) {\n    if (this.options.plot.description) {\n      const bbox = this.options.plot.description.getBBox();\n      return bbox.maxY + 10;\n    } else if (this.options.plot.title) {\n      const bbox = this.options.plot.title.getBBox();\n      return bbox.maxY + 10;\n    }\n    return bleeding[0];\n  }\n\n  private getScales() {\n    let scales;\n    each(this.view.geometries, (geom) => {\n      if (geom.type === 'heatmap') {\n        scales = geom.scales;\n      }\n    });\n    return scales;\n  }\n}\n"]}