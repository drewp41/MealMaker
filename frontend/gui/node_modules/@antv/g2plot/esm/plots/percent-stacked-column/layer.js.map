{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/percent-stacked-column/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAErD,OAAO,aAA0C,MAAM,yBAAyB,CAAC;AACjF,OAAO,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAM1D;IAAuD,6CAA8C;IAArG;QAAA,qEAgDC;QAvBQ,UAAI,GAAW,sBAAsB,CAAC;;IAuB/C,CAAC;IA/Ce,2CAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,CAAC;aACV;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACf;gBACD,KAAK,EAAE;oBACL,OAAO,EAAE,IAAI;iBACd;gBACD,KAAK,EAAE;oBACL,OAAO,EAAE,KAAK;iBACf;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAGS,+CAAW,GAArB,UAAsB,UAAuB;QACrC,IAAA,iBAAiC,EAA/B,kBAAM,EAAE,kBAAuB,CAAC;QACxC,OAAO,uBAAuB,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACrE,CAAC;IAES,yCAAK,GAAf;QACE,IAAM,UAAU,GAAG,EAAE,CAAC;QACd,IAAA,4BAAM,CAAkB;QAChC,UAAU,CAAC,MAAM,CAAC,GAAG;YACnB,SAAS,EAAE,CAAC;YACZ,KAAK,EAAK,MAAM,SAAM;YACtB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,SAAS,EAAE,UAAC,CAAC;gBACX,IAAM,cAAc,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC5C,OAAU,cAAc,MAAG,CAAC;YAC9B,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC;QAC/B,iBAAM,KAAK,WAAE,CAAC;IAChB,CAAC;IACH,gCAAC;AAAD,CAAC,AAhDD,CAAuD,aAAa,GAgDnE;;AAED,gBAAgB,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport StackedColumn, { StackedColumnViewConfig } from '../stacked-column/layer';\nimport { transformDataPercentage } from '../../util/data';\nimport { DataItem } from '../../interface/config';\n\nexport type PercentStackedColumnViewConfig = StackedColumnViewConfig;\nexport interface PercentStackedColumnLayerConfig extends PercentStackedColumnViewConfig, LayerConfig {}\n\nexport default class PercentStackedColumnLayer extends StackedColumn<PercentStackedColumnLayerConfig> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      label: {\n        visible: true,\n        position: 'middle',\n        offset: 0,\n      },\n      yAxis: {\n        visible: true,\n        tick: {\n          visible: false,\n        },\n        grid: {\n          visible: false,\n        },\n        title: {\n          visible: true,\n        },\n        label: {\n          visible: false,\n        },\n      },\n    });\n  }\n  public type: string = 'percentStackedColumn';\n\n  protected processData(originData?: DataItem[]) {\n    const { xField, yField } = this.options;\n    return transformDataPercentage(originData || [], xField, [yField]);\n  }\n\n  protected scale() {\n    const metaConfig = {};\n    const { yField } = this.options;\n    metaConfig[yField] = {\n      tickCount: 6,\n      alias: `${yField} (%)`,\n      min: 0,\n      max: 1,\n      formatter: (v) => {\n        const formattedValue = (v * 100).toFixed(1);\n        return `${formattedValue}%`;\n      },\n    };\n    this.options.meta = metaConfig;\n    super.scale();\n  }\n}\n\nregisterPlotType('percentStackedColumn', PercentStackedColumnLayer);\n"]}