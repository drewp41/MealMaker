{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/line/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, has, map, each, some } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport {\n  ICatAxis,\n  ITimeAxis,\n  IValueAxis,\n  GraphicStyle,\n  LineStyle,\n  ISliderInteractionConfig,\n  IScrollbarInteractionConfig,\n} from '../../interface/config';\nimport { extractScale, trySetScaleMinToZero } from '../../util/scale';\nimport { getPlotOption } from './animation/clipIn-with-data';\nimport responsiveMethods from './apply-responsive';\nimport '../../components/label/point';\nimport '../../components/label/point-auto';\nimport LineLabel from './component/label/line-label';\nimport * as EventParser from './event';\nimport MarkerPoint, { MarkerPointCfg } from '../../components/marker-point';\nimport './theme';\nimport './apply-responsive/theme';\nimport { LooseMap, Maybe } from '../../interface/types';\nimport { LineActive, LineSelect } from './interaction/index';\nimport { getGeometryByType } from '../../util/view';\n\ntype IObject = LooseMap;\n\nconst GEOM_MAP = {\n  line: 'line',\n  point: 'point',\n};\n\ntype LineInteraction =\n  | { type: 'slider'; cfg: ISliderInteractionConfig }\n  | { type: 'scrollBar'; cfg: IScrollbarInteractionConfig };\n\nexport type PointShape = string | { fields?: []; callback: () => string };\n\nexport interface LineViewConfig extends ViewConfig {\n  /** 分组字段 */\n  seriesField?: string;\n  /** 是否平滑 */\n  smooth?: boolean;\n  /** 是否连接空数据 */\n  connectNulls?: boolean;\n  /** 折线extra图形样式 */\n  lineStyle?: LineStyle | ((...args: any[]) => LineStyle);\n  /** 折线数据点图形样式 */\n  point?: {\n    visible?: boolean;\n    shape?: PointShape;\n    size?: number;\n    color?: string;\n    style?: GraphicStyle;\n  };\n  markerPoints?: (Omit<MarkerPointCfg, 'view'> & {\n    visible?: boolean;\n  })[];\n  xAxis?: IValueAxis | ICatAxis | ITimeAxis;\n  yAxis?: IValueAxis;\n  interactions?: LineInteraction[];\n}\n\nexport interface LineLayerConfig extends LineViewConfig, LayerConfig {}\n\nexport default class LineLayer<T extends LineLayerConfig = LineLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): Partial<LineLayerConfig> {\n    return deepMix({}, super.getDefaultOptions(), {\n      connectNulls: false,\n      smooth: false,\n      lineSize: 2,\n      lineStyle: {\n        lineJoin: 'round',\n        lineCap: 'round',\n      },\n      point: {\n        visible: false,\n        size: 3,\n        shape: 'circle',\n        style: {\n          stroke: '#fff',\n        },\n      },\n      label: {\n        visible: false,\n        type: 'point',\n      },\n      legend: {\n        visible: true,\n        position: 'top-left',\n        wordSpacing: 4,\n      },\n      tooltip: {\n        crosshairs: {\n          line: {\n            style: {\n              stroke: 'rgba(0,0,0,0.45)',\n            },\n          },\n        },\n      },\n      markerPoints: [],\n    });\n  }\n\n  public line: any; // 保存line和point的配置项，用于后续的label、tooltip\n  public point: any;\n  public type: string = 'line';\n  protected markerPoints: MarkerPoint[] = [];\n\n  public afterRender() {\n    const options = this.options;\n    this.renderLabel();\n    if (options.markerPoints) {\n      // 清空\n      each(this.markerPoints, (markerPoint: MarkerPoint) => markerPoint.destroy());\n      this.markerPoints = [];\n      options.markerPoints.forEach((markerPointOpt) => {\n        if (markerPointOpt.visible) {\n          const markerPoint = new MarkerPoint({\n            ...markerPointOpt,\n            view: this.view,\n          });\n          this.markerPoints.push(markerPoint);\n        }\n      });\n    }\n    // 响应式\n    if (options.responsive && options.padding !== 'auto') {\n      this.applyResponsive('afterRender');\n    }\n    super.afterRender();\n  }\n\n  protected geometryParser(dim, type) {\n    return GEOM_MAP[type];\n  }\n\n  protected scale() {\n    const props = this.options;\n    const scales = {};\n    /** 配置x-scale */\n    scales[props.xField] = {};\n    if (has(props, 'xAxis')) {\n      extractScale(scales[props.xField], props.xAxis);\n    }\n    /** 配置y-scale */\n    scales[props.yField] = {};\n    if (has(props, 'yAxis')) {\n      extractScale(scales[props.yField], props.yAxis);\n    }\n    this.setConfig('scales', scales);\n    trySetScaleMinToZero(\n      scales[props.yField],\n      map(props.data as any, (item) => item[props.yField])\n    );\n    super.scale();\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected tooltip() {\n    // 如果有标注点，则不展示markers\n    if (some(this.options.markerPoints, (markerPointOpt) => markerPointOpt.visible)) {\n      this.options.tooltip.showMarkers = false;\n    }\n    super.tooltip();\n  }\n\n  protected addGeometry() {\n    // 配置线\n    this.addLine();\n    // 配置数据点\n    this.addPoint();\n  }\n\n  private addLine() {\n    const props: any = this.options;\n    this.line = getGeom('line', 'main', {\n      plot: this,\n    });\n\n    if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n\n    this.setConfig('geometry', this.line);\n  }\n\n  protected addPoint() {\n    const props = this.options;\n    const defaultConfig = { visible: false };\n    if (props.point) {\n      props.point = deepMix(defaultConfig, props.point);\n    }\n    if (props.point && props.point.visible) {\n      this.point = getGeom('point', 'guide', {\n        plot: this,\n      });\n      this.setConfig('geometry', this.point);\n    }\n  }\n\n  protected renderLabel() {\n    const { scales } = this.config;\n    const { label, yField } = this.options;\n    const scale = scales[yField];\n    if (label.visible) {\n      const geometry = getGeometryByType(this.view, 'line');\n      if (label.type === 'line') {\n        // TODO: Line Label 迁移\n        const label = new LineLabel({\n          view: this.view,\n          plot: this,\n          ...this.options.label,\n        });\n        label.render();\n      } else {\n        this.doRenderLabel(geometry, {\n          type: 'point',\n          formatter: scale.formatter && ((value: Maybe<string | number>) => scale.formatter(value)),\n          ...this.options.label,\n        });\n      }\n    }\n  }\n\n  protected geometryTooltip() {\n    this.line.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.line.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.line.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.line.tooltip.fields = [this.options.xField, this.options.yField];\n        if (this.options.seriesField) {\n          this.line.tooltip.fields.push(this.options.seriesField);\n        }\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (!props.animation) {\n      // 关闭动画\n      this.line.animate = false;\n      if (this.point) this.point.animate = false;\n    } else {\n      getPlotOption({\n        options: this.options,\n        view: this.view,\n      });\n      this.line.animate = props.animation;\n    }\n  }\n\n  protected applyInteractions() {\n    super.applyInteractions();\n    this.interactions.push(\n      new LineActive({\n        view: this.view,\n      })\n    );\n    this.interactions.push(\n      new LineSelect({\n        view: this.view,\n      })\n    );\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  private applyResponsive(stage) {\n    const methods = responsiveMethods[stage];\n    each(methods, (r) => {\n      const responsive = r as IObject;\n      responsive.method(this);\n    });\n  }\n\n  private singleLineLabelCheck() {\n    // 不允许单折线设置尾部跟随label\n    return !this.options.seriesField && this.options.label.type && this.options.label.type === 'line';\n  }\n}\n\nregisterPlotType('line', LineLayer);\n"]}