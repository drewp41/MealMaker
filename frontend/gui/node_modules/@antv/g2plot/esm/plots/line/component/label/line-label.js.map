{"version":3,"file":"line-label.js","sourceRoot":"","sources":["../../../../../src/plots/line/component/label/line-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nimport { View, IGroup, Geometry } from '../../../../dependents';\n\nconst DEFAULT_OFFSET = 8;\n\nexport interface LineLabelConfig {\n  visible?: boolean;\n  formatter?: (...args: any[]) => string;\n  offsetX?: number;\n  offsetY?: number;\n  style?: any;\n}\n\nexport interface ILineLabel extends LineLabelConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class LineLabel {\n  public options: LineLabelConfig;\n  public destroyed: boolean = false;\n  protected plot: any;\n  protected view: View;\n  private container: IGroup;\n\n  constructor(cfg: ILineLabel) {\n    this.view = cfg.view;\n    this.plot = cfg.plot;\n    const defaultOptions = this.getDefaultOptions();\n    this.options = deepMix(defaultOptions, cfg, {});\n    this.init();\n  }\n\n  protected init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    const elements = this.getGeometry().elements;\n    each(elements, (ele) => {\n      const shapeInfo = this.getShapeInfo(ele.shape);\n      const { style, offsetX, offsetY } = this.options;\n      const formatter = this.options.formatter;\n      const content = formatter ? formatter(shapeInfo.name) : shapeInfo.name;\n      this.container.addShape('text', {\n        attrs: deepMix(\n          {},\n          {\n            x: shapeInfo.x + offsetX,\n            y: shapeInfo.y + offsetY,\n            text: content,\n            fill: shapeInfo.color,\n            textAlign: 'left',\n            textBaseline: 'middle',\n          },\n          style\n        ),\n        name: 'label',\n      });\n    });\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    return this.container.getBBox();\n  }\n\n  private getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = clone(theme.label.style);\n    delete labelStyle.fill;\n    return {\n      offsetX: DEFAULT_OFFSET,\n      offsetY: 0,\n      style: labelStyle,\n    };\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geom) => geom.type === 'line') as Geometry;\n  }\n\n  protected getShapeInfo(shape) {\n    const originPoints = shape.get('origin').points;\n    const lastPoint = originPoints[originPoints.length - 1];\n    const color = shape.attr('stroke');\n    const { seriesField } = this.plot.options;\n    const name = shape.get('origin').data[0][seriesField];\n    return { x: lastPoint.x, y: lastPoint.y, color, name };\n  }\n}\n"]}