{"version":3,"file":"line-active.js","sourceRoot":"","sources":["../../../../src/plots/line/interaction/line-active.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAC/C,OAAO,WAAW,MAAM,2BAA2B,CAAC;AAGpD;IAAwC,8BAAW;IACjD,oBAAY,GAAG;eACb;YACE,mGAAmG;YACnG,YAAY,EAAE,WAAW,IACtB,GAAG,EACN;IACJ,CAAC;IAEM,0BAAK,GAAZ;QACE,OAAO;IACT,CAAC;IAEM,4BAAO,GAAd,UAAe,EAAE;QACf,IAAM,KAAK,GAAe,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,IAAI,MAAM,EAAnB,CAAmB,CAAC,CAAC;QACtF,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACzB,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;YACjC,IAAM,MAAI,GAAG,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAc;gBACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;oBAC1B,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,KAAK,MAAI,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,KAAK,EAAE,UAAC,IAAc;gBACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;oBAC1B,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACH,iBAAC;AAAD,CAAC,AA/BD,CAAwC,WAAW,GA+BlD","sourcesContent":["import { each, filter, get } from '@antv/util';\nimport Interaction from '../../../interaction/core';\nimport { Geometry } from '../../../dependents';\n\nexport default class LineActive extends Interaction {\n  constructor(cfg) {\n    super({\n      /** 没有用 line:mouseenter 和 line:mouseleave 事件，是因为可能在多条折线的情况下，从一条线滑动到另一条会同时触发process和reset，使画面出现闪动 */\n      processEvent: 'mousemove',\n      ...cfg,\n    });\n  }\n\n  public start() {\n    return;\n  }\n\n  public process(ev) {\n    const lines: Geometry[] = filter(this.view.geometries, (geom) => geom.type == 'line');\n    const target = ev.target;\n    if (target.get('name') === 'line') {\n      const data = get(ev, 'data.data');\n      each(lines, (line: Geometry) => {\n        each(line.elements, (element) => {\n          element.setState('active', element.data === data);\n        });\n      });\n    } else {\n      each(lines, (line: Geometry) => {\n        each(line.elements, (element) => {\n          element.setState('active', false);\n        });\n      });\n    }\n  }\n}\n"]}