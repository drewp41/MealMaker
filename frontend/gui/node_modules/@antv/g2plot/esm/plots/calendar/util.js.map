{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/plots/calendar/util.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAE9C,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AAC1E,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAErE;;;GAGG;AACH,SAAS,cAAc,CAAC,SAAmB;;IAClC,IAAA,mBAAI,EAAE,iBAAE,CAAc;IAE7B,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC5C,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAExC,OAAO;IACP,IAAI,QAAQ,GAAG,MAAM,EAAE;QACrB,uBAAuC,EAAtC,cAAM,EAAE,gBAAQ,CAAuB;KACzC;IAED,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC5B,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAAC,IAAgB,EAAE,SAAmB,EAAE,SAAiB;IAC3F,IAAM,GAAG,GAAG,EAAE,CAAC;IAET,IAAA,8BAA8C,EAA7C,gBAAQ,EAAE,cAAmC,CAAC;IACrD,UAAU;IACV,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;;;QAE9B,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,UAAU;QACV,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,UAAC,KAAe,IAAK,OAAA,KAAK,CAAC,SAAS,CAAC,KAAK,UAAU,EAA/B,CAA+B,CAAC,CAAC;QAE/E,GAAG,CAAC,IAAI,uBACL,SAAS,IAAG,MAAM,CAAC,IAAI,CAAC,KACxB,UAAU,IAAG,KAAG,OAAO,CAAC,IAAI,CAAG,KAC/B,SAAS,IAAG,UAAU,KACtB,UAAU,IAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OACzB,KAAK,EACR,CAAC;QAEH,SAAS;QACT,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;IAd1B,OAAO,IAAI,IAAI,MAAM;;KAepB;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAAC,SAAmB;IAC9C,IAAA,8BAA8C,EAA7C,gBAAQ,EAAE,cAAmC,CAAC;IAErD,IAAM,YAAY,GAAG,IAAI,GAAG,EAAoB,CAAC;IAEjD,SAAS,MAAM,CAAC,OAAa;QAC3B,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS;QAC3C,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC5B,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAC7B;QAED,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,UAAU;IACV,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,IAAI,IAAI,MAAM,EAAE;QACrB,YAAY;QACZ,MAAM,CAAC,IAAI,CAAC,CAAC;QAEb,eAAe;QACf,SAAS,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;KAC7B;IAED,cAAc;IACd,IAAI,MAAM,GAAG,IAAI,EAAE;QACjB,MAAM,CAAC,MAAM,CAAC,CAAC;KAChB;IAED,YAAY;IACZ,IAAM,MAAM,GAA2B,EAAE,CAAC,CAAC,gBAAgB;IAE3D,YAAY,CAAC,OAAO,CAAC,UAAC,CAAW,EAAE,CAAS;QAC1C,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO;QACrD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import fecha from 'fecha';\nimport { head, last, find } from '@antv/util';\nimport { DataItem } from '../..';\nimport { DATE_FIELD, DAY_FIELD, FORMATTER, WEEK_FIELD } from './constant';\nimport { advanceBy, DAY_MS, getDay, getWeek } from '../../util/date';\n\n/**\n * 解析日期\n * @param dateRange\n */\nfunction parseDateRange(dateRange: string[]): Date[] {\n  const [from, to] = dateRange;\n\n  let fromDate = fecha.parse(from, FORMATTER);\n  let toDate = fecha.parse(to, FORMATTER);\n\n  // 交换顺序\n  if (fromDate > toDate) {\n    [toDate, fromDate] = [fromDate, toDate];\n  }\n\n  return [fromDate, toDate];\n}\n\n/**\n * 根据 range 补齐日历图的数据\n * @param data 传入数据\n * @param dateRange 日期区间\n * @param dateField 日期字段\n */\nexport function generateCalendarData(data: DataItem[], dateRange: string[], dateField: string): DataItem[] {\n  const all = [];\n\n  const [fromDate, toDate] = parseDateRange(dateRange);\n  // copy 一份\n  const curr = new Date(fromDate);\n  while (curr <= toDate) {\n    const dateString = fecha.format(curr, FORMATTER);\n    // 找到对应的数据\n    const datum = find(data, (datum: DataItem) => datum[dateField] === dateString);\n\n    all.push({\n      [DAY_FIELD]: getDay(curr),\n      [WEEK_FIELD]: `${getWeek(curr)}`,\n      [dateField]: dateString,\n      [DATE_FIELD]: new Date(curr), // copy\n      ...datum,\n    });\n\n    // 向前移动一天\n    advanceBy(curr, DAY_MS);\n  }\n\n  return all;\n}\n\n/**\n * 计算每个月的中间周。\n */\nexport function getMonthCenterWeek(dateRange: string[]): Record<number, number> {\n  const [fromDate, toDate] = parseDateRange(dateRange);\n\n  const monthWeekMap = new Map<number, number[]>();\n\n  function append(current: Date) {\n    const month = current.getMonth(); // 从 0 开始\n    const week = getWeek(current);\n\n    if (!monthWeekMap.has(month)) {\n      monthWeekMap.set(month, []);\n    }\n\n    monthWeekMap.get(month).push(week);\n  }\n\n  // copy 一份\n  const curr = new Date(fromDate);\n  while (curr <= toDate) {\n    // 设置到 map 中\n    append(curr);\n\n    // 向前移动 7 天（一周）\n    advanceBy(curr, DAY_MS * 7);\n  }\n\n  // 增加最后一个日期的计算\n  if (toDate < curr) {\n    append(toDate);\n  }\n\n  // 处理数据，返回结果\n  const result: Record<number, number> = {}; // week -> month\n\n  monthWeekMap.forEach((v: number[], k: number) => {\n    const w = Math.ceil((head(v) + last(v)) / 2); // 取平均值\n    result[w] = k;\n  });\n\n  return result;\n}\n"]}