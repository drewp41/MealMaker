{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/liquid/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, isFunction, get, forIn, isNumber } from '@antv/util';\nimport BBox from '../../util/bbox';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport { DataItem, TextStyle } from '../../interface/config';\nimport { rgb2arr } from '../../util/color';\nimport * as EventParser from './event';\nimport './geometry/shape/liquid';\nimport './animation/liquid-move-in';\n\nconst G2_GEOM_MAP = {\n  column: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'liquid',\n};\n\nexport interface LiquidStyle {}\n\nexport interface LiquidViewConfig extends Partial<ViewConfig> {\n  statistic?: {\n    visible?: boolean;\n    adjustColor?: boolean;\n    formatter?: (value) => string;\n    style?: TextStyle;\n  };\n  min: number;\n  max: number;\n  value: number;\n  liquidStyle?: LiquidStyle | ((...args: any[]) => LiquidStyle);\n}\n\nexport interface LiquidLayerConfig extends LiquidViewConfig, LayerConfig {\n  data: DataItem[];\n}\n\nexport default class LiquidLayer<T extends LiquidLayerConfig = LiquidLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): Partial<LiquidViewConfig> {\n    const cfg: Partial<LiquidViewConfig> = {\n      padding: [0, 0, 0, 0],\n      animation: {\n        factor: 0.4,\n        easing: 'easeExpOut',\n        duration: 800,\n      },\n      liquidStyle: {\n        lineWidth: 2,\n      },\n      color: '#6a99f9',\n      interactions: [],\n      statistic: {\n        visible: true,\n      },\n    };\n    return deepMix({}, super.getDefaultOptions(), cfg);\n  }\n\n  public liquid: any;\n  public type: string = 'liquid';\n  private shouldFadeInAnnotation: boolean = true;\n\n  public beforeInit() {\n    const { min, max, value } = this.options;\n    if (!isNumber(min)) {\n      throw new Error('The min value of Liquid is required, and the type of min must be Number.');\n    }\n    if (!isNumber(max)) {\n      throw new Error('The max value of Liquid is required, and the type of max must be Number.');\n    }\n    if (!isNumber(value)) {\n      throw new Error('The value of Liquid is required, and the type of value must be Number.');\n    }\n  }\n\n  public init() {\n    this.options.data = [{}];\n    super.init();\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected scale() {\n    const props = this.options;\n    const { min, max } = props;\n    const scales = {\n      value: {},\n    };\n    extractScale(scales.value, {\n      min: Math.min(min, max),\n      max: Math.max(min, max),\n    });\n    // @ts-ignore\n    this.setConfig('scales', scales);\n    super.scale();\n  }\n\n  protected axis(): void {\n    this.setConfig('axes', false);\n  }\n\n  protected adjustLiquid(liquid) {\n    const { options: props } = this;\n\n    liquid.shape = {\n      values: ['liquid-fill-gauge'],\n    };\n\n    liquid.tooltip = false;\n\n    let liquidStyle = props.liquidStyle;\n    if (isFunction(liquidStyle)) liquidStyle = liquidStyle();\n    if (liquidStyle) {\n      liquid.style = liquidStyle;\n    }\n  }\n\n  protected addGeometry(): void {\n    const liquid = getGeom('interval', 'main', {\n      positionFields: [1, 'value'],\n      plot: this,\n    });\n    this.adjustLiquid(liquid);\n    this.liquid = liquid;\n    this.setConfig('geometry', liquid);\n  }\n\n  protected animation() {\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.liquid.animate = false;\n    } else {\n      const factor = get(props, 'animation.factor');\n      const easing = get(props, 'animation.easing');\n      const duration = get(props, 'animation.duration');\n      this.liquid.animate = {\n        appear: {\n          animation: 'liquidMoveIn',\n          factor,\n          easing,\n          duration,\n        },\n      };\n    }\n  }\n\n  protected geometryParser(dim: string, type: string): string {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected annotation() {\n    const annotationConfigs = [];\n\n    const statisticConfig = this.extractStatistic();\n    annotationConfigs.push(statisticConfig);\n\n    this.setConfig('annotations', annotationConfigs);\n  }\n\n  protected extractStatistic() {\n    const props = this.options;\n    const statistic: any = props.statistic || {};\n\n    let content;\n    if (isFunction(statistic.formatter)) {\n      content = statistic.formatter(props.value);\n    } else {\n      content = `${props.value}`;\n    }\n\n    let fontSize;\n    let shadowBlur;\n    if (content) {\n      const contentWidth = Math.min(this.width, this.height);\n      fontSize = (contentWidth / content.length) * 0.5;\n      shadowBlur = Math.max(1, Math.ceil(0.025 * fontSize));\n    }\n    let opacity;\n    if (statistic.visible === false) {\n      return;\n    }\n\n    const statisticConfig = deepMix(\n      {\n        style: {\n          fontSize,\n          shadowBlur,\n        },\n      },\n      statistic,\n      {\n        top: true,\n        content,\n        type: 'text',\n        position: ['50%', '50%'],\n        style: {\n          opacity,\n          fill: 'transparent',\n          shadowColor: 'transparent',\n          textAlign: 'center',\n        },\n      }\n    );\n    delete statisticConfig.visible;\n    delete statisticConfig.formatter;\n    delete statisticConfig.adjustColor;\n    return statisticConfig;\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  public afterRender() {\n    if (this.options.statistic?.visible) {\n      this.fadeInAnnotation();\n    }\n    const { options } = this;\n    const padding = options.padding ? options.padding : this.config.theme.padding;\n    /** defaultState */\n    if (options.defaultState && padding !== 'auto') {\n      this.stateController.defaultStates(options.defaultState);\n    }\n    /** autopadding */\n    if (padding === 'auto') {\n      this.paddingController.processAutoPadding();\n    }\n  }\n\n  protected processData(): DataItem[] | undefined {\n    const props = this.options;\n    return [{ _: '_', value: props.value }];\n  }\n\n  public changeValue(value: number): void {\n    const props = this.options;\n    props.value = value;\n    this.changeData([]);\n  }\n\n  protected fadeInAnnotation() {\n    const props = this.options;\n    const textShape = this.view.foregroundGroup.findAll((el) => {\n      return el.get('name') === 'annotation-text';\n    })[0];\n    const animation: any = props.animation || {};\n    const colorStyle = this.calcAnnotationColorStyle();\n    if (this.shouldFadeInAnnotation) {\n      textShape.animate(colorStyle, animation.duration * Math.min(1, 1.5 * animation.factor), null, () => {\n        this.shouldFadeInAnnotation = false;\n      });\n    } else {\n      forIn(colorStyle, (v, k) => textShape.attr(k, v));\n    }\n  }\n\n  protected calcAnnotationColorStyle() {\n    const { options: props } = this;\n\n    const lightColorStyle = { fill: '#f6f6f6', shadowColor: 'black' };\n    const darkColorStyle = { fill: '#303030', shadowColor: 'white' };\n\n    if (get(props, 'statistic.adjustColor') === false) {\n      return {\n        fill: get(props, 'statistic.style.fill', darkColorStyle.fill),\n        shadowColor: get(props, 'statistic.style.shadowColor', darkColorStyle.shadowColor),\n      };\n    }\n\n    let { min, max } = props;\n    const { value } = props;\n    min = Math.min(min, max);\n    max = Math.max(min, max);\n    let percent;\n    if (min == max) {\n      percent = 1;\n    } else {\n      percent = (value - min) / (max - min);\n    }\n\n    if (percent > 0.55) {\n      const waveColor = this.options.color as string;\n      const waveOpacity = 0.8;\n      const rgb = rgb2arr(waveColor);\n      const gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / waveOpacity;\n      return gray < 156 ? lightColorStyle : darkColorStyle;\n    }\n\n    return darkColorStyle;\n  }\n\n  public updateConfig(cfg: Partial<T>): void {\n    super.updateConfig(cfg);\n    this.shouldFadeInAnnotation = true;\n  }\n\n  protected getViewRange() {\n    const viewRange = super.getViewRange();\n    const liquidStyle: any = this.options.liquidStyle;\n    const strokeWidth = liquidStyle.lineWidth ? liquidStyle.lineWidth : 2;\n    const { minX, minY, width, height } = viewRange;\n    const size = Math.min(width, height) - strokeWidth * 2;\n    const cx = minX + width / 2;\n    const cy = minY + height / 2;\n    const x = cx - size / 2;\n    const y = cy - size / 2;\n    return new BBox(x, y, size, size);\n  }\n}\n\nregisterPlotType('liquid', LiquidLayer);\n"]}