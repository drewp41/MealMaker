{"version":3,"file":"liquid.js","sourceRoot":"","sources":["../../../../../src/plots/liquid/geometry/shape/liquid.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerShape } from '../../../../dependents';\nimport { isArray, each, isNumber, mix } from '@antv/util';\nimport { getGlobalTheme } from '../../../../theme';\nimport { transform } from '../../../../util/g-util';\n\nconst globalTheme = getGlobalTheme();\n\nconst ShapeUtil = {\n  splitPoints(obj) {\n    const points = [];\n    const x = obj.x;\n    let y = obj.y;\n    y = isArray(y) ? y : [y];\n    each(y, (yItem, index) => {\n      const point = {\n        x: isArray(x) ? x[index] : x,\n        y: yItem,\n      };\n      points.push(point);\n    });\n    return points;\n  },\n  addFillAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.fill) {\n      attrs.fill = cfg.color;\n    }\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.fillOpacity = cfg.opacity;\n    }\n  },\n  addStrokeAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.stroke) {\n      attrs.stroke = cfg.color;\n    }\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n    }\n  },\n};\n\nconst ValueUtil = {\n  lerp(a, b, factor) {\n    return (1 - factor) * a + factor * b;\n  },\n};\n\nconst getFillAttrs = (cfg) => {\n  const defaultAttrs = {\n    lineWidth: 0,\n    fill: globalTheme.color,\n    fillOpacity: 0.85,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(attrs, cfg);\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = attrs.stroke || cfg.color;\n  }\n  return attrs;\n};\n\nconst getLineAttrs = (cfg) => {\n  const defaultAttrs = {\n    fill: '#fff',\n    stroke: globalTheme.color,\n    fillOpacity: 0,\n    lineWidth: 2,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(attrs, cfg);\n  return attrs;\n};\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n * @return {Array} 正弦片段曲线\n */\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param  {number} radius          半径\n * @param  {number} waterLevel      水位\n * @param  {number} waveLength      波长\n * @param  {number} phase           相位\n * @param  {number} amplitude       震幅\n * @param  {number} cx              圆心x\n * @param  {number} cy              圆心y\n * @return {Array}  path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 2;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param {number} x           中心x\n * @param {number} y           中心y\n * @param {number} level       水位等级 0～1\n * @param {number} waveCount   水波数\n * @param {number} colors      色值\n * @param {number} group       图组\n * @param {number} clip        用于剪切的图形\n * @param {number} radius      绘制图形的高度\n */\nfunction addWaterWave(x, y, level, waveCount, color, group, clip, radius) {\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n  const duration = 5000;\n  for (let i = 0; i < waveCount; i++) {\n    const factor = waveCount <= 1 ? 0 : i / (waveCount - 1);\n    const wave = group.addShape('path', {\n      attrs: {\n        path: getWaterWavePath(\n          radius,\n          bbox.minY + height * level,\n          width / 4,\n          0,\n          width / ValueUtil.lerp(56, 64, factor),\n          x,\n          y\n        ),\n        fill: color,\n        opacity: ValueUtil.lerp(0.6, 0.3, factor),\n      },\n    });\n    /*wave.setClip({\n      type:'circle',\n      attrs: clip.attrs\n    })*/\n    // FIXME wave animation error in svg\n    // if (Global.renderer === 'canvas') {\n    const matrix = transform([['t', width / 2, 0]]);\n    wave.animate(\n      { matrix },\n      {\n        duration: ValueUtil.lerp(duration, 0.7 * duration, factor),\n        repeat: true,\n      }\n    );\n    //}\n  }\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container) {\n    const cy = 0.5;\n    let minX = Infinity;\n    each(cfg.points, (p: any) => {\n      if (p.x < minX) {\n        minX = p.x;\n      }\n    });\n    const cx = 0.5;\n    const cp = this.parsePoint({ x: cx, y: cy });\n    const minP = this.parsePoint({ x: minX, y: 0.5 });\n    const xWidth = cp.x - minP.x;\n    const radius = Math.min(xWidth, minP.y);\n    const { fill } = getFillAttrs(cfg);\n    const waves = container.addGroup({\n      name: 'waves',\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n      },\n    });\n    waves.setClip({\n      type: 'circle',\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n        r: radius,\n      },\n    });\n    const clipCircle = waves.get('clipShape');\n    addWaterWave(\n      cp.x,\n      cp.y,\n      1 - cfg.points[1].y, // cfg.y / (2 * cp.y),\n      3,\n      fill,\n      waves,\n      clipCircle,\n      radius * 4\n    );\n    container.addShape('circle', {\n      name: 'wrap',\n      attrs: mix(getLineAttrs(cfg), {\n        x: cp.x,\n        y: cp.y,\n        r: radius,\n        fill: 'transparent',\n      }),\n    });\n    return waves[0];\n  },\n});\n"]}