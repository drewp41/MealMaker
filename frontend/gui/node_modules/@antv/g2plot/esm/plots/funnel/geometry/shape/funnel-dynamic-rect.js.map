{"version":3,"file":"funnel-dynamic-rect.js","sourceRoot":"","sources":["../../../../../src/plots/funnel/geometry/shape/funnel-dynamic-rect.ts"],"names":[],"mappings":"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","sourcesContent":["import { get } from '@antv/util';\nimport { IGroup } from '@antv/g-canvas';\nimport { registerShape } from '@antv/g2';\nimport { ShapeMarkerCfg, ShapeInfo } from '@antv/g2/lib/interface';\nimport { getStyle } from '@antv/g2/lib/geometry/shape/util/get-style';\n\nfunction lerp(a, b, factor) {\n  return (1 - factor) * a + factor * b;\n}\n\n// 根据矩形关键点绘制 path\nfunction _getRectPath(points, { reverse, ratioUpper, ratioLower }) {\n  const path = [];\n  const firstPoint = points[0];\n\n  const originX = (points[1].x + points[2].x) / 2;\n  const factorTop = 1.2;\n  const factorBottom = 0.6;\n\n  if (reverse) {\n    const tmp = ratioLower;\n    ratioLower = ratioUpper;\n    ratioUpper = tmp;\n  }\n\n  const firstPointX = (firstPoint.x - originX) * lerp(factorBottom, factorTop, ratioLower) + originX;\n  path.push(['M', firstPointX, firstPoint.y]);\n\n  for (let i = 1, len = points.length; i < len; i++) {\n    let pointX = points[i].x;\n    switch (i) {\n      case 1:\n      case 2:\n        pointX = (pointX - originX) * lerp(factorBottom, factorTop, ratioUpper) + originX;\n        break;\n\n      case 3:\n        pointX = (pointX - originX) * lerp(factorBottom, factorTop, ratioLower) + originX;\n        break;\n    }\n    path.push(['L', pointX, points[i].y]);\n  }\n  path.push(['L', firstPointX, firstPoint.y]); // 需要闭合\n  path.push(['z']);\n  return path;\n}\n\nregisterShape('interval', 'funnel-dynamic-rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const custom = get(cfg, 'data.__custom__');\n    const path = this.parsePath(_getRectPath(cfg.points, custom));\n\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    return {\n      symbol: isInPolar ? 'circle' : 'square',\n      style: {\n        r: isInPolar ? 4.5 : 4,\n        fill: color,\n      },\n    };\n  },\n});\n"]}