{"version":3,"file":"funnel-basic-rect.js","sourceRoot":"","sources":["../../../../../src/plots/funnel/geometry/shape/funnel-basic-rect.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, isNil, isArray } from '@antv/util';\nimport { IGroup } from '@antv/g-base';\nimport { registerShape } from '@antv/g2';\nimport { ShapeMarkerCfg, ShapePoint, ShapeInfo } from '@antv/g2/lib/interface';\nimport { getStyle } from '@antv/g2/lib/geometry/shape/util/get-style';\n\n// 根据数据点生成矩形的四个关键点\nfunction _getRectPoints(cfg, isPyramid = false) {\n  const { x, y, y0, size } = cfg;\n  // 有 4 种情况，\n  // 1. x, y 都不是数组\n  // 2. y是数组，x不是\n  // 3. x是数组，y不是\n  // 4. x, y 都是数组\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    yMin = y[0];\n    yMax = y[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  let xMin;\n  let xMax;\n  if (isArray(x)) {\n    xMin = x[0];\n    xMax = x[1];\n  } else {\n    xMin = x - size / 2;\n    xMax = x + size / 2;\n  }\n\n  const points = [\n    { x: xMin, y: yMin },\n    { x: xMin, y: yMax },\n  ];\n\n  if (isPyramid) {\n    // 绘制尖底漏斗图\n    // 金字塔漏斗图的关键点\n    // 1\n    // |   2\n    // 0\n    points.push({\n      x: xMax,\n      y: (yMax + yMin) / 2,\n    });\n  } else {\n    // 矩形的四个关键点，结构如下（左下角顺时针连接）\n    // 1 ---- 2\n    // |      |\n    // 0 ---- 3\n    points.push({ x: xMax, y: yMax }, { x: xMax, y: yMin });\n  }\n\n  return points;\n}\n\n// 根据关键点绘制漏斗图的 path\nfunction _getFunnelPath(cfg, compare) {\n  const path = [];\n  const { points, nextPoints } = cfg;\n\n  if (compare) {\n    // 对比漏斗\n    const { yValues, yValuesMax, yValuesNext } = compare;\n    const originY = (points[0].y + points[1].y) / 2;\n\n    const yValueTotal = yValues[0] + yValues[1];\n    const yRatios = yValues.map((yValue) => yValue / yValueTotal / 0.5);\n    const yOffset = (yValuesMax[0] / (yValuesMax[0] + yValuesMax[1]) - 0.5) * 0.9;\n    const spacing = 0.001;\n\n    if (!isNil(nextPoints)) {\n      const yValueTotalNext = yValuesNext[0] + yValuesNext[1];\n      const yRatiosNext = yValuesNext.map((yValueNext) => yValueNext / yValueTotalNext / 0.5);\n      path.push(\n        ['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY - spacing],\n        ['L', points[1].x, yOffset + originY - spacing],\n        ['L', nextPoints[1].x, yOffset + originY - spacing],\n        ['L', nextPoints[0].x, yOffset + (nextPoints[3].y - originY) * yRatiosNext[0] + originY - spacing],\n        ['Z']\n      );\n      path.push(\n        ['M', points[0].x, yOffset + originY + spacing],\n        ['L', points[1].x, yOffset + (points[1].y - originY) * yRatios[1] + originY + spacing],\n        ['L', nextPoints[1].x, yOffset + (nextPoints[2].y - originY) * yRatiosNext[1] + originY + spacing],\n        ['L', nextPoints[0].x, yOffset + originY + spacing],\n        ['Z']\n      );\n    } else {\n      path.push(\n        ['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY],\n        ['L', points[1].x, yOffset + originY],\n        ['L', points[2].x, yOffset + originY],\n        ['L', points[3].x, yOffset + (points[3].y - originY) * yRatios[0] + originY],\n        ['Z']\n      );\n      path.push(\n        ['M', points[0].x, yOffset + 0.002 + originY],\n        ['L', points[1].x, yOffset + 0.002 + (points[1].y - originY) * yRatios[1] + originY],\n        ['L', points[2].x, yOffset + 0.002 + (points[2].y - originY) * yRatios[1] + originY],\n        ['L', points[3].x, yOffset + 0.002 + originY],\n        ['Z']\n      );\n    }\n  } else {\n    // 标准漏斗\n    if (!isNil(nextPoints)) {\n      path.push(\n        ['M', points[0].x, points[0].y],\n        ['L', points[1].x, points[1].y],\n        ['L', nextPoints[1].x, nextPoints[1].y],\n        ['L', nextPoints[0].x, nextPoints[0].y],\n        ['Z']\n      );\n    } else {\n      path.push(\n        ['M', points[0].x, points[0].y],\n        ['L', points[1].x, points[1].y],\n        ['L', points[2].x, points[2].y],\n        ['L', points[3].x, points[3].y],\n        ['Z']\n      );\n    }\n  }\n\n  return path;\n}\n\nregisterShape('interval', 'funnel-basic-rect', {\n  getPoints(pointInfo: ShapePoint) {\n    pointInfo.size = pointInfo.size * 1.8; // 调整面积\n    return _getRectPoints(pointInfo);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const compare = get(cfg, 'data.__compare__');\n    const path = this.parsePath(_getFunnelPath(cfg, compare));\n\n    return container.addShape('path', {\n      name: 'interval',\n      attrs: {\n        ...style,\n        path,\n      },\n      ['__compare__']: compare,\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n"]}