{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/grouped-column/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAGrD,OAAO,eAAe,MAAM,iBAAiB,CAAC;AAE9C,OAAO,SAAS,CAAC;AAQjB;IAAgD,sCAAyC;IAAzF;QAAA,qEAyCC;QA/BQ,UAAI,GAAW,eAAe,CAAC;;IA+BxC,CAAC;IAxCe,oCAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,OAAO,EAAE,IAAI;iBACd;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAEM,+CAAkB,GAAzB;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAES,wCAAW,GAArB;QACE,iBAAM,WAAW,WAAE,CAAC;IACtB,CAAC;IAES,yCAAY,GAAtB,UAAuB,MAAqB;QAC1C,MAAM,CAAC,MAAM,GAAG;YACd;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,GAAG;aACjB;SACF,CAAC;IACJ,CAAC;IAES,4CAAe,GAAzB;QACE,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;QACzB,IAAM,cAAc,GAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACjD,IAAI,cAAc,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;SACpD;QACD,IAAI,cAAc,CAAC,SAAS,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAClG;SACF;IACH,CAAC;IACH,yBAAC;AAAD,CAAC,AAzCD,CAAgD,eAAe,GAyC9D;;AAED,gBAAgB,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport { ElementOption } from '../../interface/config';\nimport BaseColumnLayer from '../column/layer';\nimport { ColumnViewConfig } from '../column/interface';\nimport './theme';\n\nexport interface GroupedColumnViewConfig extends ColumnViewConfig {\n  groupField: string;\n}\n\nexport interface GroupedColumnLayerConfig extends GroupedColumnViewConfig, LayerConfig {}\n\nexport default class GroupedColumnLayer extends BaseColumnLayer<GroupedColumnLayerConfig> {\n  public static getDefaultOptions(): Partial<GroupedColumnViewConfig> {\n    return deepMix({}, super.getDefaultOptions(), {\n      yAxis: {\n        title: {\n          visible: true,\n        },\n      },\n    });\n  }\n  public type: string = 'groupedColumn';\n  public getResponsiveTheme() {\n    return this.themeController.getResponsiveTheme('column');\n  }\n\n  protected addGeometry() {\n    super.addGeometry();\n  }\n\n  protected adjustColumn(column: ElementOption) {\n    column.adjust = [\n      {\n        type: 'dodge',\n        marginRatio: 0.1,\n      },\n    ];\n  }\n\n  protected geometryTooltip() {\n    this.column.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.column.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.column.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.column.tooltip.fields = [this.options.xField, this.options.yField, this.options.groupField];\n      }\n    }\n  }\n}\n\nregisterPlotType('groupedColumn', GroupedColumnLayer);\n"]}