{"version":3,"file":"label.js","sourceRoot":"","sources":["../../../../src/plots/column/component/label.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, each, deepMix } from '@antv/util';\nimport { IShape, Element, MappingDatum, _ORIGIN } from '../../../dependents';\nimport BaseLabel, { registerLabelComponent } from '../../../components/label/base';\nimport { TextStyle } from '../../../interface/config';\nimport { mappingColor, rgb2arr } from '../../../util/color';\nimport BBox from '../../../util/bbox';\nimport { IColumnLabel } from '../interface';\n\nexport default class ColumnLabel<L extends IColumnLabel = IColumnLabel> extends BaseLabel<L> {\n  protected getLabelItemAttrs(element: Element, index: number): TextStyle {\n    const { style, formatter } = this.options;\n    const mappingData: MappingDatum[] = [].concat(element.getModel().mappingData);\n    const value = this.getValue(element);\n\n    return deepMix({}, style, {\n      ...this.getPosition(element),\n      text: formatter\n        ? formatter(\n            value,\n            {\n              [_ORIGIN]: mappingData[0]?._origin,\n              mappingDatum: mappingData[0],\n              mappingDatumIndex: 0,\n              element,\n              elementIndex: index,\n            },\n            index\n          )\n        : value,\n      fill: this.getTextFill(element),\n      stroke: this.getTextStroke(element),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseLine(),\n    });\n  }\n\n  protected getDefaultOptions() {\n    const { theme } = this.layer;\n    const { label = {} } = theme;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      adjustPosition: true,\n      ...label,\n    };\n  }\n\n  protected adjustLabel(label: IShape, element: Element): void {\n    const { adjustPosition } = this.options;\n    if (adjustPosition) {\n      const offset = this.getDefaultOffset();\n      const labelRange = label.getBBox();\n      const shapeRange = this.getElementShapeBBox(element);\n      if (shapeRange.height <= labelRange.height) {\n        const yPosition = shapeRange.minY + this.options.offsetY - offset;\n        label.attr('y', yPosition);\n        label.attr('textBaseline', 'bottom');\n        label.attr('fill', this.options.style.fill);\n      }\n    }\n  }\n\n  protected getValue(element: Element): number | undefined | null {\n    return get(element.getData(), this.layer.options.yField);\n  }\n\n  protected getPosition(element: Element): { x: number; y: number } {\n    const offset = this.getDefaultOffset();\n    const value = this.getValue(element);\n    const bbox = this.getElementShapeBBox(element);\n    const { minX, minY, maxY, height, width } = bbox;\n    const { offsetX, offsetY, position } = this.options;\n    const x = minX + width / 2 + offsetX;\n    const dir = value > 0 ? -1 : 1;\n    let y;\n\n    if (position === 'top') {\n      const root = value > 0 ? minY : maxY;\n      y = root + offset * dir + offsetY;\n    } else if (position === 'bottom') {\n      const root = value > 0 ? maxY : minY;\n      y = root + offset * dir + offsetY;\n    } else {\n      y = minY + height / 2 + offsetY;\n    }\n\n    return { x, y };\n  }\n\n  protected getTextFill(element: Element) {\n    const { shape } = element;\n    if (this.options.adjustColor && this.options.position !== 'top') {\n      const shapeColor = shape.attr('fill');\n      const shapeOpacity = shape.attr('opacity') ? shape.attr('opacity') : 1;\n      const rgb = rgb2arr(shapeColor);\n      const gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / shapeOpacity;\n      const colorBand = [\n        { from: 0, to: 85, color: 'white' },\n        { from: 85, to: 170, color: '#F6F6F6' },\n        { from: 170, to: 255, color: 'black' },\n      ];\n      const reflect = mappingColor(colorBand, gray);\n      return reflect;\n    }\n    const defaultColor = this.options.style.fill;\n    return defaultColor;\n  }\n\n  protected getTextStroke(element: Element) {\n    const fill = this.getTextFill(element);\n    const { position, adjustColor } = this.options;\n    return position !== 'top' && adjustColor && fill !== 'black' ? null : undefined;\n  }\n\n  protected getElementShapeBBox(element: Element): BBox {\n    const { shape } = element;\n    const points = [];\n    each(shape.get('origin').points, (p) => {\n      points.push(this.coord.convertPoint(p));\n    });\n    const xValues = points.map((point) => point.x);\n    const xValuesMin = Math.min(...xValues);\n    const xValueMax = Math.max(...xValues);\n    const yValues = points.map((point) => point.y);\n    const yValuesMin = Math.min(...yValues);\n    const yValuesMax = Math.max(...yValues);\n    const bbox = new BBox(xValuesMin, yValuesMin, xValueMax - xValuesMin, yValuesMax - yValuesMin);\n    return bbox;\n  }\n\n  protected getTextAlign() {\n    return 'center';\n  }\n\n  protected getTextBaseLine() {\n    return 'middle';\n  }\n\n  protected getLabelOffset() {\n    // Column 的 offset 在 getPosition 中因 position 不同单独处理\n    return {\n      x: 0,\n      y: 0,\n    };\n  }\n}\n\nregisterLabelComponent('column', ColumnLabel);\n"]}