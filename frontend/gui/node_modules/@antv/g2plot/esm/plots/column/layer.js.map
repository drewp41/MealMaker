{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/column/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, has, each, clone } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { ElementOption } from '../../interface/config';\nimport ConversionTag from '../../components/conversion-tag';\nimport { extractScale } from '../../util/scale';\nimport responsiveMethods from './apply-responsive';\nimport './apply-responsive/theme';\nimport './component/label';\nimport './component/label-auto';\nimport * as EventParser from './event';\nimport './theme';\nimport { DataItem } from '../../interface/config';\nimport { getGeometryByType } from '../../util/view';\nimport { ColumnViewConfig } from './interface';\nimport { Maybe } from '../../interface/types';\n\nconst G2_GEOM_MAP = {\n  column: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'column',\n};\n\nexport interface ColumnLayerConfig extends ColumnViewConfig, LayerConfig {}\n\nexport default class BaseColumnLayer<T extends ColumnLayerConfig = ColumnLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      xAxis: {\n        visible: true,\n        tickLine: {\n          visible: false,\n        },\n        title: {\n          visible: true,\n        },\n      },\n      yAxis: {\n        nice: true,\n        title: {\n          visible: true,\n        },\n        label: {\n          visible: true,\n        },\n        grid: {\n          visible: true,\n        },\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      label: {\n        visible: false,\n        position: 'top',\n        adjustColor: true,\n      },\n      legend: {\n        visible: true,\n        position: 'top-left',\n      },\n      interactions: [\n        { type: 'tooltip' },\n        { type: 'active-region' },\n        { type: 'legend-active' },\n        { type: 'legend-filter' },\n      ],\n      conversionTag: {\n        visible: false,\n      },\n    });\n  }\n  public column: any;\n  public type: string = 'column';\n  public conversionTag?: ConversionTag;\n\n  public beforeInit() {\n    super.beforeInit();\n    /** 响应式图形 */\n    if (this.options.responsive && this.options.padding !== 'auto') {\n      this.applyResponsive('preRender');\n    }\n  }\n\n  public afterRender() {\n    const props = this.options;\n    this.renderLabel();\n    /** 响应式 */\n    if (this.options.responsive && this.options.padding !== 'auto') {\n      this.applyResponsive('afterRender');\n    }\n    if (props.conversionTag.visible) {\n      this.conversionTag = new ConversionTag({\n        view: this.view,\n        field: props.yField,\n        transpose: true,\n        animation: props.animation === false ? false : true,\n        ...props.conversionTag,\n      });\n    }\n    super.afterRender();\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected processData(originData?: DataItem[]) {\n    const { xField } = this.options;\n    const processedData = [];\n    each(originData, (data) => {\n      const d = clone(data);\n      d[xField] = d[xField].toString();\n      processedData.push(d);\n    });\n    return processedData;\n  }\n\n  protected scale() {\n    const { options } = this;\n    const scales = {};\n    /** 配置x-scale */\n    scales[options.xField] = { type: 'cat' };\n    if (has(options, 'xAxis')) {\n      extractScale(scales[options.xField], options.xAxis);\n    }\n    /** 配置y-scale */\n    scales[options.yField] = {};\n    if (has(options, 'yAxis')) {\n      extractScale(scales[options.yField], options.yAxis);\n    }\n    this.setConfig('scales', scales);\n    super.scale();\n  }\n\n  protected coord() {\n    return;\n  }\n\n  //eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected adjustColumn(column: ElementOption) {\n    return;\n  }\n\n  protected addGeometry() {\n    const { options } = this;\n    const column = getGeom('interval', 'main', {\n      positionFields: [options.xField, options.yField],\n      plot: this,\n    });\n    if (options.conversionTag.visible) {\n      this.setConfig(\n        'theme',\n        deepMix({}, this.getTheme(), {\n          columnWidthRatio: 1 / 3,\n        })\n      );\n    }\n    this.adjustColumn(column);\n    this.column = column;\n    if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n    this.setConfig('geometry', column);\n  }\n\n  protected geometryTooltip() {\n    this.column.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.column.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.column.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.column.tooltip.fields = [this.options.xField, this.options.yField];\n        if (this.options.colorField) {\n          this.column.tooltip.fields.push(this.options.colorField);\n        }\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    if (this.options.animation === false) {\n      /** 关闭动画 */\n      this.column.animate = false;\n    }\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  protected renderLabel() {\n    const { scales } = this.config;\n    const { label, yField } = this.options;\n    const scale = scales[yField];\n    if (label?.visible) {\n      const geometry = getGeometryByType(this.view, 'interval');\n      this.doRenderLabel(geometry, {\n        type: 'column',\n        formatter: scale.formatter && ((value: Maybe<string | number>) => scale.formatter(value)),\n        ...this.options.label,\n      });\n    }\n  }\n\n  private applyResponsive(stage) {\n    const methods = responsiveMethods[stage];\n    each(methods, (r) => {\n      const responsive = r;\n      responsive.method(this);\n    });\n  }\n}\n\nregisterPlotType('column', BaseColumnLayer);\n"]}