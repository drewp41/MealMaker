{"version":3,"file":"area-label.js","sourceRoot":"","sources":["../../../../../src/plots/stacked-area/component/label/area-label.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAGxD,IAAM,YAAY,GAAG,EAAE,CAAC;AACxB,IAAM,SAAS,GAAG,IAAI,CAAC;AACvB,IAAM,aAAa,GAAG,GAAG,CAAC;AAC1B,IAAM,UAAU,GAAG,EAAE,CAAC;AAEtB,SAAS,QAAQ,CAAC,MAAM;IACtB,IAAI,SAAS,GAAG,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,GAAG,QAAQ,CAAC;IACnB,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;IACpB,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC;QACb,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IACH,OAAO;QACL,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;QAClB,SAAS,WAAA;KACV,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK;IACpC,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC;QACb,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;YACb,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACnB;QACD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;YAChC,SAAS,GAAG,CAAC,CAAC;SACf;QACD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE;YACjC,UAAU,GAAG,CAAC,CAAC;SAChB;IACH,CAAC,CAAC,CAAC;IACH,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChE,CAAC;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,0CAA0C;IAC1C,IAAI,CAAC,CAAC;IACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChC,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACxB,MAAM;SACP;KACF;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAgBD;IAQE,mBAAY,GAAe;QANpB,cAAS,GAAY,KAAK,CAAC;QAI1B,gBAAW,GAAa,EAAE,CAAC;QAGjC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,cAAc,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAES,wBAAI,GAAd;QAAA,iBAMC;QALC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE;YAC3B,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,0BAAM,GAAb;QAAA,iBAoCC;QAnCC,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAChD,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;QACnD,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,UAAC,UAAU,EAAE,IAAI;YACnC,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,UAAU,EAAE;gBACd,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;gBACzD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;QACH,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,UAAC,CAAC,EAAE,KAAK;YACnB,IAAA,kBAA0C,EAAxC,gBAAK,EAAE,oBAAO,EAAE,oBAAwB,CAAC;YACjD,IAAM,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAM,SAAS,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACzC,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACrF,IAAM,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC3C,KAAK,EAAE,OAAO,CACZ,EAAE,EACF;oBACE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO;oBAChB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO;oBAChB,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,CAAC,CAAC,KAAK;oBACb,QAAQ,EAAE,SAAS;oBACnB,SAAS,EAAE,QAAQ;oBACnB,YAAY,EAAE,KAAK;iBACpB,EACD,KAAK,CACN;gBACD,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;YACH,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,yBAAK,GAAZ;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;IACH,CAAC;IAEM,wBAAI,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,wBAAI,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,2BAAO,GAAd;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,2BAAO,GAAd;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAES,qCAAiB,GAA3B;QACU,IAAA,uBAAK,CAAe;QAC5B,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;QACzB,OAAO,UAAU,CAAC,IAAI,CAAC;QACvB,OAAO;YACL,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,UAAU;YACjB,SAAS,EAAE,IAAI;SAChB,CAAC;IACJ,CAAC;IAES,6BAAS,GAAnB,UAAoB,MAAM,EAAE,IAAI;QACxB,IAAA,qBAAwC,EAAtC,kBAAM,EAAE,wBAA8B,CAAC;QAC/C,qBAAqB;QACrB,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACzC,IAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QACrF,eAAe;QACf,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,SAAS,GAAG;YAChB,MAAM,QAAA;YACN,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;YAChC,IAAI,EAAE,kBAAkB;YACxB,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;QACxG,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO;SACR;QACD,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC3B,IAAM,GAAG,GAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACd,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACvC,GAAG,CAAC,WAAW,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;QAC/C,OAAO,GAAG,CAAC;IACb,CAAC;IAEO,yCAAqB,GAA7B,UAA8B,IAAI,EAAE,UAAU,EAAE,MAAM;QACpD,IAAM,kBAAkB,GAAG,EAAE,CAAC;QAC9B,IAAM,IAAI,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,IAAI,EAAE;YAC5C,IAAM,EAAE,GAAG,YAAY,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YACtC,IAAM,EAAE,GAAG,YAAY,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YACtC,kBAAkB,CAAC,IAAI,CAAC;gBACtB,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACZ,CAAC,CAAC;SACJ;QACD,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAEO,6BAAS,GAAjB,UAAkB,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY;QACnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAM,OAAO,GAAG,UAAU,CAAC;YAC3B,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YACxC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAM,eAAe,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;YACpD,IAAI,UAAU,IAAI,eAAe,EAAE;gBACjC,OAAO,MAAM,CAAC;aACf;YACD,IAAI,UAAU,EAAE;gBACd,GAAG,GAAG,MAAM,CAAC;aACd;iBAAM;gBACL,GAAG,GAAG,MAAM,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,2BAAO,GAAf,UAAgB,MAAM;QACZ,IAAA,sBAAM,EAAE,oBAAK,EAAE,sBAAM,EAAE,kBAAI,EAAE,0BAAQ,CAAY;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;YACtB,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE;gBAClB,MAAM;aACP;YACD,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACrC,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC,2CAA2C;YACpE,IAAI,KAAK,GAAG,QAAQ,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAM,KAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,MAAM,GAAG,KAAK,EAAE;oBAClB,KAAK,GAAG,MAAM,CAAC;iBAChB;gBACD,IAAI,KAAG,GAAG,OAAO,EAAE;oBACjB,OAAO,GAAG,KAAG,CAAC;oBACd,YAAY,GAAG,MAAM,CAAC;iBACvB;gBACD,IAAI,KAAK,GAAG,OAAO,GAAG,MAAM,EAAE;oBAC5B,MAAM;iBACP;aACF;YACD,IAAI,KAAK,GAAG,OAAO,IAAI,MAAM,EAAE;gBAC7B,IAAI,QAAQ,EAAE;oBACZ,OAAO,IAAI,CAAC;iBACb;gBACD,OAAO;oBACL,CAAC,EAAE,EAAE;oBACL,EAAE,EAAE,OAAO;oBACX,EAAE,EAAE,YAAY;oBAChB,KAAK,OAAA;oBACL,MAAM,QAAA;iBACP,CAAC;aACH;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,gCAAY,GAApB,UAAqB,IAAI;QACvB,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC1D,UAAU,CAAC,QAAQ,GAAG,YAAY,CAAC;QACnC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC7C,KAAK,aACH,IAAI,MAAA,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,IACD,UAAU,CACd;SACF,CAAC,CAAC;QACH,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,+BAAW,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,MAAM,EAApB,CAAoB,CAAa,CAAC;IAChF,CAAC;IAES,+BAAW,GAArB,UAAsB,KAAK;QACzB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC5C,OAAO,YAAY,GAAG,WAAW,CAAC;SACnC;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IACH,gBAAC;AAAD,CAAC,AAvOD,IAuOC","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nimport { View, IGroup, Geometry } from '../../../../dependents';\n\nconst DEFAULT_SIZE = 12;\nconst TOLERANCE = 0.01;\nconst MAX_ITERATION = 100;\nconst MIN_HEIGHT = 12;\n\nfunction getRange(points) {\n  let maxHeight = -Infinity;\n  let min = Infinity;\n  let max = -Infinity;\n  each(points, (p) => {\n    min = Math.min(p.x, min);\n    max = Math.max(p.x, max);\n    const height = Math.abs(p.y[0] - p.y[1]);\n    maxHeight = Math.max(maxHeight, height);\n  });\n  return {\n    xRange: [min, max],\n    maxHeight,\n  };\n}\n\nfunction interpolateY(x, points, index) {\n  let leftPoint = points[0];\n  let rightPoint = points[points.length - 1];\n  each(points, (p) => {\n    if (p.x === x) {\n      return p.y[index];\n    }\n    if (p.x < x && p.x > leftPoint.x) {\n      leftPoint = p;\n    }\n    if (p.x > x && p.x < rightPoint.x) {\n      rightPoint = p;\n    }\n  });\n  const t = (x - leftPoint.x) / (rightPoint.x - leftPoint.x);\n  return leftPoint.y[index] * (1 - t) + rightPoint.y[index] * t;\n}\n\nfunction getXIndex(data, x) {\n  // tslint:disable-next-line: prefer-for-of\n  let i;\n  for (i = 0; i < data.length; i++) {\n    const d = data[i];\n    if (d.x === x || d.x > x) {\n      break;\n    }\n  }\n  return i;\n}\n\nexport interface AreaLabelConfig {\n  visible: boolean;\n  formatter?: (...args: any[]) => string;\n  offsetX?: number;\n  offsetY?: number;\n  style?: any;\n  autoScale?: boolean;\n}\n\nexport interface IAreaLabel extends AreaLabelConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class AreaLabel {\n  public options: AreaLabelConfig;\n  public destroyed: boolean = false;\n  protected plot: any;\n  protected view: View;\n  private container: IGroup;\n  private scaleFactor: number[] = [];\n\n  constructor(cfg: IAreaLabel) {\n    this.view = cfg.view;\n    this.plot = cfg.plot;\n    const defaultOptions = this.getDefaultOptions();\n    this.options = deepMix(defaultOptions, cfg, {});\n    this.init();\n  }\n\n  protected init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    const stackField = this.plot.options.stackField;\n    const groupedPoints = this.getGeometry().dataArray;\n    const labelPoints = [];\n    each(groupedPoints, (pointArray, name) => {\n      const labelPoint = this.drawLabel(pointArray, name);\n      if (labelPoint) {\n        labelPoints.push(deepMix({}, pointArray[0], labelPoint));\n        this.scaleFactor.push(labelPoint.scaleFactor);\n      }\n    });\n    const labelShapes = [];\n    each(labelPoints, (p, index) => {\n      const { style, offsetX, offsetY } = this.options;\n      const labelSize = this.getFontSize(index);\n      const formatter = this.options.formatter;\n      const content = formatter ? formatter(p._origin[stackField]) : p._origin[stackField];\n      const text = this.container.addShape('text', {\n        attrs: deepMix(\n          {},\n          {\n            x: p.x + offsetX,\n            y: p.y + offsetY,\n            text: content,\n            fill: p.color,\n            fontSize: labelSize,\n            textAlign: 'center',\n            textBaseline: 'top',\n          },\n          style\n        ),\n        name: 'label',\n      });\n      labelShapes.push(text);\n    });\n    this.plot.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    return this.container.getBBox();\n  }\n\n  protected getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = clone(theme.label.style);\n    labelStyle.stroke = null;\n    delete labelStyle.fill;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      style: labelStyle,\n      autoScale: true,\n    };\n  }\n\n  protected drawLabel(points, name) {\n    const { xRange, maxHeight } = getRange(points);\n    // 根据area宽度在x方向各点间做插值\n    const resolution = xRange[1] - xRange[0];\n    const interpolatedPoints = this.getInterpolatedPoints(xRange[0], resolution, points);\n    // 获取label的bbox\n    const bbox = this.getLabelBbox(name);\n    const fitOption = {\n      xRange,\n      aspect: bbox.width / bbox.height,\n      data: interpolatedPoints,\n      justTest: true,\n    };\n    const height = this.bisection(MIN_HEIGHT, maxHeight, this.testFit, fitOption, TOLERANCE, MAX_ITERATION);\n    if (height === null) {\n      return;\n    }\n    fitOption.justTest = false;\n    const fit: any = this.testFit(fitOption);\n    fit.x = fit.x;\n    fit.y = fit.y0 + (fit.y1 - fit.y0) / 2;\n    fit.scaleFactor = (height / bbox.height) * 0.2;\n    return fit;\n  }\n\n  private getInterpolatedPoints(minX, resolution, points) {\n    const interpolatedPoints = [];\n    const step = 2;\n    for (let i = minX; i < resolution; i += step) {\n      const y0 = interpolateY(i, points, 0);\n      const y1 = interpolateY(i, points, 1);\n      interpolatedPoints.push({\n        x: i,\n        y: [y0, y1],\n      });\n    }\n    return interpolatedPoints;\n  }\n\n  private bisection(min, max, test, testOption, tolerance, maxIteration) {\n    for (let i = 0; i < maxIteration; i++) {\n      const middle = (min + max) / 2;\n      const options = testOption;\n      options.height = middle;\n      options.width = middle * options.aspect;\n      const passesTest = test(options);\n      const withinTolerance = (max - min) / 2 < tolerance;\n      if (passesTest && withinTolerance) {\n        return middle;\n      }\n      if (passesTest) {\n        min = middle;\n      } else {\n        max = middle;\n      }\n    }\n    return null;\n  }\n\n  private testFit(option) {\n    const { xRange, width, height, data, justTest } = option;\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      const x0 = d.x;\n      const x1 = x0 + width;\n      if (x1 > xRange[1]) {\n        break;\n      }\n      const x1_index = getXIndex(data, x1);\n      let ceiling = -Infinity;\n      let ceilingFloor = null; // 保存ceiling时对应的bottom位置，ceil和floor不一定是一对坐标\n      let floor = Infinity;\n      for (let j = i; j < x1_index; j++) {\n        const top = data[j].y[1];\n        const bottom = data[j].y[0];\n        if (bottom < floor) {\n          floor = bottom;\n        }\n        if (top > ceiling) {\n          ceiling = top;\n          ceilingFloor = bottom;\n        }\n        if (floor - ceiling < height) {\n          break;\n        }\n      }\n      if (floor - ceiling >= height) {\n        if (justTest) {\n          return true;\n        }\n        return {\n          x: x0,\n          y0: ceiling,\n          y1: ceilingFloor,\n          width,\n          height,\n        };\n      }\n    }\n    return false;\n  }\n\n  private getLabelBbox(text) {\n    const labelStyle = clone(this.plot.theme.label.textStyle);\n    labelStyle.fontSize = DEFAULT_SIZE;\n    const tShape = this.container.addShape('text', {\n      attrs: {\n        text,\n        x: 0,\n        y: 0,\n        ...labelStyle,\n      },\n    });\n    const bbox = tShape.getBBox();\n    tShape.remove();\n    return bbox;\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geom) => geom.type === 'area') as Geometry;\n  }\n\n  protected getFontSize(index) {\n    if (this.options.autoScale) {\n      const scaleFactor = this.scaleFactor[index];\n      return DEFAULT_SIZE * scaleFactor;\n    }\n    return DEFAULT_SIZE;\n  }\n}\n"]}