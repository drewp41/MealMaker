{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/stacked-area/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, get, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport { ElementOption, Label } from '../../interface/config';\nimport BaseArea from '../area/layer';\nimport { getPlotComponents } from './component';\nimport './component/label/area-point';\nimport './component/label/area-point-auto';\nimport { StackedAreaViewConfig } from './interface';\nimport './theme';\n\nexport interface StackedAreaLayerConfig extends StackedAreaViewConfig, LayerConfig {}\n\nexport default class StackedAreaLayer<T extends StackedAreaLayerConfig = StackedAreaLayerConfig> extends BaseArea<T> {\n  protected plotComponents: any[] = [];\n\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      label: {\n        visible: false,\n        type: 'area',\n      },\n    });\n  }\n\n  public type: string = 'stackedArea';\n\n  public beforeInit() {\n    const visible = get(this.options, ['label', 'visible']);\n    const type = get(this.options, ['label', 'type']);\n    const options: any = this.options;\n    if (visible) {\n      if (type === 'line') {\n        options.lineLabel = this.options.label;\n      }\n      if (type === 'area') {\n        options.areaLabel = this.options.label;\n      }\n    }\n    super.beforeInit();\n  }\n\n  protected label() {\n    const props = this.options;\n    const label = props.label as Label;\n\n    if (label && label.visible === false) {\n      if (this.line) {\n        this.line.label = false;\n      }\n      if (this.point) {\n        this.point.label = false;\n      }\n      this.area.label = false;\n      return;\n    }\n  }\n\n  protected adjustArea(ele: ElementOption) {\n    ele.adjust = [\n      {\n        type: 'stack',\n      },\n    ];\n  }\n\n  protected adjustLine(ele: ElementOption) {\n    ele.adjust = [\n      {\n        type: 'stack',\n      },\n    ];\n  }\n\n  protected adjustPoint(ele: ElementOption) {\n    ele.adjust = [\n      {\n        type: 'stack',\n      },\n    ];\n  }\n\n  public afterRender() {\n    this.renderPlotComponents();\n    this.options.responsive = false;\n    super.afterRender();\n  }\n\n  protected geometryTooltip() {\n    this.area.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.area.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.area.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.area.tooltip.fields = [this.options.xField, this.options.yField, this.options.stackField];\n      }\n    }\n  }\n\n  protected renderPlotComponents() {\n    const componentsType = ['areaLabel', 'lineLabel'];\n    each(componentsType, (t) => {\n      const cfg = {\n        view: this.view,\n        plot: this,\n        ...this.options[t],\n      };\n      const component = getPlotComponents(this, t, cfg);\n      if (component) {\n        component.render();\n        this.plotComponents.push(component);\n      }\n    });\n  }\n}\n\nregisterPlotType('stackedArea', StackedAreaLayer);\n"]}