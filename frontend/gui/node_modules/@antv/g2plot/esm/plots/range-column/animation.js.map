{"version":3,"file":"animation.js","sourceRoot":"","sources":["../../../src/plots/range-column/animation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAEzC,UAAU;AACV,IAAI,UAAoB,CAAC;AAEzB,SAAS,wBAAwB,CAAC,KAAK,EAAE,UAAU;IACjD,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IAC7B,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,KAAK,CAAC,OAAO,CAAC;QACZ,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE;YACL,CAAC,EAAE,IAAI,CAAC,IAAI;YACZ,CAAC,EAAE,OAAO;YACV,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,CAAC;SACV;KACF,CAAC,CAAC;IACH,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,MAAM,CAAC,OAAO,CACZ;QACE,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,CAAC,EAAE,IAAI,CAAC,IAAI;KACb,EACD,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,MAAM,EACjB;QACE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC,EACD,UAAU,CAAC,KAAK,CACjB,CAAC;AACJ,CAAC;AAED,wBAAwB,CAAC,aAAa,GAAG,0BAA0B,CAAC;AAEpE,MAAM,UAAU,aAAa,CAAC,MAAM;IAClC,UAAU,GAAG,MAAM,CAAC;AACtB,CAAC;AAED,SAAS,wBAAwB,CAAC,KAAK,EAAE,UAAU;IACjD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvD,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACzC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC7B,KAAK,CAAC,OAAO,CACX;QACE,IAAI,EAAE,MAAM;KACb,EACD,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,MAAM,EACjB,UAAU,CAAC,QAAQ,EACnB,GAAG,CACJ,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAK;IACtB,IAAA,aAAE,CAAW;IACrB,IAAI,MAAM,CAAC;IACX,IAAI,CAAC,UAAU,EAAE,UAAC,CAAC;QACjB,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;YACf,MAAM,GAAG,CAAC,CAAC;SACZ;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,wBAAwB,CAAC,aAAa,GAAG,0BAA0B,CAAC;AAEpE,iBAAiB,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACxE,iBAAiB,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC","sourcesContent":["import { IShape, registerAnimation } from '../../dependents';\nimport { clone, each } from '@antv/util';\n\n// 记录之前的状态\nlet shapeCache: IShape[];\n\nfunction clipInFromCenterVertical(shape, animateCfg) {\n  const bbox = shape.getBBox();\n  const centerY = bbox.minY + bbox.height / 2;\n  shape.setClip({\n    type: 'rect',\n    attrs: {\n      x: bbox.minX,\n      y: centerY,\n      width: bbox.width,\n      height: 0,\n    },\n  });\n  const cliper = shape.get('clipShape');\n  cliper.animate(\n    {\n      height: bbox.height,\n      y: bbox.minY,\n    },\n    animateCfg.duration,\n    animateCfg.easing,\n    () => {\n      shape.setClip(null);\n    },\n    animateCfg.delay\n  );\n}\n\nclipInFromCenterVertical.animationName = 'clipInFromCenterVertical';\n\nexport function setShapeCache(shapes) {\n  shapeCache = shapes;\n}\n\nfunction updateFromCenterVertical(shape, animateCfg) {\n  const fromPath = getShapeFromCache(shape).attr('path');\n  const toPath = clone(shape.attr('path'));\n  shape.attr('path', fromPath);\n  shape.animate(\n    {\n      path: toPath,\n    },\n    animateCfg.duration,\n    animateCfg.easing,\n    animateCfg.callback,\n    100\n  );\n}\n\nfunction getShapeFromCache(shape) {\n  const { id } = shape;\n  let target;\n  each(shapeCache, (s) => {\n    if (s.id === id) {\n      target = s;\n    }\n  });\n  return target;\n}\n\nupdateFromCenterVertical.animationName = 'updateFromCenterVertical';\n\nregisterAnimation('clipInFromCenterVertical', clipInFromCenterVertical);\nregisterAnimation('updateFromCenterVertical', updateFromCenterVertical);\n"]}