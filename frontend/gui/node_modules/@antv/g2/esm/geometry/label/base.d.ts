import { Coordinate } from '../../dependents';
import { LooseObject, MappingDatum } from '../../interface';
import Geometry from '../base';
import { LabelCfg, LabelItem, LabelPointCfg } from './interface';
export declare type GeometryLabelConstructor = new (cfg: any) => GeometryLabel;
/**
 * Geometry Label 基类，用于解析 Geometry 下所有 label 的配置项信息
 */
export default class GeometryLabel {
    /** geometry 实例 */
    readonly geometry: Geometry;
    /** 坐标系实例 */
    protected coordinate: Coordinate;
    /** 默认的 label 配置 */
    protected defaultLabelCfg: LooseObject;
    constructor(geometry: Geometry);
    /**
     * 根据当前 shape 对应的映射数据获取对应的 label 配置信息。
     * @param mapppingArray 映射后的绘制数据
     * @returns
     */
    getLabelItems(mapppingArray: MappingDatum[]): LabelItem[];
    /**
     * 设置 label 位置
     * @param labelPointCfg
     * @param mappingData
     * @param index
     * @param position
     */
    protected setLabelPosition(labelPointCfg: LabelPointCfg, mappingData: MappingDatum, index: number, position: string): void;
    /**
     * 生成文本线配置
     * @param item
     */
    protected lineToLabel(item: LabelItem): void;
    /**
     * 调整 labels
     * @param items
     * @returns
     */
    protected adjustItems(items: LabelItem[]): LabelItem[];
    /**
     * 绘制文本线
     * @param items
     */
    protected drawLines(items: LabelItem[]): void;
    /**
     * 获取文本默认偏移量
     * @param offset
     * @returns
     */
    protected getDefaultOffset(offset: number): number;
    /**
     * 获取每个 label 的偏移量
     * @param labelCfg
     * @param index
     * @param total
     * @returns
     */
    protected getLabelOffset(labelCfg: LabelCfg, index: number, total: number): {
        x: number;
        y: number;
    };
    /**
     * 获取每个 label 的位置
     * @param labelCfg
     * @param mappingData
     * @param index
     * @returns label point
     */
    protected getLabelPoint(labelCfg: LabelCfg, mappingData: MappingDatum, index: number): LabelPointCfg;
    /**
     * 获取文本的对齐方式
     * @param item
     * @param index
     * @param total
     * @returns
     */
    protected getLabelAlign(item: LabelItem, index: number, total: number): string;
    private getItems;
    private getLabelCfgs;
    private getLabelText;
    private getOffsetVector;
}
